// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module reduce_ap_fixed_16_Op_max_ap_fixed_6_1_0_0_0_s (
        ap_clk,
        ap_rst,
        x_0_V_read,
        x_1_V_read,
        x_2_V_read,
        x_3_V_read,
        x_4_V_read,
        x_5_V_read,
        x_6_V_read,
        x_7_V_read,
        x_8_V_read,
        x_9_V_read,
        x_10_V_read,
        x_11_V_read,
        x_12_V_read,
        x_13_V_read,
        x_14_V_read,
        x_15_V_read,
        ap_return,
        ap_ce
);


input   ap_clk;
input   ap_rst;
input  [5:0] x_0_V_read;
input  [5:0] x_1_V_read;
input  [5:0] x_2_V_read;
input  [5:0] x_3_V_read;
input  [5:0] x_4_V_read;
input  [5:0] x_5_V_read;
input  [5:0] x_6_V_read;
input  [5:0] x_7_V_read;
input  [5:0] x_8_V_read;
input  [5:0] x_9_V_read;
input  [5:0] x_10_V_read;
input  [5:0] x_11_V_read;
input  [5:0] x_12_V_read;
input  [5:0] x_13_V_read;
input  [5:0] x_14_V_read;
input  [5:0] x_15_V_read;
output  [5:0] ap_return;
input   ap_ce;

reg[5:0] ap_return;

wire   [5:0] select_ln86_fu_136_p3;
reg   [5:0] select_ln86_reg_324;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_11001;
wire   [5:0] select_ln86_1_fu_150_p3;
reg   [5:0] select_ln86_1_reg_329;
wire   [0:0] icmp_ln1496_2_fu_158_p2;
reg   [0:0] icmp_ln1496_2_reg_334;
wire   [5:0] select_ln86_3_fu_170_p3;
reg   [5:0] select_ln86_3_reg_339;
wire   [5:0] select_ln86_4_fu_184_p3;
reg   [5:0] select_ln86_4_reg_344;
wire   [0:0] icmp_ln1496_5_fu_192_p2;
reg   [0:0] icmp_ln1496_5_reg_349;
wire   [5:0] select_ln86_7_fu_204_p3;
reg   [5:0] select_ln86_7_reg_354;
wire   [5:0] select_ln86_8_fu_218_p3;
reg   [5:0] select_ln86_8_reg_359;
wire   [0:0] icmp_ln1496_9_fu_226_p2;
reg   [0:0] icmp_ln1496_9_reg_364;
wire   [5:0] select_ln86_10_fu_238_p3;
reg   [5:0] select_ln86_10_reg_369;
wire   [5:0] select_ln86_11_fu_252_p3;
reg   [5:0] select_ln86_11_reg_374;
wire   [0:0] icmp_ln1496_12_fu_260_p2;
reg   [0:0] icmp_ln1496_12_reg_379;
wire   [5:0] select_ln86_6_fu_282_p3;
reg   [5:0] select_ln86_6_reg_384;
wire   [5:0] select_ln86_13_fu_306_p3;
reg   [5:0] select_ln86_13_reg_390;
wire    ap_block_pp0_stage0;
wire   [0:0] icmp_ln1496_fu_130_p2;
wire   [0:0] icmp_ln1496_1_fu_144_p2;
wire   [0:0] icmp_ln1496_3_fu_164_p2;
wire   [0:0] icmp_ln1496_4_fu_178_p2;
wire   [0:0] icmp_ln1496_7_fu_198_p2;
wire   [0:0] icmp_ln1496_8_fu_212_p2;
wire   [0:0] icmp_ln1496_10_fu_232_p2;
wire   [0:0] icmp_ln1496_11_fu_246_p2;
wire   [5:0] select_ln86_2_fu_266_p3;
wire   [5:0] select_ln86_5_fu_271_p3;
wire   [0:0] icmp_ln1496_6_fu_276_p2;
wire   [5:0] select_ln86_9_fu_290_p3;
wire   [5:0] select_ln86_12_fu_295_p3;
wire   [0:0] icmp_ln1496_13_fu_300_p2;
wire   [0:0] icmp_ln1496_14_fu_314_p2;
wire   [5:0] select_ln86_14_fu_318_p3;
reg    ap_ce_reg;
reg   [5:0] x_0_V_read_int_reg;
reg   [5:0] x_1_V_read_int_reg;
reg   [5:0] x_2_V_read_int_reg;
reg   [5:0] x_3_V_read_int_reg;
reg   [5:0] x_4_V_read_int_reg;
reg   [5:0] x_5_V_read_int_reg;
reg   [5:0] x_6_V_read_int_reg;
reg   [5:0] x_7_V_read_int_reg;
reg   [5:0] x_8_V_read_int_reg;
reg   [5:0] x_9_V_read_int_reg;
reg   [5:0] x_10_V_read_int_reg;
reg   [5:0] x_11_V_read_int_reg;
reg   [5:0] x_12_V_read_int_reg;
reg   [5:0] x_13_V_read_int_reg;
reg   [5:0] x_14_V_read_int_reg;
reg   [5:0] x_15_V_read_int_reg;
reg   [5:0] ap_return_int_reg;

always @ (posedge ap_clk) begin
    ap_ce_reg <= ap_ce;
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce_reg)) begin
        ap_return_int_reg <= select_ln86_14_fu_318_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        icmp_ln1496_12_reg_379 <= icmp_ln1496_12_fu_260_p2;
        icmp_ln1496_2_reg_334 <= icmp_ln1496_2_fu_158_p2;
        icmp_ln1496_5_reg_349 <= icmp_ln1496_5_fu_192_p2;
        icmp_ln1496_9_reg_364 <= icmp_ln1496_9_fu_226_p2;
        select_ln86_10_reg_369 <= select_ln86_10_fu_238_p3;
        select_ln86_11_reg_374 <= select_ln86_11_fu_252_p3;
        select_ln86_13_reg_390 <= select_ln86_13_fu_306_p3;
        select_ln86_1_reg_329 <= select_ln86_1_fu_150_p3;
        select_ln86_3_reg_339 <= select_ln86_3_fu_170_p3;
        select_ln86_4_reg_344 <= select_ln86_4_fu_184_p3;
        select_ln86_6_reg_384 <= select_ln86_6_fu_282_p3;
        select_ln86_7_reg_354 <= select_ln86_7_fu_204_p3;
        select_ln86_8_reg_359 <= select_ln86_8_fu_218_p3;
        select_ln86_reg_324 <= select_ln86_fu_136_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        x_0_V_read_int_reg <= x_0_V_read;
        x_10_V_read_int_reg <= x_10_V_read;
        x_11_V_read_int_reg <= x_11_V_read;
        x_12_V_read_int_reg <= x_12_V_read;
        x_13_V_read_int_reg <= x_13_V_read;
        x_14_V_read_int_reg <= x_14_V_read;
        x_15_V_read_int_reg <= x_15_V_read;
        x_1_V_read_int_reg <= x_1_V_read;
        x_2_V_read_int_reg <= x_2_V_read;
        x_3_V_read_int_reg <= x_3_V_read;
        x_4_V_read_int_reg <= x_4_V_read;
        x_5_V_read_int_reg <= x_5_V_read;
        x_6_V_read_int_reg <= x_6_V_read;
        x_7_V_read_int_reg <= x_7_V_read;
        x_8_V_read_int_reg <= x_8_V_read;
        x_9_V_read_int_reg <= x_9_V_read;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return = ap_return_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return = select_ln86_14_fu_318_p3;
    end
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign icmp_ln1496_10_fu_232_p2 = (($signed(x_12_V_read_int_reg) < $signed(x_13_V_read_int_reg)) ? 1'b1 : 1'b0);

assign icmp_ln1496_11_fu_246_p2 = (($signed(x_14_V_read_int_reg) < $signed(x_15_V_read_int_reg)) ? 1'b1 : 1'b0);

assign icmp_ln1496_12_fu_260_p2 = (($signed(select_ln86_10_fu_238_p3) < $signed(select_ln86_11_fu_252_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1496_13_fu_300_p2 = (($signed(select_ln86_9_fu_290_p3) < $signed(select_ln86_12_fu_295_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1496_14_fu_314_p2 = (($signed(select_ln86_6_reg_384) < $signed(select_ln86_13_reg_390)) ? 1'b1 : 1'b0);

assign icmp_ln1496_1_fu_144_p2 = (($signed(x_2_V_read_int_reg) < $signed(x_3_V_read_int_reg)) ? 1'b1 : 1'b0);

assign icmp_ln1496_2_fu_158_p2 = (($signed(select_ln86_fu_136_p3) < $signed(select_ln86_1_fu_150_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1496_3_fu_164_p2 = (($signed(x_4_V_read_int_reg) < $signed(x_5_V_read_int_reg)) ? 1'b1 : 1'b0);

assign icmp_ln1496_4_fu_178_p2 = (($signed(x_6_V_read_int_reg) < $signed(x_7_V_read_int_reg)) ? 1'b1 : 1'b0);

assign icmp_ln1496_5_fu_192_p2 = (($signed(select_ln86_3_fu_170_p3) < $signed(select_ln86_4_fu_184_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1496_6_fu_276_p2 = (($signed(select_ln86_2_fu_266_p3) < $signed(select_ln86_5_fu_271_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1496_7_fu_198_p2 = (($signed(x_8_V_read_int_reg) < $signed(x_9_V_read_int_reg)) ? 1'b1 : 1'b0);

assign icmp_ln1496_8_fu_212_p2 = (($signed(x_10_V_read_int_reg) < $signed(x_11_V_read_int_reg)) ? 1'b1 : 1'b0);

assign icmp_ln1496_9_fu_226_p2 = (($signed(select_ln86_7_fu_204_p3) < $signed(select_ln86_8_fu_218_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1496_fu_130_p2 = (($signed(x_0_V_read_int_reg) < $signed(x_1_V_read_int_reg)) ? 1'b1 : 1'b0);

assign select_ln86_10_fu_238_p3 = ((icmp_ln1496_10_fu_232_p2[0:0] === 1'b1) ? x_13_V_read_int_reg : x_12_V_read_int_reg);

assign select_ln86_11_fu_252_p3 = ((icmp_ln1496_11_fu_246_p2[0:0] === 1'b1) ? x_15_V_read_int_reg : x_14_V_read_int_reg);

assign select_ln86_12_fu_295_p3 = ((icmp_ln1496_12_reg_379[0:0] === 1'b1) ? select_ln86_11_reg_374 : select_ln86_10_reg_369);

assign select_ln86_13_fu_306_p3 = ((icmp_ln1496_13_fu_300_p2[0:0] === 1'b1) ? select_ln86_12_fu_295_p3 : select_ln86_9_fu_290_p3);

assign select_ln86_14_fu_318_p3 = ((icmp_ln1496_14_fu_314_p2[0:0] === 1'b1) ? select_ln86_13_reg_390 : select_ln86_6_reg_384);

assign select_ln86_1_fu_150_p3 = ((icmp_ln1496_1_fu_144_p2[0:0] === 1'b1) ? x_3_V_read_int_reg : x_2_V_read_int_reg);

assign select_ln86_2_fu_266_p3 = ((icmp_ln1496_2_reg_334[0:0] === 1'b1) ? select_ln86_1_reg_329 : select_ln86_reg_324);

assign select_ln86_3_fu_170_p3 = ((icmp_ln1496_3_fu_164_p2[0:0] === 1'b1) ? x_5_V_read_int_reg : x_4_V_read_int_reg);

assign select_ln86_4_fu_184_p3 = ((icmp_ln1496_4_fu_178_p2[0:0] === 1'b1) ? x_7_V_read_int_reg : x_6_V_read_int_reg);

assign select_ln86_5_fu_271_p3 = ((icmp_ln1496_5_reg_349[0:0] === 1'b1) ? select_ln86_4_reg_344 : select_ln86_3_reg_339);

assign select_ln86_6_fu_282_p3 = ((icmp_ln1496_6_fu_276_p2[0:0] === 1'b1) ? select_ln86_5_fu_271_p3 : select_ln86_2_fu_266_p3);

assign select_ln86_7_fu_204_p3 = ((icmp_ln1496_7_fu_198_p2[0:0] === 1'b1) ? x_9_V_read_int_reg : x_8_V_read_int_reg);

assign select_ln86_8_fu_218_p3 = ((icmp_ln1496_8_fu_212_p2[0:0] === 1'b1) ? x_11_V_read_int_reg : x_10_V_read_int_reg);

assign select_ln86_9_fu_290_p3 = ((icmp_ln1496_9_reg_364[0:0] === 1'b1) ? select_ln86_8_reg_359 : select_ln86_7_reg_354);

assign select_ln86_fu_136_p3 = ((icmp_ln1496_fu_130_p2[0:0] === 1'b1) ? x_1_V_read_int_reg : x_0_V_read_int_reg);

endmodule //reduce_ap_fixed_16_Op_max_ap_fixed_6_1_0_0_0_s
