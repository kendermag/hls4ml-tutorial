// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "dense_array_array_ap_fixed_14_6_5_3_0_16u_config22_s.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic dense_array_array_ap_fixed_14_6_5_3_0_16u_config22_s::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic dense_array_array_ap_fixed_14_6_5_3_0_16u_config22_s::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<3> dense_array_array_ap_fixed_14_6_5_3_0_16u_config22_s::ap_ST_fsm_state1 = "1";
const sc_lv<3> dense_array_array_ap_fixed_14_6_5_3_0_16u_config22_s::ap_ST_fsm_state2 = "10";
const sc_lv<3> dense_array_array_ap_fixed_14_6_5_3_0_16u_config22_s::ap_ST_fsm_state3 = "100";
const sc_lv<32> dense_array_array_ap_fixed_14_6_5_3_0_16u_config22_s::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> dense_array_array_ap_fixed_14_6_5_3_0_16u_config22_s::ap_const_lv32_2 = "10";
const sc_lv<32> dense_array_array_ap_fixed_14_6_5_3_0_16u_config22_s::ap_const_lv32_1 = "1";
const bool dense_array_array_ap_fixed_14_6_5_3_0_16u_config22_s::ap_const_boolean_1 = true;

dense_array_array_ap_fixed_14_6_5_3_0_16u_config22_s::dense_array_array_ap_fixed_14_6_5_3_0_16u_config22_s(sc_module_name name) : sc_module(name), mVcdFile(0) {
    grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136 = new dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s("grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136");
    grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136->ap_clk(ap_clk);
    grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136->ap_rst(ap_rst);
    grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136->ap_start(grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136_ap_start);
    grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136->ap_done(grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136_ap_done);
    grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136->ap_idle(grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136_ap_idle);
    grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136->ap_ready(grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136_ap_ready);
    grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136->data_0_V_read(data_0_V_reg_238);
    grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136->data_1_V_read(data_1_V_reg_243);
    grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136->data_2_V_read(data_2_V_reg_248);
    grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136->data_3_V_read(data_3_V_reg_253);
    grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136->data_4_V_read(data_4_V_reg_258);
    grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136->ap_return_0(grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136_ap_return_0);
    grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136->ap_return_1(grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136_ap_return_1);
    grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136->ap_return_2(grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136_ap_return_2);
    grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136->ap_return_3(grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136_ap_return_3);
    grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136->ap_return_4(grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136_ap_return_4);
    grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136->ap_return_5(grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136_ap_return_5);
    grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136->ap_return_6(grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136_ap_return_6);
    grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136->ap_return_7(grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136_ap_return_7);
    grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136->ap_return_8(grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136_ap_return_8);
    grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136->ap_return_9(grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136_ap_return_9);
    grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136->ap_return_10(grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136_ap_return_10);
    grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136->ap_return_11(grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136_ap_return_11);
    grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136->ap_return_12(grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136_ap_return_12);
    grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136->ap_return_13(grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136_ap_return_13);
    grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136->ap_return_14(grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136_ap_return_14);
    grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136->ap_return_15(grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136_ap_return_15);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( io_acc_block_signal_op4 );

    SC_METHOD(thread_ap_block_state1_ignore_call28);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( io_acc_block_signal_op4 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( io_acc_block_signal_op51 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( real_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( internal_ap_ready );

    SC_METHOD(thread_data_stream_V_data_0_V_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( data_stream_V_data_0_V_empty_n );

    SC_METHOD(thread_data_stream_V_data_0_V_read);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( io_acc_block_signal_op4 );

    SC_METHOD(thread_data_stream_V_data_1_V_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( data_stream_V_data_1_V_empty_n );

    SC_METHOD(thread_data_stream_V_data_1_V_read);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( io_acc_block_signal_op4 );

    SC_METHOD(thread_data_stream_V_data_2_V_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( data_stream_V_data_2_V_empty_n );

    SC_METHOD(thread_data_stream_V_data_2_V_read);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( io_acc_block_signal_op4 );

    SC_METHOD(thread_data_stream_V_data_3_V_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( data_stream_V_data_3_V_empty_n );

    SC_METHOD(thread_data_stream_V_data_3_V_read);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( io_acc_block_signal_op4 );

    SC_METHOD(thread_data_stream_V_data_4_V_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( data_stream_V_data_4_V_empty_n );

    SC_METHOD(thread_data_stream_V_data_4_V_read);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( io_acc_block_signal_op4 );

    SC_METHOD(thread_grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136_ap_start);
    sensitive << ( grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136_ap_start_reg );

    SC_METHOD(thread_internal_ap_ready);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( io_acc_block_signal_op51 );

    SC_METHOD(thread_io_acc_block_signal_op4);
    sensitive << ( data_stream_V_data_0_V_empty_n );
    sensitive << ( data_stream_V_data_1_V_empty_n );
    sensitive << ( data_stream_V_data_2_V_empty_n );
    sensitive << ( data_stream_V_data_3_V_empty_n );
    sensitive << ( data_stream_V_data_4_V_empty_n );

    SC_METHOD(thread_io_acc_block_signal_op51);
    sensitive << ( res_stream_V_data_0_V_full_n );
    sensitive << ( res_stream_V_data_1_V_full_n );
    sensitive << ( res_stream_V_data_2_V_full_n );
    sensitive << ( res_stream_V_data_3_V_full_n );
    sensitive << ( res_stream_V_data_4_V_full_n );
    sensitive << ( res_stream_V_data_5_V_full_n );
    sensitive << ( res_stream_V_data_6_V_full_n );
    sensitive << ( res_stream_V_data_7_V_full_n );
    sensitive << ( res_stream_V_data_8_V_full_n );
    sensitive << ( res_stream_V_data_9_V_full_n );
    sensitive << ( res_stream_V_data_10_V_full_n );
    sensitive << ( res_stream_V_data_11_V_full_n );
    sensitive << ( res_stream_V_data_12_V_full_n );
    sensitive << ( res_stream_V_data_13_V_full_n );
    sensitive << ( res_stream_V_data_14_V_full_n );
    sensitive << ( res_stream_V_data_15_V_full_n );

    SC_METHOD(thread_real_start);
    sensitive << ( ap_start );
    sensitive << ( start_full_n );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_res_stream_V_data_0_V_blk_n);
    sensitive << ( res_stream_V_data_0_V_full_n );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_res_stream_V_data_0_V_din);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_data_0_V_reg_263 );
    sensitive << ( io_acc_block_signal_op51 );

    SC_METHOD(thread_res_stream_V_data_0_V_write);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( io_acc_block_signal_op51 );

    SC_METHOD(thread_res_stream_V_data_10_V_blk_n);
    sensitive << ( res_stream_V_data_10_V_full_n );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_res_stream_V_data_10_V_din);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_data_10_V_reg_313 );
    sensitive << ( io_acc_block_signal_op51 );

    SC_METHOD(thread_res_stream_V_data_10_V_write);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( io_acc_block_signal_op51 );

    SC_METHOD(thread_res_stream_V_data_11_V_blk_n);
    sensitive << ( res_stream_V_data_11_V_full_n );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_res_stream_V_data_11_V_din);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_data_11_V_reg_318 );
    sensitive << ( io_acc_block_signal_op51 );

    SC_METHOD(thread_res_stream_V_data_11_V_write);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( io_acc_block_signal_op51 );

    SC_METHOD(thread_res_stream_V_data_12_V_blk_n);
    sensitive << ( res_stream_V_data_12_V_full_n );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_res_stream_V_data_12_V_din);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_data_12_V_reg_323 );
    sensitive << ( io_acc_block_signal_op51 );

    SC_METHOD(thread_res_stream_V_data_12_V_write);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( io_acc_block_signal_op51 );

    SC_METHOD(thread_res_stream_V_data_13_V_blk_n);
    sensitive << ( res_stream_V_data_13_V_full_n );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_res_stream_V_data_13_V_din);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_data_13_V_reg_328 );
    sensitive << ( io_acc_block_signal_op51 );

    SC_METHOD(thread_res_stream_V_data_13_V_write);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( io_acc_block_signal_op51 );

    SC_METHOD(thread_res_stream_V_data_14_V_blk_n);
    sensitive << ( res_stream_V_data_14_V_full_n );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_res_stream_V_data_14_V_din);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_data_14_V_reg_333 );
    sensitive << ( io_acc_block_signal_op51 );

    SC_METHOD(thread_res_stream_V_data_14_V_write);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( io_acc_block_signal_op51 );

    SC_METHOD(thread_res_stream_V_data_15_V_blk_n);
    sensitive << ( res_stream_V_data_15_V_full_n );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_res_stream_V_data_15_V_din);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_data_15_V_reg_338 );
    sensitive << ( io_acc_block_signal_op51 );

    SC_METHOD(thread_res_stream_V_data_15_V_write);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( io_acc_block_signal_op51 );

    SC_METHOD(thread_res_stream_V_data_1_V_blk_n);
    sensitive << ( res_stream_V_data_1_V_full_n );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_res_stream_V_data_1_V_din);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_data_1_V_reg_268 );
    sensitive << ( io_acc_block_signal_op51 );

    SC_METHOD(thread_res_stream_V_data_1_V_write);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( io_acc_block_signal_op51 );

    SC_METHOD(thread_res_stream_V_data_2_V_blk_n);
    sensitive << ( res_stream_V_data_2_V_full_n );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_res_stream_V_data_2_V_din);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_data_2_V_reg_273 );
    sensitive << ( io_acc_block_signal_op51 );

    SC_METHOD(thread_res_stream_V_data_2_V_write);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( io_acc_block_signal_op51 );

    SC_METHOD(thread_res_stream_V_data_3_V_blk_n);
    sensitive << ( res_stream_V_data_3_V_full_n );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_res_stream_V_data_3_V_din);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_data_3_V_reg_278 );
    sensitive << ( io_acc_block_signal_op51 );

    SC_METHOD(thread_res_stream_V_data_3_V_write);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( io_acc_block_signal_op51 );

    SC_METHOD(thread_res_stream_V_data_4_V_blk_n);
    sensitive << ( res_stream_V_data_4_V_full_n );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_res_stream_V_data_4_V_din);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_data_4_V_reg_283 );
    sensitive << ( io_acc_block_signal_op51 );

    SC_METHOD(thread_res_stream_V_data_4_V_write);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( io_acc_block_signal_op51 );

    SC_METHOD(thread_res_stream_V_data_5_V_blk_n);
    sensitive << ( res_stream_V_data_5_V_full_n );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_res_stream_V_data_5_V_din);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_data_5_V_reg_288 );
    sensitive << ( io_acc_block_signal_op51 );

    SC_METHOD(thread_res_stream_V_data_5_V_write);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( io_acc_block_signal_op51 );

    SC_METHOD(thread_res_stream_V_data_6_V_blk_n);
    sensitive << ( res_stream_V_data_6_V_full_n );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_res_stream_V_data_6_V_din);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_data_6_V_reg_293 );
    sensitive << ( io_acc_block_signal_op51 );

    SC_METHOD(thread_res_stream_V_data_6_V_write);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( io_acc_block_signal_op51 );

    SC_METHOD(thread_res_stream_V_data_7_V_blk_n);
    sensitive << ( res_stream_V_data_7_V_full_n );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_res_stream_V_data_7_V_din);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_data_7_V_reg_298 );
    sensitive << ( io_acc_block_signal_op51 );

    SC_METHOD(thread_res_stream_V_data_7_V_write);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( io_acc_block_signal_op51 );

    SC_METHOD(thread_res_stream_V_data_8_V_blk_n);
    sensitive << ( res_stream_V_data_8_V_full_n );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_res_stream_V_data_8_V_din);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_data_8_V_reg_303 );
    sensitive << ( io_acc_block_signal_op51 );

    SC_METHOD(thread_res_stream_V_data_8_V_write);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( io_acc_block_signal_op51 );

    SC_METHOD(thread_res_stream_V_data_9_V_blk_n);
    sensitive << ( res_stream_V_data_9_V_full_n );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_res_stream_V_data_9_V_din);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_data_9_V_reg_308 );
    sensitive << ( io_acc_block_signal_op51 );

    SC_METHOD(thread_res_stream_V_data_9_V_write);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( io_acc_block_signal_op51 );

    SC_METHOD(thread_start_out);
    sensitive << ( real_start );

    SC_METHOD(thread_start_write);
    sensitive << ( real_start );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( io_acc_block_signal_op4 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136_ap_done );
    sensitive << ( io_acc_block_signal_op51 );

    start_once_reg = SC_LOGIC_0;
    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "001";
    grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "dense_array_array_ap_fixed_14_6_5_3_0_16u_config22_s_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, start_full_n, "(port)start_full_n");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, start_out, "(port)start_out");
    sc_trace(mVcdFile, start_write, "(port)start_write");
    sc_trace(mVcdFile, data_stream_V_data_0_V_dout, "(port)data_stream_V_data_0_V_dout");
    sc_trace(mVcdFile, data_stream_V_data_0_V_empty_n, "(port)data_stream_V_data_0_V_empty_n");
    sc_trace(mVcdFile, data_stream_V_data_0_V_read, "(port)data_stream_V_data_0_V_read");
    sc_trace(mVcdFile, data_stream_V_data_1_V_dout, "(port)data_stream_V_data_1_V_dout");
    sc_trace(mVcdFile, data_stream_V_data_1_V_empty_n, "(port)data_stream_V_data_1_V_empty_n");
    sc_trace(mVcdFile, data_stream_V_data_1_V_read, "(port)data_stream_V_data_1_V_read");
    sc_trace(mVcdFile, data_stream_V_data_2_V_dout, "(port)data_stream_V_data_2_V_dout");
    sc_trace(mVcdFile, data_stream_V_data_2_V_empty_n, "(port)data_stream_V_data_2_V_empty_n");
    sc_trace(mVcdFile, data_stream_V_data_2_V_read, "(port)data_stream_V_data_2_V_read");
    sc_trace(mVcdFile, data_stream_V_data_3_V_dout, "(port)data_stream_V_data_3_V_dout");
    sc_trace(mVcdFile, data_stream_V_data_3_V_empty_n, "(port)data_stream_V_data_3_V_empty_n");
    sc_trace(mVcdFile, data_stream_V_data_3_V_read, "(port)data_stream_V_data_3_V_read");
    sc_trace(mVcdFile, data_stream_V_data_4_V_dout, "(port)data_stream_V_data_4_V_dout");
    sc_trace(mVcdFile, data_stream_V_data_4_V_empty_n, "(port)data_stream_V_data_4_V_empty_n");
    sc_trace(mVcdFile, data_stream_V_data_4_V_read, "(port)data_stream_V_data_4_V_read");
    sc_trace(mVcdFile, res_stream_V_data_0_V_din, "(port)res_stream_V_data_0_V_din");
    sc_trace(mVcdFile, res_stream_V_data_0_V_full_n, "(port)res_stream_V_data_0_V_full_n");
    sc_trace(mVcdFile, res_stream_V_data_0_V_write, "(port)res_stream_V_data_0_V_write");
    sc_trace(mVcdFile, res_stream_V_data_1_V_din, "(port)res_stream_V_data_1_V_din");
    sc_trace(mVcdFile, res_stream_V_data_1_V_full_n, "(port)res_stream_V_data_1_V_full_n");
    sc_trace(mVcdFile, res_stream_V_data_1_V_write, "(port)res_stream_V_data_1_V_write");
    sc_trace(mVcdFile, res_stream_V_data_2_V_din, "(port)res_stream_V_data_2_V_din");
    sc_trace(mVcdFile, res_stream_V_data_2_V_full_n, "(port)res_stream_V_data_2_V_full_n");
    sc_trace(mVcdFile, res_stream_V_data_2_V_write, "(port)res_stream_V_data_2_V_write");
    sc_trace(mVcdFile, res_stream_V_data_3_V_din, "(port)res_stream_V_data_3_V_din");
    sc_trace(mVcdFile, res_stream_V_data_3_V_full_n, "(port)res_stream_V_data_3_V_full_n");
    sc_trace(mVcdFile, res_stream_V_data_3_V_write, "(port)res_stream_V_data_3_V_write");
    sc_trace(mVcdFile, res_stream_V_data_4_V_din, "(port)res_stream_V_data_4_V_din");
    sc_trace(mVcdFile, res_stream_V_data_4_V_full_n, "(port)res_stream_V_data_4_V_full_n");
    sc_trace(mVcdFile, res_stream_V_data_4_V_write, "(port)res_stream_V_data_4_V_write");
    sc_trace(mVcdFile, res_stream_V_data_5_V_din, "(port)res_stream_V_data_5_V_din");
    sc_trace(mVcdFile, res_stream_V_data_5_V_full_n, "(port)res_stream_V_data_5_V_full_n");
    sc_trace(mVcdFile, res_stream_V_data_5_V_write, "(port)res_stream_V_data_5_V_write");
    sc_trace(mVcdFile, res_stream_V_data_6_V_din, "(port)res_stream_V_data_6_V_din");
    sc_trace(mVcdFile, res_stream_V_data_6_V_full_n, "(port)res_stream_V_data_6_V_full_n");
    sc_trace(mVcdFile, res_stream_V_data_6_V_write, "(port)res_stream_V_data_6_V_write");
    sc_trace(mVcdFile, res_stream_V_data_7_V_din, "(port)res_stream_V_data_7_V_din");
    sc_trace(mVcdFile, res_stream_V_data_7_V_full_n, "(port)res_stream_V_data_7_V_full_n");
    sc_trace(mVcdFile, res_stream_V_data_7_V_write, "(port)res_stream_V_data_7_V_write");
    sc_trace(mVcdFile, res_stream_V_data_8_V_din, "(port)res_stream_V_data_8_V_din");
    sc_trace(mVcdFile, res_stream_V_data_8_V_full_n, "(port)res_stream_V_data_8_V_full_n");
    sc_trace(mVcdFile, res_stream_V_data_8_V_write, "(port)res_stream_V_data_8_V_write");
    sc_trace(mVcdFile, res_stream_V_data_9_V_din, "(port)res_stream_V_data_9_V_din");
    sc_trace(mVcdFile, res_stream_V_data_9_V_full_n, "(port)res_stream_V_data_9_V_full_n");
    sc_trace(mVcdFile, res_stream_V_data_9_V_write, "(port)res_stream_V_data_9_V_write");
    sc_trace(mVcdFile, res_stream_V_data_10_V_din, "(port)res_stream_V_data_10_V_din");
    sc_trace(mVcdFile, res_stream_V_data_10_V_full_n, "(port)res_stream_V_data_10_V_full_n");
    sc_trace(mVcdFile, res_stream_V_data_10_V_write, "(port)res_stream_V_data_10_V_write");
    sc_trace(mVcdFile, res_stream_V_data_11_V_din, "(port)res_stream_V_data_11_V_din");
    sc_trace(mVcdFile, res_stream_V_data_11_V_full_n, "(port)res_stream_V_data_11_V_full_n");
    sc_trace(mVcdFile, res_stream_V_data_11_V_write, "(port)res_stream_V_data_11_V_write");
    sc_trace(mVcdFile, res_stream_V_data_12_V_din, "(port)res_stream_V_data_12_V_din");
    sc_trace(mVcdFile, res_stream_V_data_12_V_full_n, "(port)res_stream_V_data_12_V_full_n");
    sc_trace(mVcdFile, res_stream_V_data_12_V_write, "(port)res_stream_V_data_12_V_write");
    sc_trace(mVcdFile, res_stream_V_data_13_V_din, "(port)res_stream_V_data_13_V_din");
    sc_trace(mVcdFile, res_stream_V_data_13_V_full_n, "(port)res_stream_V_data_13_V_full_n");
    sc_trace(mVcdFile, res_stream_V_data_13_V_write, "(port)res_stream_V_data_13_V_write");
    sc_trace(mVcdFile, res_stream_V_data_14_V_din, "(port)res_stream_V_data_14_V_din");
    sc_trace(mVcdFile, res_stream_V_data_14_V_full_n, "(port)res_stream_V_data_14_V_full_n");
    sc_trace(mVcdFile, res_stream_V_data_14_V_write, "(port)res_stream_V_data_14_V_write");
    sc_trace(mVcdFile, res_stream_V_data_15_V_din, "(port)res_stream_V_data_15_V_din");
    sc_trace(mVcdFile, res_stream_V_data_15_V_full_n, "(port)res_stream_V_data_15_V_full_n");
    sc_trace(mVcdFile, res_stream_V_data_15_V_write, "(port)res_stream_V_data_15_V_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, real_start, "real_start");
    sc_trace(mVcdFile, start_once_reg, "start_once_reg");
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, internal_ap_ready, "internal_ap_ready");
    sc_trace(mVcdFile, data_stream_V_data_0_V_blk_n, "data_stream_V_data_0_V_blk_n");
    sc_trace(mVcdFile, data_stream_V_data_1_V_blk_n, "data_stream_V_data_1_V_blk_n");
    sc_trace(mVcdFile, data_stream_V_data_2_V_blk_n, "data_stream_V_data_2_V_blk_n");
    sc_trace(mVcdFile, data_stream_V_data_3_V_blk_n, "data_stream_V_data_3_V_blk_n");
    sc_trace(mVcdFile, data_stream_V_data_4_V_blk_n, "data_stream_V_data_4_V_blk_n");
    sc_trace(mVcdFile, res_stream_V_data_0_V_blk_n, "res_stream_V_data_0_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, res_stream_V_data_1_V_blk_n, "res_stream_V_data_1_V_blk_n");
    sc_trace(mVcdFile, res_stream_V_data_2_V_blk_n, "res_stream_V_data_2_V_blk_n");
    sc_trace(mVcdFile, res_stream_V_data_3_V_blk_n, "res_stream_V_data_3_V_blk_n");
    sc_trace(mVcdFile, res_stream_V_data_4_V_blk_n, "res_stream_V_data_4_V_blk_n");
    sc_trace(mVcdFile, res_stream_V_data_5_V_blk_n, "res_stream_V_data_5_V_blk_n");
    sc_trace(mVcdFile, res_stream_V_data_6_V_blk_n, "res_stream_V_data_6_V_blk_n");
    sc_trace(mVcdFile, res_stream_V_data_7_V_blk_n, "res_stream_V_data_7_V_blk_n");
    sc_trace(mVcdFile, res_stream_V_data_8_V_blk_n, "res_stream_V_data_8_V_blk_n");
    sc_trace(mVcdFile, res_stream_V_data_9_V_blk_n, "res_stream_V_data_9_V_blk_n");
    sc_trace(mVcdFile, res_stream_V_data_10_V_blk_n, "res_stream_V_data_10_V_blk_n");
    sc_trace(mVcdFile, res_stream_V_data_11_V_blk_n, "res_stream_V_data_11_V_blk_n");
    sc_trace(mVcdFile, res_stream_V_data_12_V_blk_n, "res_stream_V_data_12_V_blk_n");
    sc_trace(mVcdFile, res_stream_V_data_13_V_blk_n, "res_stream_V_data_13_V_blk_n");
    sc_trace(mVcdFile, res_stream_V_data_14_V_blk_n, "res_stream_V_data_14_V_blk_n");
    sc_trace(mVcdFile, res_stream_V_data_15_V_blk_n, "res_stream_V_data_15_V_blk_n");
    sc_trace(mVcdFile, data_0_V_reg_238, "data_0_V_reg_238");
    sc_trace(mVcdFile, io_acc_block_signal_op4, "io_acc_block_signal_op4");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, data_1_V_reg_243, "data_1_V_reg_243");
    sc_trace(mVcdFile, data_2_V_reg_248, "data_2_V_reg_248");
    sc_trace(mVcdFile, data_3_V_reg_253, "data_3_V_reg_253");
    sc_trace(mVcdFile, data_4_V_reg_258, "data_4_V_reg_258");
    sc_trace(mVcdFile, tmp_data_0_V_reg_263, "tmp_data_0_V_reg_263");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136_ap_ready, "grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136_ap_ready");
    sc_trace(mVcdFile, grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136_ap_done, "grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136_ap_done");
    sc_trace(mVcdFile, tmp_data_1_V_reg_268, "tmp_data_1_V_reg_268");
    sc_trace(mVcdFile, tmp_data_2_V_reg_273, "tmp_data_2_V_reg_273");
    sc_trace(mVcdFile, tmp_data_3_V_reg_278, "tmp_data_3_V_reg_278");
    sc_trace(mVcdFile, tmp_data_4_V_reg_283, "tmp_data_4_V_reg_283");
    sc_trace(mVcdFile, tmp_data_5_V_reg_288, "tmp_data_5_V_reg_288");
    sc_trace(mVcdFile, tmp_data_6_V_reg_293, "tmp_data_6_V_reg_293");
    sc_trace(mVcdFile, tmp_data_7_V_reg_298, "tmp_data_7_V_reg_298");
    sc_trace(mVcdFile, tmp_data_8_V_reg_303, "tmp_data_8_V_reg_303");
    sc_trace(mVcdFile, tmp_data_9_V_reg_308, "tmp_data_9_V_reg_308");
    sc_trace(mVcdFile, tmp_data_10_V_reg_313, "tmp_data_10_V_reg_313");
    sc_trace(mVcdFile, tmp_data_11_V_reg_318, "tmp_data_11_V_reg_318");
    sc_trace(mVcdFile, tmp_data_12_V_reg_323, "tmp_data_12_V_reg_323");
    sc_trace(mVcdFile, tmp_data_13_V_reg_328, "tmp_data_13_V_reg_328");
    sc_trace(mVcdFile, tmp_data_14_V_reg_333, "tmp_data_14_V_reg_333");
    sc_trace(mVcdFile, tmp_data_15_V_reg_338, "tmp_data_15_V_reg_338");
    sc_trace(mVcdFile, grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136_ap_start, "grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136_ap_start");
    sc_trace(mVcdFile, grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136_ap_idle, "grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136_ap_idle");
    sc_trace(mVcdFile, grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136_ap_return_0, "grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136_ap_return_0");
    sc_trace(mVcdFile, grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136_ap_return_1, "grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136_ap_return_1");
    sc_trace(mVcdFile, grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136_ap_return_2, "grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136_ap_return_2");
    sc_trace(mVcdFile, grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136_ap_return_3, "grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136_ap_return_3");
    sc_trace(mVcdFile, grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136_ap_return_4, "grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136_ap_return_4");
    sc_trace(mVcdFile, grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136_ap_return_5, "grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136_ap_return_5");
    sc_trace(mVcdFile, grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136_ap_return_6, "grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136_ap_return_6");
    sc_trace(mVcdFile, grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136_ap_return_7, "grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136_ap_return_7");
    sc_trace(mVcdFile, grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136_ap_return_8, "grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136_ap_return_8");
    sc_trace(mVcdFile, grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136_ap_return_9, "grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136_ap_return_9");
    sc_trace(mVcdFile, grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136_ap_return_10, "grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136_ap_return_10");
    sc_trace(mVcdFile, grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136_ap_return_11, "grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136_ap_return_11");
    sc_trace(mVcdFile, grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136_ap_return_12, "grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136_ap_return_12");
    sc_trace(mVcdFile, grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136_ap_return_13, "grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136_ap_return_13");
    sc_trace(mVcdFile, grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136_ap_return_14, "grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136_ap_return_14");
    sc_trace(mVcdFile, grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136_ap_return_15, "grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136_ap_return_15");
    sc_trace(mVcdFile, grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136_ap_start_reg, "grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136_ap_start_reg");
    sc_trace(mVcdFile, ap_block_state1_ignore_call28, "ap_block_state1_ignore_call28");
    sc_trace(mVcdFile, io_acc_block_signal_op51, "io_acc_block_signal_op51");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

dense_array_array_ap_fixed_14_6_5_3_0_16u_config22_s::~dense_array_array_ap_fixed_14_6_5_3_0_16u_config22_s() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136;
}

void dense_array_array_ap_fixed_14_6_5_3_0_16u_config22_s::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                    esl_seteq<1,1,1>(io_acc_block_signal_op51.read(), ap_const_logic_1))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op4.read())))) {
            grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136_ap_ready.read())) {
            grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        start_once_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_0, internal_ap_ready.read()))) {
            start_once_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, internal_ap_ready.read())) {
            start_once_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op4.read())))) {
        data_0_V_reg_238 = data_stream_V_data_0_V_dout.read();
        data_1_V_reg_243 = data_stream_V_data_1_V_dout.read();
        data_2_V_reg_248 = data_stream_V_data_2_V_dout.read();
        data_3_V_reg_253 = data_stream_V_data_3_V_dout.read();
        data_4_V_reg_258 = data_stream_V_data_4_V_dout.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136_ap_done.read(), ap_const_logic_1))) {
        tmp_data_0_V_reg_263 = grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136_ap_return_0.read();
        tmp_data_10_V_reg_313 = grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136_ap_return_10.read();
        tmp_data_11_V_reg_318 = grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136_ap_return_11.read();
        tmp_data_12_V_reg_323 = grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136_ap_return_12.read();
        tmp_data_13_V_reg_328 = grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136_ap_return_13.read();
        tmp_data_14_V_reg_333 = grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136_ap_return_14.read();
        tmp_data_15_V_reg_338 = grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136_ap_return_15.read();
        tmp_data_1_V_reg_268 = grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136_ap_return_1.read();
        tmp_data_2_V_reg_273 = grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136_ap_return_2.read();
        tmp_data_3_V_reg_278 = grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136_ap_return_3.read();
        tmp_data_4_V_reg_283 = grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136_ap_return_4.read();
        tmp_data_5_V_reg_288 = grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136_ap_return_5.read();
        tmp_data_6_V_reg_293 = grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136_ap_return_6.read();
        tmp_data_7_V_reg_298 = grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136_ap_return_7.read();
        tmp_data_8_V_reg_303 = grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136_ap_return_8.read();
        tmp_data_9_V_reg_308 = grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136_ap_return_9.read();
    }
}

void dense_array_array_ap_fixed_14_6_5_3_0_16u_config22_s::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void dense_array_array_ap_fixed_14_6_5_3_0_16u_config22_s::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void dense_array_array_ap_fixed_14_6_5_3_0_16u_config22_s::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void dense_array_array_ap_fixed_14_6_5_3_0_16u_config22_s::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op4.read()));
}

void dense_array_array_ap_fixed_14_6_5_3_0_16u_config22_s::thread_ap_block_state1_ignore_call28() {
    ap_block_state1_ignore_call28 = (esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op4.read()));
}

void dense_array_array_ap_fixed_14_6_5_3_0_16u_config22_s::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(io_acc_block_signal_op51.read(), ap_const_logic_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void dense_array_array_ap_fixed_14_6_5_3_0_16u_config22_s::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void dense_array_array_ap_fixed_14_6_5_3_0_16u_config22_s::thread_ap_ready() {
    ap_ready = internal_ap_ready.read();
}

void dense_array_array_ap_fixed_14_6_5_3_0_16u_config22_s::thread_data_stream_V_data_0_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        data_stream_V_data_0_V_blk_n = data_stream_V_data_0_V_empty_n.read();
    } else {
        data_stream_V_data_0_V_blk_n = ap_const_logic_1;
    }
}

void dense_array_array_ap_fixed_14_6_5_3_0_16u_config22_s::thread_data_stream_V_data_0_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op4.read())))) {
        data_stream_V_data_0_V_read = ap_const_logic_1;
    } else {
        data_stream_V_data_0_V_read = ap_const_logic_0;
    }
}

void dense_array_array_ap_fixed_14_6_5_3_0_16u_config22_s::thread_data_stream_V_data_1_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        data_stream_V_data_1_V_blk_n = data_stream_V_data_1_V_empty_n.read();
    } else {
        data_stream_V_data_1_V_blk_n = ap_const_logic_1;
    }
}

void dense_array_array_ap_fixed_14_6_5_3_0_16u_config22_s::thread_data_stream_V_data_1_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op4.read())))) {
        data_stream_V_data_1_V_read = ap_const_logic_1;
    } else {
        data_stream_V_data_1_V_read = ap_const_logic_0;
    }
}

void dense_array_array_ap_fixed_14_6_5_3_0_16u_config22_s::thread_data_stream_V_data_2_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        data_stream_V_data_2_V_blk_n = data_stream_V_data_2_V_empty_n.read();
    } else {
        data_stream_V_data_2_V_blk_n = ap_const_logic_1;
    }
}

void dense_array_array_ap_fixed_14_6_5_3_0_16u_config22_s::thread_data_stream_V_data_2_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op4.read())))) {
        data_stream_V_data_2_V_read = ap_const_logic_1;
    } else {
        data_stream_V_data_2_V_read = ap_const_logic_0;
    }
}

void dense_array_array_ap_fixed_14_6_5_3_0_16u_config22_s::thread_data_stream_V_data_3_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        data_stream_V_data_3_V_blk_n = data_stream_V_data_3_V_empty_n.read();
    } else {
        data_stream_V_data_3_V_blk_n = ap_const_logic_1;
    }
}

void dense_array_array_ap_fixed_14_6_5_3_0_16u_config22_s::thread_data_stream_V_data_3_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op4.read())))) {
        data_stream_V_data_3_V_read = ap_const_logic_1;
    } else {
        data_stream_V_data_3_V_read = ap_const_logic_0;
    }
}

void dense_array_array_ap_fixed_14_6_5_3_0_16u_config22_s::thread_data_stream_V_data_4_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        data_stream_V_data_4_V_blk_n = data_stream_V_data_4_V_empty_n.read();
    } else {
        data_stream_V_data_4_V_blk_n = ap_const_logic_1;
    }
}

void dense_array_array_ap_fixed_14_6_5_3_0_16u_config22_s::thread_data_stream_V_data_4_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op4.read())))) {
        data_stream_V_data_4_V_read = ap_const_logic_1;
    } else {
        data_stream_V_data_4_V_read = ap_const_logic_0;
    }
}

void dense_array_array_ap_fixed_14_6_5_3_0_16u_config22_s::thread_grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136_ap_start() {
    grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136_ap_start = grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136_ap_start_reg.read();
}

void dense_array_array_ap_fixed_14_6_5_3_0_16u_config22_s::thread_internal_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(io_acc_block_signal_op51.read(), ap_const_logic_1))) {
        internal_ap_ready = ap_const_logic_1;
    } else {
        internal_ap_ready = ap_const_logic_0;
    }
}

void dense_array_array_ap_fixed_14_6_5_3_0_16u_config22_s::thread_io_acc_block_signal_op4() {
    io_acc_block_signal_op4 = (data_stream_V_data_0_V_empty_n.read() & data_stream_V_data_1_V_empty_n.read() & data_stream_V_data_2_V_empty_n.read() & data_stream_V_data_3_V_empty_n.read() & data_stream_V_data_4_V_empty_n.read());
}

void dense_array_array_ap_fixed_14_6_5_3_0_16u_config22_s::thread_io_acc_block_signal_op51() {
    io_acc_block_signal_op51 = (res_stream_V_data_0_V_full_n.read() & res_stream_V_data_1_V_full_n.read() & res_stream_V_data_2_V_full_n.read() & res_stream_V_data_3_V_full_n.read() & res_stream_V_data_4_V_full_n.read() & res_stream_V_data_5_V_full_n.read() & res_stream_V_data_6_V_full_n.read() & res_stream_V_data_7_V_full_n.read() & res_stream_V_data_8_V_full_n.read() & res_stream_V_data_9_V_full_n.read() & res_stream_V_data_10_V_full_n.read() & res_stream_V_data_11_V_full_n.read() & res_stream_V_data_12_V_full_n.read() & res_stream_V_data_13_V_full_n.read() & res_stream_V_data_14_V_full_n.read() & res_stream_V_data_15_V_full_n.read());
}

void dense_array_array_ap_fixed_14_6_5_3_0_16u_config22_s::thread_real_start() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_full_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()))) {
        real_start = ap_const_logic_0;
    } else {
        real_start = ap_start.read();
    }
}

void dense_array_array_ap_fixed_14_6_5_3_0_16u_config22_s::thread_res_stream_V_data_0_V_blk_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        res_stream_V_data_0_V_blk_n = res_stream_V_data_0_V_full_n.read();
    } else {
        res_stream_V_data_0_V_blk_n = ap_const_logic_1;
    }
}

void dense_array_array_ap_fixed_14_6_5_3_0_16u_config22_s::thread_res_stream_V_data_0_V_din() {
    res_stream_V_data_0_V_din = tmp_data_0_V_reg_263.read();
}

void dense_array_array_ap_fixed_14_6_5_3_0_16u_config22_s::thread_res_stream_V_data_0_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(io_acc_block_signal_op51.read(), ap_const_logic_1))) {
        res_stream_V_data_0_V_write = ap_const_logic_1;
    } else {
        res_stream_V_data_0_V_write = ap_const_logic_0;
    }
}

void dense_array_array_ap_fixed_14_6_5_3_0_16u_config22_s::thread_res_stream_V_data_10_V_blk_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        res_stream_V_data_10_V_blk_n = res_stream_V_data_10_V_full_n.read();
    } else {
        res_stream_V_data_10_V_blk_n = ap_const_logic_1;
    }
}

void dense_array_array_ap_fixed_14_6_5_3_0_16u_config22_s::thread_res_stream_V_data_10_V_din() {
    res_stream_V_data_10_V_din = tmp_data_10_V_reg_313.read();
}

void dense_array_array_ap_fixed_14_6_5_3_0_16u_config22_s::thread_res_stream_V_data_10_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(io_acc_block_signal_op51.read(), ap_const_logic_1))) {
        res_stream_V_data_10_V_write = ap_const_logic_1;
    } else {
        res_stream_V_data_10_V_write = ap_const_logic_0;
    }
}

void dense_array_array_ap_fixed_14_6_5_3_0_16u_config22_s::thread_res_stream_V_data_11_V_blk_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        res_stream_V_data_11_V_blk_n = res_stream_V_data_11_V_full_n.read();
    } else {
        res_stream_V_data_11_V_blk_n = ap_const_logic_1;
    }
}

void dense_array_array_ap_fixed_14_6_5_3_0_16u_config22_s::thread_res_stream_V_data_11_V_din() {
    res_stream_V_data_11_V_din = tmp_data_11_V_reg_318.read();
}

void dense_array_array_ap_fixed_14_6_5_3_0_16u_config22_s::thread_res_stream_V_data_11_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(io_acc_block_signal_op51.read(), ap_const_logic_1))) {
        res_stream_V_data_11_V_write = ap_const_logic_1;
    } else {
        res_stream_V_data_11_V_write = ap_const_logic_0;
    }
}

void dense_array_array_ap_fixed_14_6_5_3_0_16u_config22_s::thread_res_stream_V_data_12_V_blk_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        res_stream_V_data_12_V_blk_n = res_stream_V_data_12_V_full_n.read();
    } else {
        res_stream_V_data_12_V_blk_n = ap_const_logic_1;
    }
}

void dense_array_array_ap_fixed_14_6_5_3_0_16u_config22_s::thread_res_stream_V_data_12_V_din() {
    res_stream_V_data_12_V_din = tmp_data_12_V_reg_323.read();
}

void dense_array_array_ap_fixed_14_6_5_3_0_16u_config22_s::thread_res_stream_V_data_12_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(io_acc_block_signal_op51.read(), ap_const_logic_1))) {
        res_stream_V_data_12_V_write = ap_const_logic_1;
    } else {
        res_stream_V_data_12_V_write = ap_const_logic_0;
    }
}

void dense_array_array_ap_fixed_14_6_5_3_0_16u_config22_s::thread_res_stream_V_data_13_V_blk_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        res_stream_V_data_13_V_blk_n = res_stream_V_data_13_V_full_n.read();
    } else {
        res_stream_V_data_13_V_blk_n = ap_const_logic_1;
    }
}

void dense_array_array_ap_fixed_14_6_5_3_0_16u_config22_s::thread_res_stream_V_data_13_V_din() {
    res_stream_V_data_13_V_din = tmp_data_13_V_reg_328.read();
}

void dense_array_array_ap_fixed_14_6_5_3_0_16u_config22_s::thread_res_stream_V_data_13_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(io_acc_block_signal_op51.read(), ap_const_logic_1))) {
        res_stream_V_data_13_V_write = ap_const_logic_1;
    } else {
        res_stream_V_data_13_V_write = ap_const_logic_0;
    }
}

void dense_array_array_ap_fixed_14_6_5_3_0_16u_config22_s::thread_res_stream_V_data_14_V_blk_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        res_stream_V_data_14_V_blk_n = res_stream_V_data_14_V_full_n.read();
    } else {
        res_stream_V_data_14_V_blk_n = ap_const_logic_1;
    }
}

void dense_array_array_ap_fixed_14_6_5_3_0_16u_config22_s::thread_res_stream_V_data_14_V_din() {
    res_stream_V_data_14_V_din = tmp_data_14_V_reg_333.read();
}

void dense_array_array_ap_fixed_14_6_5_3_0_16u_config22_s::thread_res_stream_V_data_14_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(io_acc_block_signal_op51.read(), ap_const_logic_1))) {
        res_stream_V_data_14_V_write = ap_const_logic_1;
    } else {
        res_stream_V_data_14_V_write = ap_const_logic_0;
    }
}

void dense_array_array_ap_fixed_14_6_5_3_0_16u_config22_s::thread_res_stream_V_data_15_V_blk_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        res_stream_V_data_15_V_blk_n = res_stream_V_data_15_V_full_n.read();
    } else {
        res_stream_V_data_15_V_blk_n = ap_const_logic_1;
    }
}

void dense_array_array_ap_fixed_14_6_5_3_0_16u_config22_s::thread_res_stream_V_data_15_V_din() {
    res_stream_V_data_15_V_din = tmp_data_15_V_reg_338.read();
}

void dense_array_array_ap_fixed_14_6_5_3_0_16u_config22_s::thread_res_stream_V_data_15_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(io_acc_block_signal_op51.read(), ap_const_logic_1))) {
        res_stream_V_data_15_V_write = ap_const_logic_1;
    } else {
        res_stream_V_data_15_V_write = ap_const_logic_0;
    }
}

void dense_array_array_ap_fixed_14_6_5_3_0_16u_config22_s::thread_res_stream_V_data_1_V_blk_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        res_stream_V_data_1_V_blk_n = res_stream_V_data_1_V_full_n.read();
    } else {
        res_stream_V_data_1_V_blk_n = ap_const_logic_1;
    }
}

void dense_array_array_ap_fixed_14_6_5_3_0_16u_config22_s::thread_res_stream_V_data_1_V_din() {
    res_stream_V_data_1_V_din = tmp_data_1_V_reg_268.read();
}

void dense_array_array_ap_fixed_14_6_5_3_0_16u_config22_s::thread_res_stream_V_data_1_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(io_acc_block_signal_op51.read(), ap_const_logic_1))) {
        res_stream_V_data_1_V_write = ap_const_logic_1;
    } else {
        res_stream_V_data_1_V_write = ap_const_logic_0;
    }
}

void dense_array_array_ap_fixed_14_6_5_3_0_16u_config22_s::thread_res_stream_V_data_2_V_blk_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        res_stream_V_data_2_V_blk_n = res_stream_V_data_2_V_full_n.read();
    } else {
        res_stream_V_data_2_V_blk_n = ap_const_logic_1;
    }
}

void dense_array_array_ap_fixed_14_6_5_3_0_16u_config22_s::thread_res_stream_V_data_2_V_din() {
    res_stream_V_data_2_V_din = tmp_data_2_V_reg_273.read();
}

void dense_array_array_ap_fixed_14_6_5_3_0_16u_config22_s::thread_res_stream_V_data_2_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(io_acc_block_signal_op51.read(), ap_const_logic_1))) {
        res_stream_V_data_2_V_write = ap_const_logic_1;
    } else {
        res_stream_V_data_2_V_write = ap_const_logic_0;
    }
}

void dense_array_array_ap_fixed_14_6_5_3_0_16u_config22_s::thread_res_stream_V_data_3_V_blk_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        res_stream_V_data_3_V_blk_n = res_stream_V_data_3_V_full_n.read();
    } else {
        res_stream_V_data_3_V_blk_n = ap_const_logic_1;
    }
}

void dense_array_array_ap_fixed_14_6_5_3_0_16u_config22_s::thread_res_stream_V_data_3_V_din() {
    res_stream_V_data_3_V_din = tmp_data_3_V_reg_278.read();
}

void dense_array_array_ap_fixed_14_6_5_3_0_16u_config22_s::thread_res_stream_V_data_3_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(io_acc_block_signal_op51.read(), ap_const_logic_1))) {
        res_stream_V_data_3_V_write = ap_const_logic_1;
    } else {
        res_stream_V_data_3_V_write = ap_const_logic_0;
    }
}

void dense_array_array_ap_fixed_14_6_5_3_0_16u_config22_s::thread_res_stream_V_data_4_V_blk_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        res_stream_V_data_4_V_blk_n = res_stream_V_data_4_V_full_n.read();
    } else {
        res_stream_V_data_4_V_blk_n = ap_const_logic_1;
    }
}

void dense_array_array_ap_fixed_14_6_5_3_0_16u_config22_s::thread_res_stream_V_data_4_V_din() {
    res_stream_V_data_4_V_din = tmp_data_4_V_reg_283.read();
}

void dense_array_array_ap_fixed_14_6_5_3_0_16u_config22_s::thread_res_stream_V_data_4_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(io_acc_block_signal_op51.read(), ap_const_logic_1))) {
        res_stream_V_data_4_V_write = ap_const_logic_1;
    } else {
        res_stream_V_data_4_V_write = ap_const_logic_0;
    }
}

void dense_array_array_ap_fixed_14_6_5_3_0_16u_config22_s::thread_res_stream_V_data_5_V_blk_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        res_stream_V_data_5_V_blk_n = res_stream_V_data_5_V_full_n.read();
    } else {
        res_stream_V_data_5_V_blk_n = ap_const_logic_1;
    }
}

void dense_array_array_ap_fixed_14_6_5_3_0_16u_config22_s::thread_res_stream_V_data_5_V_din() {
    res_stream_V_data_5_V_din = tmp_data_5_V_reg_288.read();
}

void dense_array_array_ap_fixed_14_6_5_3_0_16u_config22_s::thread_res_stream_V_data_5_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(io_acc_block_signal_op51.read(), ap_const_logic_1))) {
        res_stream_V_data_5_V_write = ap_const_logic_1;
    } else {
        res_stream_V_data_5_V_write = ap_const_logic_0;
    }
}

void dense_array_array_ap_fixed_14_6_5_3_0_16u_config22_s::thread_res_stream_V_data_6_V_blk_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        res_stream_V_data_6_V_blk_n = res_stream_V_data_6_V_full_n.read();
    } else {
        res_stream_V_data_6_V_blk_n = ap_const_logic_1;
    }
}

void dense_array_array_ap_fixed_14_6_5_3_0_16u_config22_s::thread_res_stream_V_data_6_V_din() {
    res_stream_V_data_6_V_din = tmp_data_6_V_reg_293.read();
}

void dense_array_array_ap_fixed_14_6_5_3_0_16u_config22_s::thread_res_stream_V_data_6_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(io_acc_block_signal_op51.read(), ap_const_logic_1))) {
        res_stream_V_data_6_V_write = ap_const_logic_1;
    } else {
        res_stream_V_data_6_V_write = ap_const_logic_0;
    }
}

void dense_array_array_ap_fixed_14_6_5_3_0_16u_config22_s::thread_res_stream_V_data_7_V_blk_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        res_stream_V_data_7_V_blk_n = res_stream_V_data_7_V_full_n.read();
    } else {
        res_stream_V_data_7_V_blk_n = ap_const_logic_1;
    }
}

void dense_array_array_ap_fixed_14_6_5_3_0_16u_config22_s::thread_res_stream_V_data_7_V_din() {
    res_stream_V_data_7_V_din = tmp_data_7_V_reg_298.read();
}

void dense_array_array_ap_fixed_14_6_5_3_0_16u_config22_s::thread_res_stream_V_data_7_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(io_acc_block_signal_op51.read(), ap_const_logic_1))) {
        res_stream_V_data_7_V_write = ap_const_logic_1;
    } else {
        res_stream_V_data_7_V_write = ap_const_logic_0;
    }
}

void dense_array_array_ap_fixed_14_6_5_3_0_16u_config22_s::thread_res_stream_V_data_8_V_blk_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        res_stream_V_data_8_V_blk_n = res_stream_V_data_8_V_full_n.read();
    } else {
        res_stream_V_data_8_V_blk_n = ap_const_logic_1;
    }
}

void dense_array_array_ap_fixed_14_6_5_3_0_16u_config22_s::thread_res_stream_V_data_8_V_din() {
    res_stream_V_data_8_V_din = tmp_data_8_V_reg_303.read();
}

void dense_array_array_ap_fixed_14_6_5_3_0_16u_config22_s::thread_res_stream_V_data_8_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(io_acc_block_signal_op51.read(), ap_const_logic_1))) {
        res_stream_V_data_8_V_write = ap_const_logic_1;
    } else {
        res_stream_V_data_8_V_write = ap_const_logic_0;
    }
}

void dense_array_array_ap_fixed_14_6_5_3_0_16u_config22_s::thread_res_stream_V_data_9_V_blk_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        res_stream_V_data_9_V_blk_n = res_stream_V_data_9_V_full_n.read();
    } else {
        res_stream_V_data_9_V_blk_n = ap_const_logic_1;
    }
}

void dense_array_array_ap_fixed_14_6_5_3_0_16u_config22_s::thread_res_stream_V_data_9_V_din() {
    res_stream_V_data_9_V_din = tmp_data_9_V_reg_308.read();
}

void dense_array_array_ap_fixed_14_6_5_3_0_16u_config22_s::thread_res_stream_V_data_9_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(io_acc_block_signal_op51.read(), ap_const_logic_1))) {
        res_stream_V_data_9_V_write = ap_const_logic_1;
    } else {
        res_stream_V_data_9_V_write = ap_const_logic_0;
    }
}

void dense_array_array_ap_fixed_14_6_5_3_0_16u_config22_s::thread_start_out() {
    start_out = real_start.read();
}

void dense_array_array_ap_fixed_14_6_5_3_0_16u_config22_s::thread_start_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()))) {
        start_write = ap_const_logic_1;
    } else {
        start_write = ap_const_logic_0;
    }
}

void dense_array_array_ap_fixed_14_6_5_3_0_16u_config22_s::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op4.read())))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(grp_dense_wrapper_ap_fixed_ap_fixed_14_6_5_3_0_config22_s_fu_136_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(io_acc_block_signal_op51.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        default : 
            ap_NS_fsm = "XXX";
            break;
    }
}

}

