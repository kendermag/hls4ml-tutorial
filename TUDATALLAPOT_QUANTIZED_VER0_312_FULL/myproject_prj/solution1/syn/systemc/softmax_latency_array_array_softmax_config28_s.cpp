// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "softmax_latency_array_array_softmax_config28_s.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic softmax_latency_array_array_softmax_config28_s::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic softmax_latency_array_array_softmax_config28_s::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<1> softmax_latency_array_array_softmax_config28_s::ap_ST_fsm_pp0_stage0 = "1";
const bool softmax_latency_array_array_softmax_config28_s::ap_const_boolean_1 = true;
const sc_lv<32> softmax_latency_array_array_softmax_config28_s::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool softmax_latency_array_array_softmax_config28_s::ap_const_boolean_0 = false;
const sc_lv<32> softmax_latency_array_array_softmax_config28_s::ap_const_lv32_6 = "110";
const sc_lv<32> softmax_latency_array_array_softmax_config28_s::ap_const_lv32_F = "1111";
const sc_lv<32> softmax_latency_array_array_softmax_config28_s::ap_const_lv32_12 = "10010";
const sc_lv<32> softmax_latency_array_array_softmax_config28_s::ap_const_lv32_11 = "10001";
const sc_lv<1> softmax_latency_array_array_softmax_config28_s::ap_const_lv1_1 = "1";
const sc_lv<32> softmax_latency_array_array_softmax_config28_s::ap_const_lv32_8 = "1000";
const sc_lv<10> softmax_latency_array_array_softmax_config28_s::ap_const_lv10_1FF = "111111111";
const sc_lv<10> softmax_latency_array_array_softmax_config28_s::ap_const_lv10_200 = "1000000000";
const sc_lv<32> softmax_latency_array_array_softmax_config28_s::ap_const_lv32_A = "1010";
const sc_lv<32> softmax_latency_array_array_softmax_config28_s::ap_const_lv32_19 = "11001";

softmax_latency_array_array_softmax_config28_s::softmax_latency_array_array_softmax_config28_s(sc_module_name name) : sc_module(name), mVcdFile(0) {
    exp_table4_U = new softmax_latency_array_array_softmax_config28_s_exp_table4("exp_table4_U");
    exp_table4_U->clk(ap_clk);
    exp_table4_U->reset(ap_rst);
    exp_table4_U->address0(exp_table4_address0);
    exp_table4_U->ce0(exp_table4_ce0);
    exp_table4_U->q0(exp_table4_q0);
    exp_table4_U->address1(exp_table4_address1);
    exp_table4_U->ce1(exp_table4_ce1);
    exp_table4_U->q1(exp_table4_q1);
    exp_table4_U->address2(exp_table4_address2);
    exp_table4_U->ce2(exp_table4_ce2);
    exp_table4_U->q2(exp_table4_q2);
    invert_table5_U = new softmax_latency_array_array_softmax_config28_s_invert_tabb1s("invert_table5_U");
    invert_table5_U->clk(ap_clk);
    invert_table5_U->reset(ap_rst);
    invert_table5_U->address0(invert_table5_address0);
    invert_table5_U->ce0(invert_table5_ce0);
    invert_table5_U->q0(invert_table5_q0);
    myproject_axi_mul_18s_17ns_26_2_1_U2307 = new myproject_axi_mul_18s_17ns_26_2_1<1,2,18,17,26>("myproject_axi_mul_18s_17ns_26_2_1_U2307");
    myproject_axi_mul_18s_17ns_26_2_1_U2307->clk(ap_clk);
    myproject_axi_mul_18s_17ns_26_2_1_U2307->reset(ap_rst);
    myproject_axi_mul_18s_17ns_26_2_1_U2307->din0(grp_fu_161_p0);
    myproject_axi_mul_18s_17ns_26_2_1_U2307->din1(grp_fu_161_p1);
    myproject_axi_mul_18s_17ns_26_2_1_U2307->ce(grp_fu_161_ce);
    myproject_axi_mul_18s_17ns_26_2_1_U2307->dout(grp_fu_161_p2);
    myproject_axi_mul_18s_17ns_26_2_1_U2308 = new myproject_axi_mul_18s_17ns_26_2_1<1,2,18,17,26>("myproject_axi_mul_18s_17ns_26_2_1_U2308");
    myproject_axi_mul_18s_17ns_26_2_1_U2308->clk(ap_clk);
    myproject_axi_mul_18s_17ns_26_2_1_U2308->reset(ap_rst);
    myproject_axi_mul_18s_17ns_26_2_1_U2308->din0(grp_fu_162_p0);
    myproject_axi_mul_18s_17ns_26_2_1_U2308->din1(grp_fu_162_p1);
    myproject_axi_mul_18s_17ns_26_2_1_U2308->ce(grp_fu_162_ce);
    myproject_axi_mul_18s_17ns_26_2_1_U2308->dout(grp_fu_162_p2);
    myproject_axi_mul_18s_17ns_26_2_1_U2309 = new myproject_axi_mul_18s_17ns_26_2_1<1,2,18,17,26>("myproject_axi_mul_18s_17ns_26_2_1_U2309");
    myproject_axi_mul_18s_17ns_26_2_1_U2309->clk(ap_clk);
    myproject_axi_mul_18s_17ns_26_2_1_U2309->reset(ap_rst);
    myproject_axi_mul_18s_17ns_26_2_1_U2309->din0(grp_fu_163_p0);
    myproject_axi_mul_18s_17ns_26_2_1_U2309->din1(grp_fu_163_p1);
    myproject_axi_mul_18s_17ns_26_2_1_U2309->ce(grp_fu_163_ce);
    myproject_axi_mul_18s_17ns_26_2_1_U2309->dout(grp_fu_163_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( ap_start );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( io_acc_block_signal_op11 );
    sensitive << ( io_acc_block_signal_op85 );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( ap_start );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( io_acc_block_signal_op11 );
    sensitive << ( io_acc_block_signal_op85 );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( ap_start );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( io_acc_block_signal_op11 );
    sensitive << ( io_acc_block_signal_op85 );

    SC_METHOD(thread_ap_block_state10_pp0_stage0_iter9);
    sensitive << ( io_acc_block_signal_op85 );

    SC_METHOD(thread_ap_block_state1_pp0_stage0_iter0);
    sensitive << ( ap_start );
    sensitive << ( io_acc_block_signal_op11 );

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter3);

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter4);

    SC_METHOD(thread_ap_block_state6_pp0_stage0_iter5);

    SC_METHOD(thread_ap_block_state7_pp0_stage0_iter6);

    SC_METHOD(thread_ap_block_state8_pp0_stage0_iter7);

    SC_METHOD(thread_ap_block_state9_pp0_stage0_iter8);

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_enable_reg_pp0_iter0);
    sensitive << ( ap_start );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_enable_reg_pp0_iter9 );

    SC_METHOD(thread_ap_idle_pp0_0to8);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( ap_enable_reg_pp0_iter8 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_ap_reset_idle_pp0);
    sensitive << ( ap_start );
    sensitive << ( ap_idle_pp0_0to8 );

    SC_METHOD(thread_data_V_data_0_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( data_V_data_0_V_empty_n );

    SC_METHOD(thread_data_V_data_0_V_read);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_data_V_data_1_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( data_V_data_1_V_empty_n );

    SC_METHOD(thread_data_V_data_1_V_read);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_data_V_data_2_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( data_V_data_2_V_empty_n );

    SC_METHOD(thread_data_V_data_2_V_read);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_exp_table4_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( zext_ln157_fu_252_p1 );

    SC_METHOD(thread_exp_table4_address1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( zext_ln157_1_fu_256_p1 );

    SC_METHOD(thread_exp_table4_address2);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( zext_ln157_2_fu_260_p1 );

    SC_METHOD(thread_exp_table4_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_exp_table4_ce1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_exp_table4_ce2);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_grp_fu_161_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_grp_fu_161_p0);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( sext_ln167_fu_380_p1 );

    SC_METHOD(thread_grp_fu_161_p1);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( grp_fu_161_p10 );

    SC_METHOD(thread_grp_fu_161_p10);
    sensitive << ( exp_res_1_V_reg_459_pp0_iter6_reg );

    SC_METHOD(thread_grp_fu_162_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_grp_fu_162_p0);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( sext_ln167_fu_380_p1 );

    SC_METHOD(thread_grp_fu_162_p1);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( grp_fu_162_p10 );

    SC_METHOD(thread_grp_fu_162_p10);
    sensitive << ( exp_res_0_V_reg_453_pp0_iter6_reg );

    SC_METHOD(thread_grp_fu_163_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_grp_fu_163_p0);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( sext_ln167_fu_380_p1 );

    SC_METHOD(thread_grp_fu_163_p1);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( grp_fu_163_p10 );

    SC_METHOD(thread_grp_fu_163_p10);
    sensitive << ( exp_res_2_V_reg_470_pp0_iter6_reg );

    SC_METHOD(thread_invert_table5_address0);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( zext_ln166_fu_376_p1 );

    SC_METHOD(thread_invert_table5_ce0);
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_io_acc_block_signal_op11);
    sensitive << ( data_V_data_0_V_empty_n );
    sensitive << ( data_V_data_1_V_empty_n );
    sensitive << ( data_V_data_2_V_empty_n );

    SC_METHOD(thread_io_acc_block_signal_op85);
    sensitive << ( res_V_data_0_V_full_n );
    sensitive << ( res_V_data_1_V_full_n );
    sensitive << ( res_V_data_2_V_full_n );

    SC_METHOD(thread_lhs_V_fu_279_p1);
    sensitive << ( ret_V_reg_477 );

    SC_METHOD(thread_or_ln340_fu_336_p2);
    sensitive << ( p_Result_7_fu_304_p3 );
    sensitive << ( xor_ln340_1_fu_330_p2 );

    SC_METHOD(thread_p_Result_7_fu_304_p3);
    sensitive << ( p_Val2_11_fu_299_p2 );

    SC_METHOD(thread_p_Result_s_fu_291_p3);
    sensitive << ( ret_V_1_fu_285_p2 );

    SC_METHOD(thread_p_Val2_11_fu_299_p2);
    sensitive << ( ret_V_reg_477 );
    sensitive << ( zext_ln45_fu_276_p1 );

    SC_METHOD(thread_res_V_data_0_V_blk_n);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( res_V_data_0_V_full_n );

    SC_METHOD(thread_res_V_data_0_V_din);
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( tmp_data_0_V_reg_520 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_res_V_data_0_V_write);
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_res_V_data_1_V_blk_n);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( res_V_data_1_V_full_n );

    SC_METHOD(thread_res_V_data_1_V_din);
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( tmp_data_1_V_reg_525 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_res_V_data_1_V_write);
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_res_V_data_2_V_blk_n);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( res_V_data_2_V_full_n );

    SC_METHOD(thread_res_V_data_2_V_din);
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( tmp_data_2_V_reg_530 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_res_V_data_2_V_write);
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_ret_V_1_fu_285_p2);
    sensitive << ( lhs_V_fu_279_p1 );
    sensitive << ( rhs_V_fu_282_p1 );

    SC_METHOD(thread_ret_V_fu_270_p2);
    sensitive << ( zext_ln45_1_fu_264_p1 );
    sensitive << ( zext_ln45_2_fu_267_p1 );

    SC_METHOD(thread_rhs_V_fu_282_p1);
    sensitive << ( exp_res_2_V_reg_470 );

    SC_METHOD(thread_select_ln340_fu_352_p3);
    sensitive << ( xor_ln340_fu_324_p2 );
    sensitive << ( tmp_fu_342_p4 );

    SC_METHOD(thread_select_ln388_fu_360_p3);
    sensitive << ( tmp_fu_342_p4 );
    sensitive << ( underflow_fu_318_p2 );

    SC_METHOD(thread_sext_ln167_fu_380_p1);
    sensitive << ( inv_exp_sum_V_reg_493 );

    SC_METHOD(thread_tmp_fu_342_p4);
    sensitive << ( p_Val2_11_fu_299_p2 );

    SC_METHOD(thread_underflow_fu_318_p2);
    sensitive << ( p_Result_s_fu_291_p3 );
    sensitive << ( xor_ln786_fu_312_p2 );

    SC_METHOD(thread_xor_ln340_1_fu_330_p2);
    sensitive << ( p_Result_s_fu_291_p3 );

    SC_METHOD(thread_xor_ln340_fu_324_p2);
    sensitive << ( p_Result_7_fu_304_p3 );
    sensitive << ( p_Result_s_fu_291_p3 );

    SC_METHOD(thread_xor_ln786_fu_312_p2);
    sensitive << ( p_Result_7_fu_304_p3 );

    SC_METHOD(thread_y_V_3_fu_368_p3);
    sensitive << ( or_ln340_fu_336_p2 );
    sensitive << ( select_ln340_fu_352_p3 );
    sensitive << ( select_ln388_fu_360_p3 );

    SC_METHOD(thread_zext_ln157_1_fu_256_p1);
    sensitive << ( y_V_1_reg_433 );

    SC_METHOD(thread_zext_ln157_2_fu_260_p1);
    sensitive << ( y_V_2_reg_438_pp0_iter1_reg );

    SC_METHOD(thread_zext_ln157_fu_252_p1);
    sensitive << ( y_V_reg_428 );

    SC_METHOD(thread_zext_ln166_fu_376_p1);
    sensitive << ( y_V_3_reg_483 );

    SC_METHOD(thread_zext_ln45_1_fu_264_p1);
    sensitive << ( exp_res_1_V_reg_459 );

    SC_METHOD(thread_zext_ln45_2_fu_267_p1);
    sensitive << ( exp_res_0_V_reg_453 );

    SC_METHOD(thread_zext_ln45_fu_276_p1);
    sensitive << ( exp_res_2_V_reg_470 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_reset_idle_pp0 );

    ap_CS_fsm = "1";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter4 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter5 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter6 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter7 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter8 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter9 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "softmax_latency_array_array_softmax_config28_s_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, data_V_data_0_V_dout, "(port)data_V_data_0_V_dout");
    sc_trace(mVcdFile, data_V_data_0_V_empty_n, "(port)data_V_data_0_V_empty_n");
    sc_trace(mVcdFile, data_V_data_0_V_read, "(port)data_V_data_0_V_read");
    sc_trace(mVcdFile, data_V_data_1_V_dout, "(port)data_V_data_1_V_dout");
    sc_trace(mVcdFile, data_V_data_1_V_empty_n, "(port)data_V_data_1_V_empty_n");
    sc_trace(mVcdFile, data_V_data_1_V_read, "(port)data_V_data_1_V_read");
    sc_trace(mVcdFile, data_V_data_2_V_dout, "(port)data_V_data_2_V_dout");
    sc_trace(mVcdFile, data_V_data_2_V_empty_n, "(port)data_V_data_2_V_empty_n");
    sc_trace(mVcdFile, data_V_data_2_V_read, "(port)data_V_data_2_V_read");
    sc_trace(mVcdFile, res_V_data_0_V_din, "(port)res_V_data_0_V_din");
    sc_trace(mVcdFile, res_V_data_0_V_full_n, "(port)res_V_data_0_V_full_n");
    sc_trace(mVcdFile, res_V_data_0_V_write, "(port)res_V_data_0_V_write");
    sc_trace(mVcdFile, res_V_data_1_V_din, "(port)res_V_data_1_V_din");
    sc_trace(mVcdFile, res_V_data_1_V_full_n, "(port)res_V_data_1_V_full_n");
    sc_trace(mVcdFile, res_V_data_1_V_write, "(port)res_V_data_1_V_write");
    sc_trace(mVcdFile, res_V_data_2_V_din, "(port)res_V_data_2_V_din");
    sc_trace(mVcdFile, res_V_data_2_V_full_n, "(port)res_V_data_2_V_full_n");
    sc_trace(mVcdFile, res_V_data_2_V_write, "(port)res_V_data_2_V_write");
    sc_trace(mVcdFile, data_V_data_0_V_blk_n, "(port)data_V_data_0_V_blk_n");
    sc_trace(mVcdFile, data_V_data_1_V_blk_n, "(port)data_V_data_1_V_blk_n");
    sc_trace(mVcdFile, data_V_data_2_V_blk_n, "(port)data_V_data_2_V_blk_n");
    sc_trace(mVcdFile, res_V_data_0_V_blk_n, "(port)res_V_data_0_V_blk_n");
    sc_trace(mVcdFile, res_V_data_1_V_blk_n, "(port)res_V_data_1_V_blk_n");
    sc_trace(mVcdFile, res_V_data_2_V_blk_n, "(port)res_V_data_2_V_blk_n");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter4, "ap_enable_reg_pp0_iter4");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter5, "ap_enable_reg_pp0_iter5");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter6, "ap_enable_reg_pp0_iter6");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter7, "ap_enable_reg_pp0_iter7");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter8, "ap_enable_reg_pp0_iter8");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter9, "ap_enable_reg_pp0_iter9");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, io_acc_block_signal_op11, "io_acc_block_signal_op11");
    sc_trace(mVcdFile, ap_block_state1_pp0_stage0_iter0, "ap_block_state1_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter1, "ap_block_state2_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter2, "ap_block_state3_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter3, "ap_block_state4_pp0_stage0_iter3");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter4, "ap_block_state5_pp0_stage0_iter4");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage0_iter5, "ap_block_state6_pp0_stage0_iter5");
    sc_trace(mVcdFile, ap_block_state7_pp0_stage0_iter6, "ap_block_state7_pp0_stage0_iter6");
    sc_trace(mVcdFile, ap_block_state8_pp0_stage0_iter7, "ap_block_state8_pp0_stage0_iter7");
    sc_trace(mVcdFile, ap_block_state9_pp0_stage0_iter8, "ap_block_state9_pp0_stage0_iter8");
    sc_trace(mVcdFile, io_acc_block_signal_op85, "io_acc_block_signal_op85");
    sc_trace(mVcdFile, ap_block_state10_pp0_stage0_iter9, "ap_block_state10_pp0_stage0_iter9");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, exp_table4_address0, "exp_table4_address0");
    sc_trace(mVcdFile, exp_table4_ce0, "exp_table4_ce0");
    sc_trace(mVcdFile, exp_table4_q0, "exp_table4_q0");
    sc_trace(mVcdFile, exp_table4_address1, "exp_table4_address1");
    sc_trace(mVcdFile, exp_table4_ce1, "exp_table4_ce1");
    sc_trace(mVcdFile, exp_table4_q1, "exp_table4_q1");
    sc_trace(mVcdFile, exp_table4_address2, "exp_table4_address2");
    sc_trace(mVcdFile, exp_table4_ce2, "exp_table4_ce2");
    sc_trace(mVcdFile, exp_table4_q2, "exp_table4_q2");
    sc_trace(mVcdFile, invert_table5_address0, "invert_table5_address0");
    sc_trace(mVcdFile, invert_table5_ce0, "invert_table5_ce0");
    sc_trace(mVcdFile, invert_table5_q0, "invert_table5_q0");
    sc_trace(mVcdFile, y_V_reg_428, "y_V_reg_428");
    sc_trace(mVcdFile, y_V_1_reg_433, "y_V_1_reg_433");
    sc_trace(mVcdFile, y_V_2_reg_438, "y_V_2_reg_438");
    sc_trace(mVcdFile, y_V_2_reg_438_pp0_iter1_reg, "y_V_2_reg_438_pp0_iter1_reg");
    sc_trace(mVcdFile, exp_res_0_V_reg_453, "exp_res_0_V_reg_453");
    sc_trace(mVcdFile, exp_res_0_V_reg_453_pp0_iter3_reg, "exp_res_0_V_reg_453_pp0_iter3_reg");
    sc_trace(mVcdFile, exp_res_0_V_reg_453_pp0_iter4_reg, "exp_res_0_V_reg_453_pp0_iter4_reg");
    sc_trace(mVcdFile, exp_res_0_V_reg_453_pp0_iter5_reg, "exp_res_0_V_reg_453_pp0_iter5_reg");
    sc_trace(mVcdFile, exp_res_0_V_reg_453_pp0_iter6_reg, "exp_res_0_V_reg_453_pp0_iter6_reg");
    sc_trace(mVcdFile, exp_res_1_V_reg_459, "exp_res_1_V_reg_459");
    sc_trace(mVcdFile, exp_res_1_V_reg_459_pp0_iter3_reg, "exp_res_1_V_reg_459_pp0_iter3_reg");
    sc_trace(mVcdFile, exp_res_1_V_reg_459_pp0_iter4_reg, "exp_res_1_V_reg_459_pp0_iter4_reg");
    sc_trace(mVcdFile, exp_res_1_V_reg_459_pp0_iter5_reg, "exp_res_1_V_reg_459_pp0_iter5_reg");
    sc_trace(mVcdFile, exp_res_1_V_reg_459_pp0_iter6_reg, "exp_res_1_V_reg_459_pp0_iter6_reg");
    sc_trace(mVcdFile, exp_res_2_V_reg_470, "exp_res_2_V_reg_470");
    sc_trace(mVcdFile, exp_res_2_V_reg_470_pp0_iter4_reg, "exp_res_2_V_reg_470_pp0_iter4_reg");
    sc_trace(mVcdFile, exp_res_2_V_reg_470_pp0_iter5_reg, "exp_res_2_V_reg_470_pp0_iter5_reg");
    sc_trace(mVcdFile, exp_res_2_V_reg_470_pp0_iter6_reg, "exp_res_2_V_reg_470_pp0_iter6_reg");
    sc_trace(mVcdFile, ret_V_fu_270_p2, "ret_V_fu_270_p2");
    sc_trace(mVcdFile, ret_V_reg_477, "ret_V_reg_477");
    sc_trace(mVcdFile, y_V_3_fu_368_p3, "y_V_3_fu_368_p3");
    sc_trace(mVcdFile, y_V_3_reg_483, "y_V_3_reg_483");
    sc_trace(mVcdFile, inv_exp_sum_V_reg_493, "inv_exp_sum_V_reg_493");
    sc_trace(mVcdFile, sext_ln167_fu_380_p1, "sext_ln167_fu_380_p1");
    sc_trace(mVcdFile, tmp_data_0_V_reg_520, "tmp_data_0_V_reg_520");
    sc_trace(mVcdFile, tmp_data_1_V_reg_525, "tmp_data_1_V_reg_525");
    sc_trace(mVcdFile, tmp_data_2_V_reg_530, "tmp_data_2_V_reg_530");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, zext_ln157_fu_252_p1, "zext_ln157_fu_252_p1");
    sc_trace(mVcdFile, zext_ln157_1_fu_256_p1, "zext_ln157_1_fu_256_p1");
    sc_trace(mVcdFile, zext_ln157_2_fu_260_p1, "zext_ln157_2_fu_260_p1");
    sc_trace(mVcdFile, zext_ln166_fu_376_p1, "zext_ln166_fu_376_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, grp_fu_161_p0, "grp_fu_161_p0");
    sc_trace(mVcdFile, grp_fu_161_p1, "grp_fu_161_p1");
    sc_trace(mVcdFile, grp_fu_162_p0, "grp_fu_162_p0");
    sc_trace(mVcdFile, grp_fu_162_p1, "grp_fu_162_p1");
    sc_trace(mVcdFile, grp_fu_163_p0, "grp_fu_163_p0");
    sc_trace(mVcdFile, grp_fu_163_p1, "grp_fu_163_p1");
    sc_trace(mVcdFile, zext_ln45_1_fu_264_p1, "zext_ln45_1_fu_264_p1");
    sc_trace(mVcdFile, zext_ln45_2_fu_267_p1, "zext_ln45_2_fu_267_p1");
    sc_trace(mVcdFile, lhs_V_fu_279_p1, "lhs_V_fu_279_p1");
    sc_trace(mVcdFile, rhs_V_fu_282_p1, "rhs_V_fu_282_p1");
    sc_trace(mVcdFile, ret_V_1_fu_285_p2, "ret_V_1_fu_285_p2");
    sc_trace(mVcdFile, zext_ln45_fu_276_p1, "zext_ln45_fu_276_p1");
    sc_trace(mVcdFile, p_Val2_11_fu_299_p2, "p_Val2_11_fu_299_p2");
    sc_trace(mVcdFile, p_Result_7_fu_304_p3, "p_Result_7_fu_304_p3");
    sc_trace(mVcdFile, p_Result_s_fu_291_p3, "p_Result_s_fu_291_p3");
    sc_trace(mVcdFile, xor_ln786_fu_312_p2, "xor_ln786_fu_312_p2");
    sc_trace(mVcdFile, xor_ln340_1_fu_330_p2, "xor_ln340_1_fu_330_p2");
    sc_trace(mVcdFile, xor_ln340_fu_324_p2, "xor_ln340_fu_324_p2");
    sc_trace(mVcdFile, tmp_fu_342_p4, "tmp_fu_342_p4");
    sc_trace(mVcdFile, underflow_fu_318_p2, "underflow_fu_318_p2");
    sc_trace(mVcdFile, or_ln340_fu_336_p2, "or_ln340_fu_336_p2");
    sc_trace(mVcdFile, select_ln340_fu_352_p3, "select_ln340_fu_352_p3");
    sc_trace(mVcdFile, select_ln388_fu_360_p3, "select_ln388_fu_360_p3");
    sc_trace(mVcdFile, grp_fu_162_p2, "grp_fu_162_p2");
    sc_trace(mVcdFile, grp_fu_161_p2, "grp_fu_161_p2");
    sc_trace(mVcdFile, grp_fu_163_p2, "grp_fu_163_p2");
    sc_trace(mVcdFile, grp_fu_161_ce, "grp_fu_161_ce");
    sc_trace(mVcdFile, grp_fu_162_ce, "grp_fu_162_ce");
    sc_trace(mVcdFile, grp_fu_163_ce, "grp_fu_163_ce");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0_0to8, "ap_idle_pp0_0to8");
    sc_trace(mVcdFile, ap_reset_idle_pp0, "ap_reset_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, grp_fu_161_p10, "grp_fu_161_p10");
    sc_trace(mVcdFile, grp_fu_162_p10, "grp_fu_162_p10");
    sc_trace(mVcdFile, grp_fu_163_p10, "grp_fu_163_p10");
#endif

    }
}

softmax_latency_array_array_softmax_config28_s::~softmax_latency_array_array_softmax_config28_s() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete exp_table4_U;
    delete invert_table5_U;
    delete myproject_axi_mul_18s_17ns_26_2_1_U2307;
    delete myproject_axi_mul_18s_17ns_26_2_1_U2308;
    delete myproject_axi_mul_18s_17ns_26_2_1_U2309;
}

void softmax_latency_array_array_softmax_config28_s::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_pp0_stage0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter1 = ap_start.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter4 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter4 = ap_enable_reg_pp0_iter3.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter5 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter5 = ap_enable_reg_pp0_iter4.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter6 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter6 = ap_enable_reg_pp0_iter5.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter7 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter7 = ap_enable_reg_pp0_iter6.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter8 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter8 = ap_enable_reg_pp0_iter7.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter9 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter9 = ap_enable_reg_pp0_iter8.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        exp_res_0_V_reg_453 = exp_table4_q0.read();
        exp_res_1_V_reg_459 = exp_table4_q1.read();
    }
    if (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) {
        exp_res_0_V_reg_453_pp0_iter3_reg = exp_res_0_V_reg_453.read();
        exp_res_0_V_reg_453_pp0_iter4_reg = exp_res_0_V_reg_453_pp0_iter3_reg.read();
        exp_res_0_V_reg_453_pp0_iter5_reg = exp_res_0_V_reg_453_pp0_iter4_reg.read();
        exp_res_0_V_reg_453_pp0_iter6_reg = exp_res_0_V_reg_453_pp0_iter5_reg.read();
        exp_res_1_V_reg_459_pp0_iter3_reg = exp_res_1_V_reg_459.read();
        exp_res_1_V_reg_459_pp0_iter4_reg = exp_res_1_V_reg_459_pp0_iter3_reg.read();
        exp_res_1_V_reg_459_pp0_iter5_reg = exp_res_1_V_reg_459_pp0_iter4_reg.read();
        exp_res_1_V_reg_459_pp0_iter6_reg = exp_res_1_V_reg_459_pp0_iter5_reg.read();
        exp_res_2_V_reg_470_pp0_iter4_reg = exp_res_2_V_reg_470.read();
        exp_res_2_V_reg_470_pp0_iter5_reg = exp_res_2_V_reg_470_pp0_iter4_reg.read();
        exp_res_2_V_reg_470_pp0_iter6_reg = exp_res_2_V_reg_470_pp0_iter5_reg.read();
        inv_exp_sum_V_reg_493 = invert_table5_q0.read();
        ret_V_reg_477 = ret_V_fu_270_p2.read();
        tmp_data_0_V_reg_520 = grp_fu_162_p2.read().range(25, 10);
        tmp_data_1_V_reg_525 = grp_fu_161_p2.read().range(25, 10);
        tmp_data_2_V_reg_530 = grp_fu_163_p2.read().range(25, 10);
        y_V_3_reg_483 = y_V_3_fu_368_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()))) {
        exp_res_2_V_reg_470 = exp_table4_q2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        y_V_1_reg_433 = data_V_data_1_V_dout.read().range(15, 6);
        y_V_2_reg_438 = data_V_data_2_V_dout.read().range(15, 6);
        y_V_2_reg_438_pp0_iter1_reg = y_V_2_reg_438.read();
        y_V_reg_428 = data_V_data_0_V_dout.read().range(15, 6);
    }
}

void softmax_latency_array_array_softmax_config28_s::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[0];
}

void softmax_latency_array_array_softmax_config28_s::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void softmax_latency_array_array_softmax_config28_s::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op11.read()))) || (esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op85.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read())));
}

void softmax_latency_array_array_softmax_config28_s::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op11.read()))) || (esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op85.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read())));
}

void softmax_latency_array_array_softmax_config28_s::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op11.read()))) || (esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op85.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read())));
}

void softmax_latency_array_array_softmax_config28_s::thread_ap_block_state10_pp0_stage0_iter9() {
    ap_block_state10_pp0_stage0_iter9 = esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op85.read());
}

void softmax_latency_array_array_softmax_config28_s::thread_ap_block_state1_pp0_stage0_iter0() {
    ap_block_state1_pp0_stage0_iter0 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op11.read()));
}

void softmax_latency_array_array_softmax_config28_s::thread_ap_block_state2_pp0_stage0_iter1() {
    ap_block_state2_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void softmax_latency_array_array_softmax_config28_s::thread_ap_block_state3_pp0_stage0_iter2() {
    ap_block_state3_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void softmax_latency_array_array_softmax_config28_s::thread_ap_block_state4_pp0_stage0_iter3() {
    ap_block_state4_pp0_stage0_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void softmax_latency_array_array_softmax_config28_s::thread_ap_block_state5_pp0_stage0_iter4() {
    ap_block_state5_pp0_stage0_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void softmax_latency_array_array_softmax_config28_s::thread_ap_block_state6_pp0_stage0_iter5() {
    ap_block_state6_pp0_stage0_iter5 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void softmax_latency_array_array_softmax_config28_s::thread_ap_block_state7_pp0_stage0_iter6() {
    ap_block_state7_pp0_stage0_iter6 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void softmax_latency_array_array_softmax_config28_s::thread_ap_block_state8_pp0_stage0_iter7() {
    ap_block_state8_pp0_stage0_iter7 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void softmax_latency_array_array_softmax_config28_s::thread_ap_block_state9_pp0_stage0_iter8() {
    ap_block_state9_pp0_stage0_iter8 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void softmax_latency_array_array_softmax_config28_s::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void softmax_latency_array_array_softmax_config28_s::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void softmax_latency_array_array_softmax_config28_s::thread_ap_enable_reg_pp0_iter0() {
    ap_enable_reg_pp0_iter0 = ap_start.read();
}

void softmax_latency_array_array_softmax_config28_s::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_idle_pp0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void softmax_latency_array_array_softmax_config28_s::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter4.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter5.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter6.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter7.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter8.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter9.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void softmax_latency_array_array_softmax_config28_s::thread_ap_idle_pp0_0to8() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter4.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter5.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter6.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter7.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter8.read()))) {
        ap_idle_pp0_0to8 = ap_const_logic_1;
    } else {
        ap_idle_pp0_0to8 = ap_const_logic_0;
    }
}

void softmax_latency_array_array_softmax_config28_s::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void softmax_latency_array_array_softmax_config28_s::thread_ap_reset_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_idle_pp0_0to8.read()))) {
        ap_reset_idle_pp0 = ap_const_logic_1;
    } else {
        ap_reset_idle_pp0 = ap_const_logic_0;
    }
}

void softmax_latency_array_array_softmax_config28_s::thread_data_V_data_0_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        data_V_data_0_V_blk_n = data_V_data_0_V_empty_n.read();
    } else {
        data_V_data_0_V_blk_n = ap_const_logic_1;
    }
}

void softmax_latency_array_array_softmax_config28_s::thread_data_V_data_0_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        data_V_data_0_V_read = ap_const_logic_1;
    } else {
        data_V_data_0_V_read = ap_const_logic_0;
    }
}

void softmax_latency_array_array_softmax_config28_s::thread_data_V_data_1_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        data_V_data_1_V_blk_n = data_V_data_1_V_empty_n.read();
    } else {
        data_V_data_1_V_blk_n = ap_const_logic_1;
    }
}

void softmax_latency_array_array_softmax_config28_s::thread_data_V_data_1_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        data_V_data_1_V_read = ap_const_logic_1;
    } else {
        data_V_data_1_V_read = ap_const_logic_0;
    }
}

void softmax_latency_array_array_softmax_config28_s::thread_data_V_data_2_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        data_V_data_2_V_blk_n = data_V_data_2_V_empty_n.read();
    } else {
        data_V_data_2_V_blk_n = ap_const_logic_1;
    }
}

void softmax_latency_array_array_softmax_config28_s::thread_data_V_data_2_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        data_V_data_2_V_read = ap_const_logic_1;
    } else {
        data_V_data_2_V_read = ap_const_logic_0;
    }
}

void softmax_latency_array_array_softmax_config28_s::thread_exp_table4_address0() {
    exp_table4_address0 =  (sc_lv<10>) (zext_ln157_fu_252_p1.read());
}

void softmax_latency_array_array_softmax_config28_s::thread_exp_table4_address1() {
    exp_table4_address1 =  (sc_lv<10>) (zext_ln157_1_fu_256_p1.read());
}

void softmax_latency_array_array_softmax_config28_s::thread_exp_table4_address2() {
    exp_table4_address2 =  (sc_lv<10>) (zext_ln157_2_fu_260_p1.read());
}

void softmax_latency_array_array_softmax_config28_s::thread_exp_table4_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        exp_table4_ce0 = ap_const_logic_1;
    } else {
        exp_table4_ce0 = ap_const_logic_0;
    }
}

void softmax_latency_array_array_softmax_config28_s::thread_exp_table4_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        exp_table4_ce1 = ap_const_logic_1;
    } else {
        exp_table4_ce1 = ap_const_logic_0;
    }
}

void softmax_latency_array_array_softmax_config28_s::thread_exp_table4_ce2() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        exp_table4_ce2 = ap_const_logic_1;
    } else {
        exp_table4_ce2 = ap_const_logic_0;
    }
}

void softmax_latency_array_array_softmax_config28_s::thread_grp_fu_161_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        grp_fu_161_ce = ap_const_logic_1;
    } else {
        grp_fu_161_ce = ap_const_logic_0;
    }
}

void softmax_latency_array_array_softmax_config28_s::thread_grp_fu_161_p0() {
    grp_fu_161_p0 =  (sc_lv<18>) (sext_ln167_fu_380_p1.read());
}

void softmax_latency_array_array_softmax_config28_s::thread_grp_fu_161_p1() {
    grp_fu_161_p1 =  (sc_lv<17>) (grp_fu_161_p10.read());
}

void softmax_latency_array_array_softmax_config28_s::thread_grp_fu_161_p10() {
    grp_fu_161_p10 = esl_zext<26,17>(exp_res_1_V_reg_459_pp0_iter6_reg.read());
}

void softmax_latency_array_array_softmax_config28_s::thread_grp_fu_162_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        grp_fu_162_ce = ap_const_logic_1;
    } else {
        grp_fu_162_ce = ap_const_logic_0;
    }
}

void softmax_latency_array_array_softmax_config28_s::thread_grp_fu_162_p0() {
    grp_fu_162_p0 =  (sc_lv<18>) (sext_ln167_fu_380_p1.read());
}

void softmax_latency_array_array_softmax_config28_s::thread_grp_fu_162_p1() {
    grp_fu_162_p1 =  (sc_lv<17>) (grp_fu_162_p10.read());
}

void softmax_latency_array_array_softmax_config28_s::thread_grp_fu_162_p10() {
    grp_fu_162_p10 = esl_zext<26,17>(exp_res_0_V_reg_453_pp0_iter6_reg.read());
}

void softmax_latency_array_array_softmax_config28_s::thread_grp_fu_163_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        grp_fu_163_ce = ap_const_logic_1;
    } else {
        grp_fu_163_ce = ap_const_logic_0;
    }
}

void softmax_latency_array_array_softmax_config28_s::thread_grp_fu_163_p0() {
    grp_fu_163_p0 =  (sc_lv<18>) (sext_ln167_fu_380_p1.read());
}

void softmax_latency_array_array_softmax_config28_s::thread_grp_fu_163_p1() {
    grp_fu_163_p1 =  (sc_lv<17>) (grp_fu_163_p10.read());
}

void softmax_latency_array_array_softmax_config28_s::thread_grp_fu_163_p10() {
    grp_fu_163_p10 = esl_zext<26,17>(exp_res_2_V_reg_470_pp0_iter6_reg.read());
}

void softmax_latency_array_array_softmax_config28_s::thread_invert_table5_address0() {
    invert_table5_address0 =  (sc_lv<10>) (zext_ln166_fu_376_p1.read());
}

void softmax_latency_array_array_softmax_config28_s::thread_invert_table5_ce0() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read()))) {
        invert_table5_ce0 = ap_const_logic_1;
    } else {
        invert_table5_ce0 = ap_const_logic_0;
    }
}

void softmax_latency_array_array_softmax_config28_s::thread_io_acc_block_signal_op11() {
    io_acc_block_signal_op11 = (data_V_data_0_V_empty_n.read() & data_V_data_1_V_empty_n.read() & data_V_data_2_V_empty_n.read());
}

void softmax_latency_array_array_softmax_config28_s::thread_io_acc_block_signal_op85() {
    io_acc_block_signal_op85 = (res_V_data_0_V_full_n.read() & res_V_data_1_V_full_n.read() & res_V_data_2_V_full_n.read());
}

void softmax_latency_array_array_softmax_config28_s::thread_lhs_V_fu_279_p1() {
    lhs_V_fu_279_p1 = esl_sext<19,18>(ret_V_reg_477.read());
}

void softmax_latency_array_array_softmax_config28_s::thread_or_ln340_fu_336_p2() {
    or_ln340_fu_336_p2 = (p_Result_7_fu_304_p3.read() | xor_ln340_1_fu_330_p2.read());
}

void softmax_latency_array_array_softmax_config28_s::thread_p_Result_7_fu_304_p3() {
    p_Result_7_fu_304_p3 = p_Val2_11_fu_299_p2.read().range(17, 17);
}

void softmax_latency_array_array_softmax_config28_s::thread_p_Result_s_fu_291_p3() {
    p_Result_s_fu_291_p3 = ret_V_1_fu_285_p2.read().range(18, 18);
}

void softmax_latency_array_array_softmax_config28_s::thread_p_Val2_11_fu_299_p2() {
    p_Val2_11_fu_299_p2 = (!ret_V_reg_477.read().is_01() || !zext_ln45_fu_276_p1.read().is_01())? sc_lv<18>(): (sc_bigint<18>(ret_V_reg_477.read()) + sc_biguint<18>(zext_ln45_fu_276_p1.read()));
}

void softmax_latency_array_array_softmax_config28_s::thread_res_V_data_0_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read()))) {
        res_V_data_0_V_blk_n = res_V_data_0_V_full_n.read();
    } else {
        res_V_data_0_V_blk_n = ap_const_logic_1;
    }
}

void softmax_latency_array_array_softmax_config28_s::thread_res_V_data_0_V_din() {
    res_V_data_0_V_din = tmp_data_0_V_reg_520.read();
}

void softmax_latency_array_array_softmax_config28_s::thread_res_V_data_0_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        res_V_data_0_V_write = ap_const_logic_1;
    } else {
        res_V_data_0_V_write = ap_const_logic_0;
    }
}

void softmax_latency_array_array_softmax_config28_s::thread_res_V_data_1_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read()))) {
        res_V_data_1_V_blk_n = res_V_data_1_V_full_n.read();
    } else {
        res_V_data_1_V_blk_n = ap_const_logic_1;
    }
}

void softmax_latency_array_array_softmax_config28_s::thread_res_V_data_1_V_din() {
    res_V_data_1_V_din = tmp_data_1_V_reg_525.read();
}

void softmax_latency_array_array_softmax_config28_s::thread_res_V_data_1_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        res_V_data_1_V_write = ap_const_logic_1;
    } else {
        res_V_data_1_V_write = ap_const_logic_0;
    }
}

void softmax_latency_array_array_softmax_config28_s::thread_res_V_data_2_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read()))) {
        res_V_data_2_V_blk_n = res_V_data_2_V_full_n.read();
    } else {
        res_V_data_2_V_blk_n = ap_const_logic_1;
    }
}

void softmax_latency_array_array_softmax_config28_s::thread_res_V_data_2_V_din() {
    res_V_data_2_V_din = tmp_data_2_V_reg_530.read();
}

void softmax_latency_array_array_softmax_config28_s::thread_res_V_data_2_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        res_V_data_2_V_write = ap_const_logic_1;
    } else {
        res_V_data_2_V_write = ap_const_logic_0;
    }
}

void softmax_latency_array_array_softmax_config28_s::thread_ret_V_1_fu_285_p2() {
    ret_V_1_fu_285_p2 = (!lhs_V_fu_279_p1.read().is_01() || !rhs_V_fu_282_p1.read().is_01())? sc_lv<19>(): (sc_bigint<19>(lhs_V_fu_279_p1.read()) + sc_biguint<19>(rhs_V_fu_282_p1.read()));
}

void softmax_latency_array_array_softmax_config28_s::thread_ret_V_fu_270_p2() {
    ret_V_fu_270_p2 = (!zext_ln45_1_fu_264_p1.read().is_01() || !zext_ln45_2_fu_267_p1.read().is_01())? sc_lv<18>(): (sc_biguint<18>(zext_ln45_1_fu_264_p1.read()) + sc_biguint<18>(zext_ln45_2_fu_267_p1.read()));
}

void softmax_latency_array_array_softmax_config28_s::thread_rhs_V_fu_282_p1() {
    rhs_V_fu_282_p1 = esl_zext<19,17>(exp_res_2_V_reg_470.read());
}

void softmax_latency_array_array_softmax_config28_s::thread_select_ln340_fu_352_p3() {
    select_ln340_fu_352_p3 = (!xor_ln340_fu_324_p2.read()[0].is_01())? sc_lv<10>(): ((xor_ln340_fu_324_p2.read()[0].to_bool())? ap_const_lv10_1FF: tmp_fu_342_p4.read());
}

void softmax_latency_array_array_softmax_config28_s::thread_select_ln388_fu_360_p3() {
    select_ln388_fu_360_p3 = (!underflow_fu_318_p2.read()[0].is_01())? sc_lv<10>(): ((underflow_fu_318_p2.read()[0].to_bool())? ap_const_lv10_200: tmp_fu_342_p4.read());
}

void softmax_latency_array_array_softmax_config28_s::thread_sext_ln167_fu_380_p1() {
    sext_ln167_fu_380_p1 = esl_sext<26,18>(inv_exp_sum_V_reg_493.read());
}

void softmax_latency_array_array_softmax_config28_s::thread_tmp_fu_342_p4() {
    tmp_fu_342_p4 = p_Val2_11_fu_299_p2.read().range(17, 8);
}

void softmax_latency_array_array_softmax_config28_s::thread_underflow_fu_318_p2() {
    underflow_fu_318_p2 = (p_Result_s_fu_291_p3.read() & xor_ln786_fu_312_p2.read());
}

void softmax_latency_array_array_softmax_config28_s::thread_xor_ln340_1_fu_330_p2() {
    xor_ln340_1_fu_330_p2 = (p_Result_s_fu_291_p3.read() ^ ap_const_lv1_1);
}

void softmax_latency_array_array_softmax_config28_s::thread_xor_ln340_fu_324_p2() {
    xor_ln340_fu_324_p2 = (p_Result_s_fu_291_p3.read() ^ p_Result_7_fu_304_p3.read());
}

void softmax_latency_array_array_softmax_config28_s::thread_xor_ln786_fu_312_p2() {
    xor_ln786_fu_312_p2 = (p_Result_7_fu_304_p3.read() ^ ap_const_lv1_1);
}

void softmax_latency_array_array_softmax_config28_s::thread_y_V_3_fu_368_p3() {
    y_V_3_fu_368_p3 = (!or_ln340_fu_336_p2.read()[0].is_01())? sc_lv<10>(): ((or_ln340_fu_336_p2.read()[0].to_bool())? select_ln340_fu_352_p3.read(): select_ln388_fu_360_p3.read());
}

void softmax_latency_array_array_softmax_config28_s::thread_zext_ln157_1_fu_256_p1() {
    zext_ln157_1_fu_256_p1 = esl_zext<64,10>(y_V_1_reg_433.read());
}

void softmax_latency_array_array_softmax_config28_s::thread_zext_ln157_2_fu_260_p1() {
    zext_ln157_2_fu_260_p1 = esl_zext<64,10>(y_V_2_reg_438_pp0_iter1_reg.read());
}

void softmax_latency_array_array_softmax_config28_s::thread_zext_ln157_fu_252_p1() {
    zext_ln157_fu_252_p1 = esl_zext<64,10>(y_V_reg_428.read());
}

void softmax_latency_array_array_softmax_config28_s::thread_zext_ln166_fu_376_p1() {
    zext_ln166_fu_376_p1 = esl_zext<64,10>(y_V_3_reg_483.read());
}

void softmax_latency_array_array_softmax_config28_s::thread_zext_ln45_1_fu_264_p1() {
    zext_ln45_1_fu_264_p1 = esl_zext<18,17>(exp_res_1_V_reg_459.read());
}

void softmax_latency_array_array_softmax_config28_s::thread_zext_ln45_2_fu_267_p1() {
    zext_ln45_2_fu_267_p1 = esl_zext<18,17>(exp_res_0_V_reg_453.read());
}

void softmax_latency_array_array_softmax_config28_s::thread_zext_ln45_fu_276_p1() {
    zext_ln45_fu_276_p1 = esl_zext<18,17>(exp_res_2_V_reg_470.read());
}

void softmax_latency_array_array_softmax_config28_s::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
break;
        default : 
            ap_NS_fsm = "X";
            break;
    }
}

}

