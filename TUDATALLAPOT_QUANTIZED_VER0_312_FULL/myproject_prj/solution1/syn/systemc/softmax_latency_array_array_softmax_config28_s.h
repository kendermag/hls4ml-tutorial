// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _softmax_latency_array_array_softmax_config28_s_HH_
#define _softmax_latency_array_array_softmax_config28_s_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "myproject_axi_mul_18s_17ns_26_2_1.h"
#include "softmax_latency_array_array_softmax_config28_s_exp_table4.h"
#include "softmax_latency_array_array_softmax_config28_s_invert_tabb1s.h"

namespace ap_rtl {

struct softmax_latency_array_array_softmax_config28_s : public sc_module {
    // Port declarations 30
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<16> > data_V_data_0_V_dout;
    sc_in< sc_logic > data_V_data_0_V_empty_n;
    sc_out< sc_logic > data_V_data_0_V_read;
    sc_in< sc_lv<16> > data_V_data_1_V_dout;
    sc_in< sc_logic > data_V_data_1_V_empty_n;
    sc_out< sc_logic > data_V_data_1_V_read;
    sc_in< sc_lv<16> > data_V_data_2_V_dout;
    sc_in< sc_logic > data_V_data_2_V_empty_n;
    sc_out< sc_logic > data_V_data_2_V_read;
    sc_out< sc_lv<16> > res_V_data_0_V_din;
    sc_in< sc_logic > res_V_data_0_V_full_n;
    sc_out< sc_logic > res_V_data_0_V_write;
    sc_out< sc_lv<16> > res_V_data_1_V_din;
    sc_in< sc_logic > res_V_data_1_V_full_n;
    sc_out< sc_logic > res_V_data_1_V_write;
    sc_out< sc_lv<16> > res_V_data_2_V_din;
    sc_in< sc_logic > res_V_data_2_V_full_n;
    sc_out< sc_logic > res_V_data_2_V_write;
    sc_out< sc_logic > data_V_data_0_V_blk_n;
    sc_out< sc_logic > data_V_data_1_V_blk_n;
    sc_out< sc_logic > data_V_data_2_V_blk_n;
    sc_out< sc_logic > res_V_data_0_V_blk_n;
    sc_out< sc_logic > res_V_data_1_V_blk_n;
    sc_out< sc_logic > res_V_data_2_V_blk_n;


    // Module declarations
    softmax_latency_array_array_softmax_config28_s(sc_module_name name);
    SC_HAS_PROCESS(softmax_latency_array_array_softmax_config28_s);

    ~softmax_latency_array_array_softmax_config28_s();

    sc_trace_file* mVcdFile;

    softmax_latency_array_array_softmax_config28_s_exp_table4* exp_table4_U;
    softmax_latency_array_array_softmax_config28_s_invert_tabb1s* invert_table5_U;
    myproject_axi_mul_18s_17ns_26_2_1<1,2,18,17,26>* myproject_axi_mul_18s_17ns_26_2_1_U2307;
    myproject_axi_mul_18s_17ns_26_2_1<1,2,18,17,26>* myproject_axi_mul_18s_17ns_26_2_1_U2308;
    myproject_axi_mul_18s_17ns_26_2_1<1,2,18,17,26>* myproject_axi_mul_18s_17ns_26_2_1_U2309;
    sc_signal< sc_lv<1> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter4;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter5;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter6;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter7;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter8;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter9;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > io_acc_block_signal_op11;
    sc_signal< bool > ap_block_state1_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter3;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter4;
    sc_signal< bool > ap_block_state6_pp0_stage0_iter5;
    sc_signal< bool > ap_block_state7_pp0_stage0_iter6;
    sc_signal< bool > ap_block_state8_pp0_stage0_iter7;
    sc_signal< bool > ap_block_state9_pp0_stage0_iter8;
    sc_signal< sc_logic > io_acc_block_signal_op85;
    sc_signal< bool > ap_block_state10_pp0_stage0_iter9;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<10> > exp_table4_address0;
    sc_signal< sc_logic > exp_table4_ce0;
    sc_signal< sc_lv<17> > exp_table4_q0;
    sc_signal< sc_lv<10> > exp_table4_address1;
    sc_signal< sc_logic > exp_table4_ce1;
    sc_signal< sc_lv<17> > exp_table4_q1;
    sc_signal< sc_lv<10> > exp_table4_address2;
    sc_signal< sc_logic > exp_table4_ce2;
    sc_signal< sc_lv<17> > exp_table4_q2;
    sc_signal< sc_lv<10> > invert_table5_address0;
    sc_signal< sc_logic > invert_table5_ce0;
    sc_signal< sc_lv<18> > invert_table5_q0;
    sc_signal< sc_lv<10> > y_V_reg_428;
    sc_signal< sc_lv<10> > y_V_1_reg_433;
    sc_signal< sc_lv<10> > y_V_2_reg_438;
    sc_signal< sc_lv<10> > y_V_2_reg_438_pp0_iter1_reg;
    sc_signal< sc_lv<17> > exp_res_0_V_reg_453;
    sc_signal< sc_lv<17> > exp_res_0_V_reg_453_pp0_iter3_reg;
    sc_signal< sc_lv<17> > exp_res_0_V_reg_453_pp0_iter4_reg;
    sc_signal< sc_lv<17> > exp_res_0_V_reg_453_pp0_iter5_reg;
    sc_signal< sc_lv<17> > exp_res_0_V_reg_453_pp0_iter6_reg;
    sc_signal< sc_lv<17> > exp_res_1_V_reg_459;
    sc_signal< sc_lv<17> > exp_res_1_V_reg_459_pp0_iter3_reg;
    sc_signal< sc_lv<17> > exp_res_1_V_reg_459_pp0_iter4_reg;
    sc_signal< sc_lv<17> > exp_res_1_V_reg_459_pp0_iter5_reg;
    sc_signal< sc_lv<17> > exp_res_1_V_reg_459_pp0_iter6_reg;
    sc_signal< sc_lv<17> > exp_res_2_V_reg_470;
    sc_signal< sc_lv<17> > exp_res_2_V_reg_470_pp0_iter4_reg;
    sc_signal< sc_lv<17> > exp_res_2_V_reg_470_pp0_iter5_reg;
    sc_signal< sc_lv<17> > exp_res_2_V_reg_470_pp0_iter6_reg;
    sc_signal< sc_lv<18> > ret_V_fu_270_p2;
    sc_signal< sc_lv<18> > ret_V_reg_477;
    sc_signal< sc_lv<10> > y_V_3_fu_368_p3;
    sc_signal< sc_lv<10> > y_V_3_reg_483;
    sc_signal< sc_lv<18> > inv_exp_sum_V_reg_493;
    sc_signal< sc_lv<26> > sext_ln167_fu_380_p1;
    sc_signal< sc_lv<16> > tmp_data_0_V_reg_520;
    sc_signal< sc_lv<16> > tmp_data_1_V_reg_525;
    sc_signal< sc_lv<16> > tmp_data_2_V_reg_530;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_lv<64> > zext_ln157_fu_252_p1;
    sc_signal< sc_lv<64> > zext_ln157_1_fu_256_p1;
    sc_signal< sc_lv<64> > zext_ln157_2_fu_260_p1;
    sc_signal< sc_lv<64> > zext_ln166_fu_376_p1;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<18> > grp_fu_161_p0;
    sc_signal< sc_lv<17> > grp_fu_161_p1;
    sc_signal< sc_lv<18> > grp_fu_162_p0;
    sc_signal< sc_lv<17> > grp_fu_162_p1;
    sc_signal< sc_lv<18> > grp_fu_163_p0;
    sc_signal< sc_lv<17> > grp_fu_163_p1;
    sc_signal< sc_lv<18> > zext_ln45_1_fu_264_p1;
    sc_signal< sc_lv<18> > zext_ln45_2_fu_267_p1;
    sc_signal< sc_lv<19> > lhs_V_fu_279_p1;
    sc_signal< sc_lv<19> > rhs_V_fu_282_p1;
    sc_signal< sc_lv<19> > ret_V_1_fu_285_p2;
    sc_signal< sc_lv<18> > zext_ln45_fu_276_p1;
    sc_signal< sc_lv<18> > p_Val2_11_fu_299_p2;
    sc_signal< sc_lv<1> > p_Result_7_fu_304_p3;
    sc_signal< sc_lv<1> > p_Result_s_fu_291_p3;
    sc_signal< sc_lv<1> > xor_ln786_fu_312_p2;
    sc_signal< sc_lv<1> > xor_ln340_1_fu_330_p2;
    sc_signal< sc_lv<1> > xor_ln340_fu_324_p2;
    sc_signal< sc_lv<10> > tmp_fu_342_p4;
    sc_signal< sc_lv<1> > underflow_fu_318_p2;
    sc_signal< sc_lv<1> > or_ln340_fu_336_p2;
    sc_signal< sc_lv<10> > select_ln340_fu_352_p3;
    sc_signal< sc_lv<10> > select_ln388_fu_360_p3;
    sc_signal< sc_lv<26> > grp_fu_162_p2;
    sc_signal< sc_lv<26> > grp_fu_161_p2;
    sc_signal< sc_lv<26> > grp_fu_163_p2;
    sc_signal< sc_logic > grp_fu_161_ce;
    sc_signal< sc_logic > grp_fu_162_ce;
    sc_signal< sc_logic > grp_fu_163_ce;
    sc_signal< sc_lv<1> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0_0to8;
    sc_signal< sc_logic > ap_reset_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_lv<26> > grp_fu_161_p10;
    sc_signal< sc_lv<26> > grp_fu_162_p10;
    sc_signal< sc_lv<26> > grp_fu_163_p10;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<1> ap_ST_fsm_pp0_stage0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_12;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<10> ap_const_lv10_1FF;
    static const sc_lv<10> ap_const_lv10_200;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_19;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state10_pp0_stage0_iter9();
    void thread_ap_block_state1_pp0_stage0_iter0();
    void thread_ap_block_state2_pp0_stage0_iter1();
    void thread_ap_block_state3_pp0_stage0_iter2();
    void thread_ap_block_state4_pp0_stage0_iter3();
    void thread_ap_block_state5_pp0_stage0_iter4();
    void thread_ap_block_state6_pp0_stage0_iter5();
    void thread_ap_block_state7_pp0_stage0_iter6();
    void thread_ap_block_state8_pp0_stage0_iter7();
    void thread_ap_block_state9_pp0_stage0_iter8();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_enable_reg_pp0_iter0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_idle_pp0_0to8();
    void thread_ap_ready();
    void thread_ap_reset_idle_pp0();
    void thread_data_V_data_0_V_blk_n();
    void thread_data_V_data_0_V_read();
    void thread_data_V_data_1_V_blk_n();
    void thread_data_V_data_1_V_read();
    void thread_data_V_data_2_V_blk_n();
    void thread_data_V_data_2_V_read();
    void thread_exp_table4_address0();
    void thread_exp_table4_address1();
    void thread_exp_table4_address2();
    void thread_exp_table4_ce0();
    void thread_exp_table4_ce1();
    void thread_exp_table4_ce2();
    void thread_grp_fu_161_ce();
    void thread_grp_fu_161_p0();
    void thread_grp_fu_161_p1();
    void thread_grp_fu_161_p10();
    void thread_grp_fu_162_ce();
    void thread_grp_fu_162_p0();
    void thread_grp_fu_162_p1();
    void thread_grp_fu_162_p10();
    void thread_grp_fu_163_ce();
    void thread_grp_fu_163_p0();
    void thread_grp_fu_163_p1();
    void thread_grp_fu_163_p10();
    void thread_invert_table5_address0();
    void thread_invert_table5_ce0();
    void thread_io_acc_block_signal_op11();
    void thread_io_acc_block_signal_op85();
    void thread_lhs_V_fu_279_p1();
    void thread_or_ln340_fu_336_p2();
    void thread_p_Result_7_fu_304_p3();
    void thread_p_Result_s_fu_291_p3();
    void thread_p_Val2_11_fu_299_p2();
    void thread_res_V_data_0_V_blk_n();
    void thread_res_V_data_0_V_din();
    void thread_res_V_data_0_V_write();
    void thread_res_V_data_1_V_blk_n();
    void thread_res_V_data_1_V_din();
    void thread_res_V_data_1_V_write();
    void thread_res_V_data_2_V_blk_n();
    void thread_res_V_data_2_V_din();
    void thread_res_V_data_2_V_write();
    void thread_ret_V_1_fu_285_p2();
    void thread_ret_V_fu_270_p2();
    void thread_rhs_V_fu_282_p1();
    void thread_select_ln340_fu_352_p3();
    void thread_select_ln388_fu_360_p3();
    void thread_sext_ln167_fu_380_p1();
    void thread_tmp_fu_342_p4();
    void thread_underflow_fu_318_p2();
    void thread_xor_ln340_1_fu_330_p2();
    void thread_xor_ln340_fu_324_p2();
    void thread_xor_ln786_fu_312_p2();
    void thread_y_V_3_fu_368_p3();
    void thread_zext_ln157_1_fu_256_p1();
    void thread_zext_ln157_2_fu_260_p1();
    void thread_zext_ln157_fu_252_p1();
    void thread_zext_ln166_fu_376_p1();
    void thread_zext_ln45_1_fu_264_p1();
    void thread_zext_ln45_2_fu_267_p1();
    void thread_zext_ln45_fu_276_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
