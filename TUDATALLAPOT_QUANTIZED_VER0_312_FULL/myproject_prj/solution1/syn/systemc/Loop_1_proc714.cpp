// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "Loop_1_proc714.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic Loop_1_proc714::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic Loop_1_proc714::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<9> Loop_1_proc714::ap_ST_fsm_state1 = "1";
const sc_lv<9> Loop_1_proc714::ap_ST_fsm_state2 = "10";
const sc_lv<9> Loop_1_proc714::ap_ST_fsm_state3 = "100";
const sc_lv<9> Loop_1_proc714::ap_ST_fsm_state4 = "1000";
const sc_lv<9> Loop_1_proc714::ap_ST_fsm_state5 = "10000";
const sc_lv<9> Loop_1_proc714::ap_ST_fsm_state6 = "100000";
const sc_lv<9> Loop_1_proc714::ap_ST_fsm_state7 = "1000000";
const sc_lv<9> Loop_1_proc714::ap_ST_fsm_state8 = "10000000";
const sc_lv<9> Loop_1_proc714::ap_ST_fsm_state9 = "100000000";
const sc_lv<32> Loop_1_proc714::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> Loop_1_proc714::ap_const_lv1_0 = "0";
const sc_lv<1> Loop_1_proc714::ap_const_lv1_1 = "1";
const sc_lv<2> Loop_1_proc714::ap_const_lv2_0 = "00";
const sc_lv<2> Loop_1_proc714::ap_const_lv2_2 = "10";
const sc_lv<2> Loop_1_proc714::ap_const_lv2_3 = "11";
const sc_lv<2> Loop_1_proc714::ap_const_lv2_1 = "1";
const sc_lv<32> Loop_1_proc714::ap_const_lv32_8 = "1000";
const sc_lv<32> Loop_1_proc714::ap_const_lv32_1 = "1";
const sc_lv<32> Loop_1_proc714::ap_const_lv32_3 = "11";
const sc_lv<32> Loop_1_proc714::ap_const_lv32_4 = "100";
const sc_lv<32> Loop_1_proc714::ap_const_lv32_5 = "101";
const sc_lv<32> Loop_1_proc714::ap_const_lv32_6 = "110";
const sc_lv<32> Loop_1_proc714::ap_const_lv32_7 = "111";
const sc_lv<14> Loop_1_proc714::ap_const_lv14_0 = "00000000000000";
const sc_lv<14> Loop_1_proc714::ap_const_lv14_2000 = "10000000000000";
const sc_lv<14> Loop_1_proc714::ap_const_lv14_1 = "1";
const sc_lv<32> Loop_1_proc714::ap_const_lv32_3F = "111111";
const sc_lv<32> Loop_1_proc714::ap_const_lv32_34 = "110100";
const sc_lv<32> Loop_1_proc714::ap_const_lv32_3E = "111110";
const sc_lv<54> Loop_1_proc714::ap_const_lv54_0 = "000000000000000000000000000000000000000000000000000000";
const sc_lv<63> Loop_1_proc714::ap_const_lv63_0 = "000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<12> Loop_1_proc714::ap_const_lv12_433 = "10000110011";
const sc_lv<12> Loop_1_proc714::ap_const_lv12_A = "1010";
const sc_lv<12> Loop_1_proc714::ap_const_lv12_FF6 = "111111110110";
const sc_lv<32> Loop_1_proc714::ap_const_lv32_B = "1011";
const sc_lv<12> Loop_1_proc714::ap_const_lv12_36 = "110110";
const sc_lv<8> Loop_1_proc714::ap_const_lv8_0 = "00000000";
const sc_lv<32> Loop_1_proc714::ap_const_lv32_1F = "11111";
const sc_lv<16> Loop_1_proc714::ap_const_lv16_FFFF = "1111111111111111";
const sc_lv<16> Loop_1_proc714::ap_const_lv16_0 = "0000000000000000";
const sc_lv<32> Loop_1_proc714::ap_const_lv32_2 = "10";
const bool Loop_1_proc714::ap_const_boolean_1 = true;

Loop_1_proc714::Loop_1_proc714(sc_module_name name) : sc_module(name), mVcdFile(0) {
    myproject_axi_fpext_32ns_64_3_1_U1 = new myproject_axi_fpext_32ns_64_3_1<1,3,32,64>("myproject_axi_fpext_32ns_64_3_1_U1");
    myproject_axi_fpext_32ns_64_3_1_U1->clk(ap_clk);
    myproject_axi_fpext_32ns_64_3_1_U1->reset(ap_rst);
    myproject_axi_fpext_32ns_64_3_1_U1->din0(in_data_0_data_out);
    myproject_axi_fpext_32ns_64_3_1_U1->ce(grp_fu_135_ce);
    myproject_axi_fpext_32ns_64_3_1_U1->dout(grp_fu_135_p1);
    myproject_axi_ashr_54ns_32ns_54_2_1_U2 = new myproject_axi_ashr_54ns_32ns_54_2_1<1,2,2,54,32,54>("myproject_axi_ashr_54ns_32ns_54_2_1_U2");
    myproject_axi_ashr_54ns_32ns_54_2_1_U2->clk(ap_clk);
    myproject_axi_ashr_54ns_32ns_54_2_1_U2->reset(ap_rst);
    myproject_axi_ashr_54ns_32ns_54_2_1_U2->din0(select_ln570_reg_473);
    myproject_axi_ashr_54ns_32ns_54_2_1_U2->din1(grp_fu_296_p1);
    myproject_axi_ashr_54ns_32ns_54_2_1_U2->ce(ap_var_for_const0);
    myproject_axi_ashr_54ns_32ns_54_2_1_U2->dout(grp_fu_296_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln581_fu_239_p2);
    sensitive << ( sub_ln575_fu_227_p2 );

    SC_METHOD(thread_and_ln581_fu_330_p2);
    sensitive << ( icmp_ln581_reg_484 );
    sensitive << ( xor_ln582_fu_324_p2 );

    SC_METHOD(thread_and_ln582_fu_388_p2);
    sensitive << ( icmp_ln582_reg_497 );
    sensitive << ( xor_ln571_fu_383_p2 );

    SC_METHOD(thread_and_ln585_1_fu_347_p2);
    sensitive << ( icmp_ln585_fu_282_p2 );
    sensitive << ( and_ln581_fu_330_p2 );

    SC_METHOD(thread_and_ln585_fu_341_p2);
    sensitive << ( and_ln581_fu_330_p2 );
    sensitive << ( xor_ln585_fu_335_p2 );

    SC_METHOD(thread_and_ln603_fu_364_p2);
    sensitive << ( icmp_ln603_fu_287_p2 );
    sensitive << ( xor_ln581_fu_358_p2 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_block_state2);
    sensitive << ( in_data_0_vld_out );
    sensitive << ( is_last_0_i_out_out_full_n );
    sensitive << ( icmp_ln23_fu_138_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( in_data_0_vld_out );
    sensitive << ( is_last_0_i_out_out_full_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln23_fu_138_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( real_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( internal_ap_ready );

    SC_METHOD(thread_bitcast_ln696_1_fu_301_p1);
    sensitive << ( in_data_tmp_reg_442 );

    SC_METHOD(thread_bitcast_ln696_fu_165_p1);
    sensitive << ( grp_fu_135_p1 );

    SC_METHOD(thread_grp_fu_135_ce);
    sensitive << ( in_data_0_vld_out );
    sensitive << ( is_last_0_i_out_out_full_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln23_fu_138_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_grp_fu_296_p1);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( sext_ln581_fu_279_p1 );

    SC_METHOD(thread_i_fu_144_p2);
    sensitive << ( i_0_i3_i_reg_124 );

    SC_METHOD(thread_icmp_ln23_fu_138_p2);
    sensitive << ( in_data_0_vld_out );
    sensitive << ( is_last_0_i_out_out_full_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln23_fu_138_p2 );
    sensitive << ( i_0_i3_i_reg_124 );

    SC_METHOD(thread_icmp_ln571_fu_222_p2);
    sensitive << ( trunc_ln557_reg_453 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_icmp_ln581_fu_233_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( sub_ln575_fu_227_p2 );

    SC_METHOD(thread_icmp_ln582_fu_259_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( sub_ln575_fu_227_p2 );

    SC_METHOD(thread_icmp_ln585_fu_282_p2);
    sensitive << ( select_ln581_reg_490 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_icmp_ln603_fu_287_p2);
    sensitive << ( tmp_297_reg_509 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_in_data_0_ack_in);
    sensitive << ( in_data_0_state );

    SC_METHOD(thread_in_data_0_ack_out);
    sensitive << ( in_data_0_vld_out );
    sensitive << ( is_last_0_i_out_out_full_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln23_fu_138_p2 );

    SC_METHOD(thread_in_data_0_data_out);
    sensitive << ( in_data_0_payload_A );
    sensitive << ( in_data_0_payload_B );
    sensitive << ( in_data_0_sel );

    SC_METHOD(thread_in_data_0_load_A);
    sensitive << ( in_data_0_sel_wr );
    sensitive << ( in_data_0_state_cmp_full );

    SC_METHOD(thread_in_data_0_load_B);
    sensitive << ( in_data_0_sel_wr );
    sensitive << ( in_data_0_state_cmp_full );

    SC_METHOD(thread_in_data_0_sel);
    sensitive << ( in_data_0_sel_rd );

    SC_METHOD(thread_in_data_0_state_cmp_full);
    sensitive << ( in_data_0_state );

    SC_METHOD(thread_in_data_0_vld_in);
    sensitive << ( in_r_TVALID );

    SC_METHOD(thread_in_data_0_vld_out);
    sensitive << ( in_data_0_state );

    SC_METHOD(thread_in_last_V_0_ack_in);
    sensitive << ( in_last_V_0_state );

    SC_METHOD(thread_in_last_V_0_ack_out);
    sensitive << ( in_data_0_vld_out );
    sensitive << ( is_last_0_i_out_out_full_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln23_fu_138_p2 );

    SC_METHOD(thread_in_last_V_0_data_out);
    sensitive << ( in_last_V_0_payload_A );
    sensitive << ( in_last_V_0_payload_B );
    sensitive << ( in_last_V_0_sel );

    SC_METHOD(thread_in_last_V_0_load_A);
    sensitive << ( in_last_V_0_sel_wr );
    sensitive << ( in_last_V_0_state_cmp_full );

    SC_METHOD(thread_in_last_V_0_load_B);
    sensitive << ( in_last_V_0_sel_wr );
    sensitive << ( in_last_V_0_state_cmp_full );

    SC_METHOD(thread_in_last_V_0_sel);
    sensitive << ( in_last_V_0_sel_rd );

    SC_METHOD(thread_in_last_V_0_state_cmp_full);
    sensitive << ( in_last_V_0_state );

    SC_METHOD(thread_in_last_V_0_vld_in);
    sensitive << ( in_r_TVALID );

    SC_METHOD(thread_in_last_V_0_vld_out);
    sensitive << ( in_last_V_0_state );

    SC_METHOD(thread_in_local_V_data_0_V_blk_n);
    sensitive << ( in_local_V_data_0_V_full_n );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_in_local_V_data_0_V_din);
    sensitive << ( in_local_V_data_0_V_full_n );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( or_ln603_2_reg_545 );
    sensitive << ( select_ln603_2_reg_550 );

    SC_METHOD(thread_in_local_V_data_0_V_write);
    sensitive << ( in_local_V_data_0_V_full_n );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_in_r_TDATA_blk_n);
    sensitive << ( in_data_0_state );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln23_fu_138_p2 );

    SC_METHOD(thread_in_r_TREADY);
    sensitive << ( in_data_0_state );

    SC_METHOD(thread_internal_ap_ready);
    sensitive << ( in_data_0_vld_out );
    sensitive << ( is_last_0_i_out_out_full_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln23_fu_138_p2 );

    SC_METHOD(thread_is_last_0_i_out_out_blk_n);
    sensitive << ( is_last_0_i_out_out_full_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln23_fu_138_p2 );

    SC_METHOD(thread_is_last_0_i_out_out_din);
    sensitive << ( in_data_0_vld_out );
    sensitive << ( is_last_0_i_out_out_full_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln23_fu_138_p2 );
    sensitive << ( is_last_0_i_out_dc_0_reg_112 );

    SC_METHOD(thread_is_last_0_i_out_out_write);
    sensitive << ( in_data_0_vld_out );
    sensitive << ( is_last_0_i_out_out_full_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln23_fu_138_p2 );

    SC_METHOD(thread_or_ln28_fu_159_p2);
    sensitive << ( in_last_V_0_data_out );
    sensitive << ( is_last_0_i_out_dc_0_reg_112 );

    SC_METHOD(thread_or_ln581_fu_353_p2);
    sensitive << ( icmp_ln581_reg_484 );
    sensitive << ( or_ln582_fu_320_p2 );

    SC_METHOD(thread_or_ln582_fu_320_p2);
    sensitive << ( icmp_ln571_reg_478 );
    sensitive << ( icmp_ln582_reg_497 );

    SC_METHOD(thread_or_ln603_1_fu_393_p2);
    sensitive << ( and_ln585_reg_519 );
    sensitive << ( and_ln582_fu_388_p2 );

    SC_METHOD(thread_or_ln603_2_fu_398_p2);
    sensitive << ( or_ln603_reg_529 );
    sensitive << ( or_ln603_1_fu_393_p2 );

    SC_METHOD(thread_or_ln603_fu_370_p2);
    sensitive << ( and_ln603_fu_364_p2 );
    sensitive << ( and_ln585_1_fu_347_p2 );

    SC_METHOD(thread_real_start);
    sensitive << ( ap_start );
    sensitive << ( start_full_n );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_select_ln570_fu_215_p3);
    sensitive << ( tmp_reg_458 );
    sensitive << ( zext_ln569_fu_205_p1 );
    sensitive << ( sub_ln461_fu_209_p2 );

    SC_METHOD(thread_select_ln581_fu_251_p3);
    sensitive << ( icmp_ln581_fu_233_p2 );
    sensitive << ( add_ln581_fu_239_p2 );
    sensitive << ( sub_ln581_fu_245_p2 );

    SC_METHOD(thread_select_ln588_fu_312_p3);
    sensitive << ( tmp_298_fu_304_p3 );

    SC_METHOD(thread_select_ln603_1_fu_376_p3);
    sensitive << ( trunc_ln583_reg_503 );
    sensitive << ( and_ln585_fu_341_p2 );
    sensitive << ( select_ln588_fu_312_p3 );

    SC_METHOD(thread_select_ln603_2_fu_421_p3);
    sensitive << ( or_ln603_reg_529 );
    sensitive << ( select_ln603_1_reg_535 );
    sensitive << ( select_ln603_fu_414_p3 );

    SC_METHOD(thread_select_ln603_fu_414_p3);
    sensitive << ( and_ln603_reg_524 );
    sensitive << ( shl_ln604_fu_409_p2 );
    sensitive << ( trunc_ln586_fu_406_p1 );

    SC_METHOD(thread_sext_ln581_1_fu_403_p1);
    sensitive << ( select_ln581_reg_490 );

    SC_METHOD(thread_sext_ln581_fu_279_p1);
    sensitive << ( select_ln581_reg_490 );

    SC_METHOD(thread_shl_ln604_fu_409_p2);
    sensitive << ( trunc_ln583_reg_503 );
    sensitive << ( sext_ln581_1_fu_403_p1 );

    SC_METHOD(thread_start_out);
    sensitive << ( real_start );

    SC_METHOD(thread_start_write);
    sensitive << ( real_start );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_sub_ln461_fu_209_p2);
    sensitive << ( zext_ln569_fu_205_p1 );

    SC_METHOD(thread_sub_ln575_fu_227_p2);
    sensitive << ( zext_ln461_fu_195_p1 );

    SC_METHOD(thread_sub_ln581_fu_245_p2);
    sensitive << ( sub_ln575_fu_227_p2 );

    SC_METHOD(thread_tmp_298_fu_304_p3);
    sensitive << ( bitcast_ln696_1_fu_301_p1 );

    SC_METHOD(thread_tmp_i_fu_198_p3);
    sensitive << ( trunc_ln565_reg_468 );

    SC_METHOD(thread_trunc_ln557_fu_169_p1);
    sensitive << ( bitcast_ln696_fu_165_p1 );

    SC_METHOD(thread_trunc_ln565_fu_191_p1);
    sensitive << ( bitcast_ln696_fu_165_p1 );

    SC_METHOD(thread_trunc_ln583_fu_265_p1);
    sensitive << ( select_ln570_fu_215_p3 );

    SC_METHOD(thread_trunc_ln586_fu_406_p1);
    sensitive << ( ashr_ln586_reg_540 );

    SC_METHOD(thread_xor_ln571_fu_383_p2);
    sensitive << ( icmp_ln571_reg_478 );

    SC_METHOD(thread_xor_ln581_fu_358_p2);
    sensitive << ( or_ln581_fu_353_p2 );

    SC_METHOD(thread_xor_ln582_fu_324_p2);
    sensitive << ( or_ln582_fu_320_p2 );

    SC_METHOD(thread_xor_ln585_fu_335_p2);
    sensitive << ( icmp_ln585_fu_282_p2 );

    SC_METHOD(thread_zext_ln461_fu_195_p1);
    sensitive << ( p_Result_i_i_reg_463 );

    SC_METHOD(thread_zext_ln569_fu_205_p1);
    sensitive << ( tmp_i_fu_198_p3 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in_local_V_data_0_V_full_n );
    sensitive << ( in_data_0_vld_out );
    sensitive << ( is_last_0_i_out_out_full_n );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln23_fu_138_p2 );

    SC_THREAD(thread_ap_var_for_const0);

    start_once_reg = SC_LOGIC_0;
    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "000000001";
    in_last_V_0_sel_rd = SC_LOGIC_0;
    in_last_V_0_sel_wr = SC_LOGIC_0;
    in_last_V_0_state = "00";
    in_data_0_sel_rd = SC_LOGIC_0;
    in_data_0_sel_wr = SC_LOGIC_0;
    in_data_0_state = "00";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "Loop_1_proc714_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, start_full_n, "(port)start_full_n");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, start_out, "(port)start_out");
    sc_trace(mVcdFile, start_write, "(port)start_write");
    sc_trace(mVcdFile, in_r_TLAST, "(port)in_r_TLAST");
    sc_trace(mVcdFile, in_r_TVALID, "(port)in_r_TVALID");
    sc_trace(mVcdFile, in_r_TREADY, "(port)in_r_TREADY");
    sc_trace(mVcdFile, in_local_V_data_0_V_din, "(port)in_local_V_data_0_V_din");
    sc_trace(mVcdFile, in_local_V_data_0_V_full_n, "(port)in_local_V_data_0_V_full_n");
    sc_trace(mVcdFile, in_local_V_data_0_V_write, "(port)in_local_V_data_0_V_write");
    sc_trace(mVcdFile, in_r_TDATA, "(port)in_r_TDATA");
    sc_trace(mVcdFile, is_last_0_i_out_out_din, "(port)is_last_0_i_out_out_din");
    sc_trace(mVcdFile, is_last_0_i_out_out_full_n, "(port)is_last_0_i_out_out_full_n");
    sc_trace(mVcdFile, is_last_0_i_out_out_write, "(port)is_last_0_i_out_out_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, real_start, "real_start");
    sc_trace(mVcdFile, start_once_reg, "start_once_reg");
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, internal_ap_ready, "internal_ap_ready");
    sc_trace(mVcdFile, in_last_V_0_data_out, "in_last_V_0_data_out");
    sc_trace(mVcdFile, in_last_V_0_vld_in, "in_last_V_0_vld_in");
    sc_trace(mVcdFile, in_last_V_0_vld_out, "in_last_V_0_vld_out");
    sc_trace(mVcdFile, in_last_V_0_ack_in, "in_last_V_0_ack_in");
    sc_trace(mVcdFile, in_last_V_0_ack_out, "in_last_V_0_ack_out");
    sc_trace(mVcdFile, in_last_V_0_payload_A, "in_last_V_0_payload_A");
    sc_trace(mVcdFile, in_last_V_0_payload_B, "in_last_V_0_payload_B");
    sc_trace(mVcdFile, in_last_V_0_sel_rd, "in_last_V_0_sel_rd");
    sc_trace(mVcdFile, in_last_V_0_sel_wr, "in_last_V_0_sel_wr");
    sc_trace(mVcdFile, in_last_V_0_sel, "in_last_V_0_sel");
    sc_trace(mVcdFile, in_last_V_0_load_A, "in_last_V_0_load_A");
    sc_trace(mVcdFile, in_last_V_0_load_B, "in_last_V_0_load_B");
    sc_trace(mVcdFile, in_last_V_0_state, "in_last_V_0_state");
    sc_trace(mVcdFile, in_last_V_0_state_cmp_full, "in_last_V_0_state_cmp_full");
    sc_trace(mVcdFile, in_data_0_data_out, "in_data_0_data_out");
    sc_trace(mVcdFile, in_data_0_vld_in, "in_data_0_vld_in");
    sc_trace(mVcdFile, in_data_0_vld_out, "in_data_0_vld_out");
    sc_trace(mVcdFile, in_data_0_ack_in, "in_data_0_ack_in");
    sc_trace(mVcdFile, in_data_0_ack_out, "in_data_0_ack_out");
    sc_trace(mVcdFile, in_data_0_payload_A, "in_data_0_payload_A");
    sc_trace(mVcdFile, in_data_0_payload_B, "in_data_0_payload_B");
    sc_trace(mVcdFile, in_data_0_sel_rd, "in_data_0_sel_rd");
    sc_trace(mVcdFile, in_data_0_sel_wr, "in_data_0_sel_wr");
    sc_trace(mVcdFile, in_data_0_sel, "in_data_0_sel");
    sc_trace(mVcdFile, in_data_0_load_A, "in_data_0_load_A");
    sc_trace(mVcdFile, in_data_0_load_B, "in_data_0_load_B");
    sc_trace(mVcdFile, in_data_0_state, "in_data_0_state");
    sc_trace(mVcdFile, in_data_0_state_cmp_full, "in_data_0_state_cmp_full");
    sc_trace(mVcdFile, in_local_V_data_0_V_blk_n, "in_local_V_data_0_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, in_r_TDATA_blk_n, "in_r_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, icmp_ln23_fu_138_p2, "icmp_ln23_fu_138_p2");
    sc_trace(mVcdFile, is_last_0_i_out_out_blk_n, "is_last_0_i_out_out_blk_n");
    sc_trace(mVcdFile, i_fu_144_p2, "i_fu_144_p2");
    sc_trace(mVcdFile, i_reg_437, "i_reg_437");
    sc_trace(mVcdFile, ap_block_state2, "ap_block_state2");
    sc_trace(mVcdFile, in_data_tmp_reg_442, "in_data_tmp_reg_442");
    sc_trace(mVcdFile, or_ln28_fu_159_p2, "or_ln28_fu_159_p2");
    sc_trace(mVcdFile, or_ln28_reg_448, "or_ln28_reg_448");
    sc_trace(mVcdFile, trunc_ln557_fu_169_p1, "trunc_ln557_fu_169_p1");
    sc_trace(mVcdFile, trunc_ln557_reg_453, "trunc_ln557_reg_453");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, tmp_reg_458, "tmp_reg_458");
    sc_trace(mVcdFile, p_Result_i_i_reg_463, "p_Result_i_i_reg_463");
    sc_trace(mVcdFile, trunc_ln565_fu_191_p1, "trunc_ln565_fu_191_p1");
    sc_trace(mVcdFile, trunc_ln565_reg_468, "trunc_ln565_reg_468");
    sc_trace(mVcdFile, select_ln570_fu_215_p3, "select_ln570_fu_215_p3");
    sc_trace(mVcdFile, select_ln570_reg_473, "select_ln570_reg_473");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, icmp_ln571_fu_222_p2, "icmp_ln571_fu_222_p2");
    sc_trace(mVcdFile, icmp_ln571_reg_478, "icmp_ln571_reg_478");
    sc_trace(mVcdFile, icmp_ln581_fu_233_p2, "icmp_ln581_fu_233_p2");
    sc_trace(mVcdFile, icmp_ln581_reg_484, "icmp_ln581_reg_484");
    sc_trace(mVcdFile, select_ln581_fu_251_p3, "select_ln581_fu_251_p3");
    sc_trace(mVcdFile, select_ln581_reg_490, "select_ln581_reg_490");
    sc_trace(mVcdFile, icmp_ln582_fu_259_p2, "icmp_ln582_fu_259_p2");
    sc_trace(mVcdFile, icmp_ln582_reg_497, "icmp_ln582_reg_497");
    sc_trace(mVcdFile, trunc_ln583_fu_265_p1, "trunc_ln583_fu_265_p1");
    sc_trace(mVcdFile, trunc_ln583_reg_503, "trunc_ln583_reg_503");
    sc_trace(mVcdFile, tmp_297_reg_509, "tmp_297_reg_509");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, and_ln585_fu_341_p2, "and_ln585_fu_341_p2");
    sc_trace(mVcdFile, and_ln585_reg_519, "and_ln585_reg_519");
    sc_trace(mVcdFile, and_ln603_fu_364_p2, "and_ln603_fu_364_p2");
    sc_trace(mVcdFile, and_ln603_reg_524, "and_ln603_reg_524");
    sc_trace(mVcdFile, or_ln603_fu_370_p2, "or_ln603_fu_370_p2");
    sc_trace(mVcdFile, or_ln603_reg_529, "or_ln603_reg_529");
    sc_trace(mVcdFile, select_ln603_1_fu_376_p3, "select_ln603_1_fu_376_p3");
    sc_trace(mVcdFile, select_ln603_1_reg_535, "select_ln603_1_reg_535");
    sc_trace(mVcdFile, grp_fu_296_p2, "grp_fu_296_p2");
    sc_trace(mVcdFile, ashr_ln586_reg_540, "ashr_ln586_reg_540");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, or_ln603_2_fu_398_p2, "or_ln603_2_fu_398_p2");
    sc_trace(mVcdFile, or_ln603_2_reg_545, "or_ln603_2_reg_545");
    sc_trace(mVcdFile, select_ln603_2_fu_421_p3, "select_ln603_2_fu_421_p3");
    sc_trace(mVcdFile, select_ln603_2_reg_550, "select_ln603_2_reg_550");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, is_last_0_i_out_dc_0_reg_112, "is_last_0_i_out_dc_0_reg_112");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, i_0_i3_i_reg_124, "i_0_i3_i_reg_124");
    sc_trace(mVcdFile, grp_fu_135_p1, "grp_fu_135_p1");
    sc_trace(mVcdFile, bitcast_ln696_fu_165_p1, "bitcast_ln696_fu_165_p1");
    sc_trace(mVcdFile, tmp_i_fu_198_p3, "tmp_i_fu_198_p3");
    sc_trace(mVcdFile, zext_ln569_fu_205_p1, "zext_ln569_fu_205_p1");
    sc_trace(mVcdFile, sub_ln461_fu_209_p2, "sub_ln461_fu_209_p2");
    sc_trace(mVcdFile, zext_ln461_fu_195_p1, "zext_ln461_fu_195_p1");
    sc_trace(mVcdFile, sub_ln575_fu_227_p2, "sub_ln575_fu_227_p2");
    sc_trace(mVcdFile, add_ln581_fu_239_p2, "add_ln581_fu_239_p2");
    sc_trace(mVcdFile, sub_ln581_fu_245_p2, "sub_ln581_fu_245_p2");
    sc_trace(mVcdFile, sext_ln581_fu_279_p1, "sext_ln581_fu_279_p1");
    sc_trace(mVcdFile, grp_fu_296_p1, "grp_fu_296_p1");
    sc_trace(mVcdFile, bitcast_ln696_1_fu_301_p1, "bitcast_ln696_1_fu_301_p1");
    sc_trace(mVcdFile, tmp_298_fu_304_p3, "tmp_298_fu_304_p3");
    sc_trace(mVcdFile, or_ln582_fu_320_p2, "or_ln582_fu_320_p2");
    sc_trace(mVcdFile, xor_ln582_fu_324_p2, "xor_ln582_fu_324_p2");
    sc_trace(mVcdFile, icmp_ln585_fu_282_p2, "icmp_ln585_fu_282_p2");
    sc_trace(mVcdFile, and_ln581_fu_330_p2, "and_ln581_fu_330_p2");
    sc_trace(mVcdFile, xor_ln585_fu_335_p2, "xor_ln585_fu_335_p2");
    sc_trace(mVcdFile, or_ln581_fu_353_p2, "or_ln581_fu_353_p2");
    sc_trace(mVcdFile, icmp_ln603_fu_287_p2, "icmp_ln603_fu_287_p2");
    sc_trace(mVcdFile, xor_ln581_fu_358_p2, "xor_ln581_fu_358_p2");
    sc_trace(mVcdFile, and_ln585_1_fu_347_p2, "and_ln585_1_fu_347_p2");
    sc_trace(mVcdFile, select_ln588_fu_312_p3, "select_ln588_fu_312_p3");
    sc_trace(mVcdFile, xor_ln571_fu_383_p2, "xor_ln571_fu_383_p2");
    sc_trace(mVcdFile, and_ln582_fu_388_p2, "and_ln582_fu_388_p2");
    sc_trace(mVcdFile, or_ln603_1_fu_393_p2, "or_ln603_1_fu_393_p2");
    sc_trace(mVcdFile, sext_ln581_1_fu_403_p1, "sext_ln581_1_fu_403_p1");
    sc_trace(mVcdFile, shl_ln604_fu_409_p2, "shl_ln604_fu_409_p2");
    sc_trace(mVcdFile, trunc_ln586_fu_406_p1, "trunc_ln586_fu_406_p1");
    sc_trace(mVcdFile, select_ln603_fu_414_p3, "select_ln603_fu_414_p3");
    sc_trace(mVcdFile, grp_fu_135_ce, "grp_fu_135_ce");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

Loop_1_proc714::~Loop_1_proc714() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete myproject_axi_fpext_32ns_64_3_1_U1;
    delete myproject_axi_ashr_54ns_32ns_54_2_1_U2;
}

void Loop_1_proc714::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void Loop_1_proc714::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln23_fu_138_p2.read()) && 
                    !((esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln23_fu_138_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in_data_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln23_fu_138_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, is_last_0_i_out_out_full_n.read()))))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(in_local_V_data_0_V_full_n.read(), ap_const_logic_1))) {
        i_0_i3_i_reg_124 = i_reg_437.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        i_0_i3_i_reg_124 = ap_const_lv14_0;
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        in_data_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, in_data_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, in_data_0_vld_out.read()))) {
            in_data_0_sel_rd =  (sc_logic) (~in_data_0_sel_rd.read());
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        in_data_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, in_data_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, in_data_0_ack_in.read()))) {
            in_data_0_sel_wr =  (sc_logic) (~in_data_0_sel_wr.read());
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        in_data_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, in_data_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, in_data_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, in_data_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, in_data_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, in_data_0_state.read())))) {
            in_data_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, in_data_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, in_data_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, in_data_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, in_data_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, in_data_0_state.read())))) {
            in_data_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, in_data_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, in_data_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, in_data_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, in_data_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, in_data_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, in_data_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in_data_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, in_data_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, in_data_0_ack_out.read()))))) {
            in_data_0_state = ap_const_lv2_3;
        } else {
            in_data_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        in_last_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, in_last_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, in_last_V_0_vld_out.read()))) {
            in_last_V_0_sel_rd =  (sc_logic) (~in_last_V_0_sel_rd.read());
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        in_last_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, in_last_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, in_last_V_0_ack_in.read()))) {
            in_last_V_0_sel_wr =  (sc_logic) (~in_last_V_0_sel_wr.read());
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        in_last_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, in_last_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, in_last_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(in_last_V_0_state.read(), ap_const_lv2_3)) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, in_last_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(in_last_V_0_state.read(), ap_const_lv2_2)))) {
            in_last_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, in_last_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, in_last_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(in_last_V_0_state.read(), ap_const_lv2_3)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, in_last_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(in_last_V_0_state.read(), ap_const_lv2_1)))) {
            in_last_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, in_last_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(in_last_V_0_state.read(), ap_const_lv2_2)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, in_last_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(in_last_V_0_state.read(), ap_const_lv2_1)) || 
                    (esl_seteq<1,2,2>(in_last_V_0_state.read(), ap_const_lv2_3) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, in_last_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in_last_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, in_last_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, in_last_V_0_ack_out.read()))))) {
            in_last_V_0_state = ap_const_lv2_3;
        } else {
            in_last_V_0_state = ap_const_lv2_2;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(in_local_V_data_0_V_full_n.read(), ap_const_logic_1))) {
        is_last_0_i_out_dc_0_reg_112 = or_ln28_reg_448.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        is_last_0_i_out_dc_0_reg_112 = ap_const_lv1_0;
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        start_once_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_0, internal_ap_ready.read()))) {
            start_once_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, internal_ap_ready.read())) {
            start_once_reg = ap_const_logic_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        and_ln585_reg_519 = and_ln585_fu_341_p2.read();
        and_ln603_reg_524 = and_ln603_fu_364_p2.read();
        or_ln603_reg_529 = or_ln603_fu_370_p2.read();
        select_ln603_1_reg_535 = select_ln603_1_fu_376_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        ashr_ln586_reg_540 = grp_fu_296_p2.read();
        or_ln603_2_reg_545 = or_ln603_2_fu_398_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && !((esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln23_fu_138_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in_data_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln23_fu_138_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, is_last_0_i_out_out_full_n.read()))))) {
        i_reg_437 = i_fu_144_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        icmp_ln571_reg_478 = icmp_ln571_fu_222_p2.read();
        icmp_ln581_reg_484 = icmp_ln581_fu_233_p2.read();
        icmp_ln582_reg_497 = icmp_ln582_fu_259_p2.read();
        select_ln570_reg_473 = select_ln570_fu_215_p3.read();
        select_ln581_reg_490 = select_ln581_fu_251_p3.read();
        tmp_297_reg_509 = select_ln581_fu_251_p3.read().range(11, 4);
        trunc_ln583_reg_503 = trunc_ln583_fu_265_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, in_data_0_load_A.read())) {
        in_data_0_payload_A = in_r_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, in_data_0_load_B.read())) {
        in_data_0_payload_B = in_r_TDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln23_fu_138_p2.read()) && !((esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln23_fu_138_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in_data_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln23_fu_138_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, is_last_0_i_out_out_full_n.read()))))) {
        in_data_tmp_reg_442 = in_data_0_data_out.read();
        or_ln28_reg_448 = or_ln28_fu_159_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, in_last_V_0_load_A.read())) {
        in_last_V_0_payload_A = in_r_TLAST.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, in_last_V_0_load_B.read())) {
        in_last_V_0_payload_B = in_r_TLAST.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        p_Result_i_i_reg_463 = bitcast_ln696_fu_165_p1.read().range(62, 52);
        tmp_reg_458 = bitcast_ln696_fu_165_p1.read().range(63, 63);
        trunc_ln557_reg_453 = trunc_ln557_fu_169_p1.read();
        trunc_ln565_reg_468 = trunc_ln565_fu_191_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, or_ln603_2_reg_545.read()))) {
        select_ln603_2_reg_550 = select_ln603_2_fu_421_p3.read();
    }
}

void Loop_1_proc714::thread_add_ln581_fu_239_p2() {
    add_ln581_fu_239_p2 = (!ap_const_lv12_FF6.is_01() || !sub_ln575_fu_227_p2.read().is_01())? sc_lv<12>(): (sc_bigint<12>(ap_const_lv12_FF6) + sc_biguint<12>(sub_ln575_fu_227_p2.read()));
}

void Loop_1_proc714::thread_and_ln581_fu_330_p2() {
    and_ln581_fu_330_p2 = (icmp_ln581_reg_484.read() & xor_ln582_fu_324_p2.read());
}

void Loop_1_proc714::thread_and_ln582_fu_388_p2() {
    and_ln582_fu_388_p2 = (icmp_ln582_reg_497.read() & xor_ln571_fu_383_p2.read());
}

void Loop_1_proc714::thread_and_ln585_1_fu_347_p2() {
    and_ln585_1_fu_347_p2 = (and_ln581_fu_330_p2.read() & icmp_ln585_fu_282_p2.read());
}

void Loop_1_proc714::thread_and_ln585_fu_341_p2() {
    and_ln585_fu_341_p2 = (and_ln581_fu_330_p2.read() & xor_ln585_fu_335_p2.read());
}

void Loop_1_proc714::thread_and_ln603_fu_364_p2() {
    and_ln603_fu_364_p2 = (icmp_ln603_fu_287_p2.read() & xor_ln581_fu_358_p2.read());
}

void Loop_1_proc714::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void Loop_1_proc714::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void Loop_1_proc714::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void Loop_1_proc714::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void Loop_1_proc714::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void Loop_1_proc714::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void Loop_1_proc714::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void Loop_1_proc714::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void Loop_1_proc714::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void Loop_1_proc714::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void Loop_1_proc714::thread_ap_block_state2() {
    ap_block_state2 = ((esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln23_fu_138_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in_data_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln23_fu_138_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, is_last_0_i_out_out_full_n.read())));
}

void Loop_1_proc714::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln23_fu_138_p2.read()) && 
         !((esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln23_fu_138_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in_data_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln23_fu_138_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, is_last_0_i_out_out_full_n.read()))))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void Loop_1_proc714::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void Loop_1_proc714::thread_ap_ready() {
    ap_ready = internal_ap_ready.read();
}

void Loop_1_proc714::thread_bitcast_ln696_1_fu_301_p1() {
    bitcast_ln696_1_fu_301_p1 = in_data_tmp_reg_442.read();
}

void Loop_1_proc714::thread_bitcast_ln696_fu_165_p1() {
    bitcast_ln696_fu_165_p1 = grp_fu_135_p1.read();
}

void Loop_1_proc714::thread_grp_fu_135_ce() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          !((esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln23_fu_138_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in_data_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln23_fu_138_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, is_last_0_i_out_out_full_n.read())))) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        grp_fu_135_ce = ap_const_logic_1;
    } else {
        grp_fu_135_ce = ap_const_logic_0;
    }
}

void Loop_1_proc714::thread_grp_fu_296_p1() {
    grp_fu_296_p1 = esl_zext<54,32>(sext_ln581_fu_279_p1.read());
}

void Loop_1_proc714::thread_i_fu_144_p2() {
    i_fu_144_p2 = (!i_0_i3_i_reg_124.read().is_01() || !ap_const_lv14_1.is_01())? sc_lv<14>(): (sc_biguint<14>(i_0_i3_i_reg_124.read()) + sc_biguint<14>(ap_const_lv14_1));
}

void Loop_1_proc714::thread_icmp_ln23_fu_138_p2() {
    icmp_ln23_fu_138_p2 = (!i_0_i3_i_reg_124.read().is_01() || !ap_const_lv14_2000.is_01())? sc_lv<1>(): sc_lv<1>(i_0_i3_i_reg_124.read() == ap_const_lv14_2000);
}

void Loop_1_proc714::thread_icmp_ln571_fu_222_p2() {
    icmp_ln571_fu_222_p2 = (!trunc_ln557_reg_453.read().is_01() || !ap_const_lv63_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln557_reg_453.read() == ap_const_lv63_0);
}

void Loop_1_proc714::thread_icmp_ln581_fu_233_p2() {
    icmp_ln581_fu_233_p2 = (!sub_ln575_fu_227_p2.read().is_01() || !ap_const_lv12_A.is_01())? sc_lv<1>(): (sc_bigint<12>(sub_ln575_fu_227_p2.read()) > sc_bigint<12>(ap_const_lv12_A));
}

void Loop_1_proc714::thread_icmp_ln582_fu_259_p2() {
    icmp_ln582_fu_259_p2 = (!sub_ln575_fu_227_p2.read().is_01() || !ap_const_lv12_A.is_01())? sc_lv<1>(): sc_lv<1>(sub_ln575_fu_227_p2.read() == ap_const_lv12_A);
}

void Loop_1_proc714::thread_icmp_ln585_fu_282_p2() {
    icmp_ln585_fu_282_p2 = (!select_ln581_reg_490.read().is_01() || !ap_const_lv12_36.is_01())? sc_lv<1>(): (sc_biguint<12>(select_ln581_reg_490.read()) < sc_biguint<12>(ap_const_lv12_36));
}

void Loop_1_proc714::thread_icmp_ln603_fu_287_p2() {
    icmp_ln603_fu_287_p2 = (!tmp_297_reg_509.read().is_01() || !ap_const_lv8_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_297_reg_509.read() == ap_const_lv8_0);
}

void Loop_1_proc714::thread_in_data_0_ack_in() {
    in_data_0_ack_in = in_data_0_state.read()[1];
}

void Loop_1_proc714::thread_in_data_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln23_fu_138_p2.read()) && 
         !((esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln23_fu_138_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in_data_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln23_fu_138_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, is_last_0_i_out_out_full_n.read()))))) {
        in_data_0_ack_out = ap_const_logic_1;
    } else {
        in_data_0_ack_out = ap_const_logic_0;
    }
}

void Loop_1_proc714::thread_in_data_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, in_data_0_sel.read())) {
        in_data_0_data_out = in_data_0_payload_B.read();
    } else {
        in_data_0_data_out = in_data_0_payload_A.read();
    }
}

void Loop_1_proc714::thread_in_data_0_load_A() {
    in_data_0_load_A = (in_data_0_state_cmp_full.read() & ~in_data_0_sel_wr.read());
}

void Loop_1_proc714::thread_in_data_0_load_B() {
    in_data_0_load_B = (in_data_0_sel_wr.read() & in_data_0_state_cmp_full.read());
}

void Loop_1_proc714::thread_in_data_0_sel() {
    in_data_0_sel = in_data_0_sel_rd.read();
}

void Loop_1_proc714::thread_in_data_0_state_cmp_full() {
    in_data_0_state_cmp_full =  (sc_logic) ((!in_data_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(in_data_0_state.read() != ap_const_lv2_1))[0];
}

void Loop_1_proc714::thread_in_data_0_vld_in() {
    in_data_0_vld_in = in_r_TVALID.read();
}

void Loop_1_proc714::thread_in_data_0_vld_out() {
    in_data_0_vld_out = in_data_0_state.read()[0];
}

void Loop_1_proc714::thread_in_last_V_0_ack_in() {
    in_last_V_0_ack_in = in_last_V_0_state.read()[1];
}

void Loop_1_proc714::thread_in_last_V_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln23_fu_138_p2.read()) && 
         !((esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln23_fu_138_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in_data_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln23_fu_138_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, is_last_0_i_out_out_full_n.read()))))) {
        in_last_V_0_ack_out = ap_const_logic_1;
    } else {
        in_last_V_0_ack_out = ap_const_logic_0;
    }
}

void Loop_1_proc714::thread_in_last_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, in_last_V_0_sel.read())) {
        in_last_V_0_data_out = in_last_V_0_payload_B.read();
    } else {
        in_last_V_0_data_out = in_last_V_0_payload_A.read();
    }
}

void Loop_1_proc714::thread_in_last_V_0_load_A() {
    in_last_V_0_load_A = (in_last_V_0_state_cmp_full.read() & ~in_last_V_0_sel_wr.read());
}

void Loop_1_proc714::thread_in_last_V_0_load_B() {
    in_last_V_0_load_B = (in_last_V_0_sel_wr.read() & in_last_V_0_state_cmp_full.read());
}

void Loop_1_proc714::thread_in_last_V_0_sel() {
    in_last_V_0_sel = in_last_V_0_sel_rd.read();
}

void Loop_1_proc714::thread_in_last_V_0_state_cmp_full() {
    in_last_V_0_state_cmp_full =  (sc_logic) ((!in_last_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(in_last_V_0_state.read() != ap_const_lv2_1))[0];
}

void Loop_1_proc714::thread_in_last_V_0_vld_in() {
    in_last_V_0_vld_in = in_r_TVALID.read();
}

void Loop_1_proc714::thread_in_last_V_0_vld_out() {
    in_last_V_0_vld_out = in_last_V_0_state.read()[0];
}

void Loop_1_proc714::thread_in_local_V_data_0_V_blk_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        in_local_V_data_0_V_blk_n = in_local_V_data_0_V_full_n.read();
    } else {
        in_local_V_data_0_V_blk_n = ap_const_logic_1;
    }
}

void Loop_1_proc714::thread_in_local_V_data_0_V_din() {
    in_local_V_data_0_V_din = (!or_ln603_2_reg_545.read()[0].is_01())? sc_lv<16>(): ((or_ln603_2_reg_545.read()[0].to_bool())? select_ln603_2_reg_550.read(): ap_const_lv16_0);
}

void Loop_1_proc714::thread_in_local_V_data_0_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(in_local_V_data_0_V_full_n.read(), ap_const_logic_1))) {
        in_local_V_data_0_V_write = ap_const_logic_1;
    } else {
        in_local_V_data_0_V_write = ap_const_logic_0;
    }
}

void Loop_1_proc714::thread_in_r_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln23_fu_138_p2.read()))) {
        in_r_TDATA_blk_n = in_data_0_state.read()[0];
    } else {
        in_r_TDATA_blk_n = ap_const_logic_1;
    }
}

void Loop_1_proc714::thread_in_r_TREADY() {
    in_r_TREADY = in_data_0_state.read()[1];
}

void Loop_1_proc714::thread_internal_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln23_fu_138_p2.read()) && 
         !((esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln23_fu_138_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in_data_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln23_fu_138_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, is_last_0_i_out_out_full_n.read()))))) {
        internal_ap_ready = ap_const_logic_1;
    } else {
        internal_ap_ready = ap_const_logic_0;
    }
}

void Loop_1_proc714::thread_is_last_0_i_out_out_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln23_fu_138_p2.read()))) {
        is_last_0_i_out_out_blk_n = is_last_0_i_out_out_full_n.read();
    } else {
        is_last_0_i_out_out_blk_n = ap_const_logic_1;
    }
}

void Loop_1_proc714::thread_is_last_0_i_out_out_din() {
    is_last_0_i_out_out_din = is_last_0_i_out_dc_0_reg_112.read();
}

void Loop_1_proc714::thread_is_last_0_i_out_out_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln23_fu_138_p2.read()) && 
         !((esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln23_fu_138_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in_data_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln23_fu_138_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, is_last_0_i_out_out_full_n.read()))))) {
        is_last_0_i_out_out_write = ap_const_logic_1;
    } else {
        is_last_0_i_out_out_write = ap_const_logic_0;
    }
}

void Loop_1_proc714::thread_or_ln28_fu_159_p2() {
    or_ln28_fu_159_p2 = (in_last_V_0_data_out.read() | is_last_0_i_out_dc_0_reg_112.read());
}

void Loop_1_proc714::thread_or_ln581_fu_353_p2() {
    or_ln581_fu_353_p2 = (or_ln582_fu_320_p2.read() | icmp_ln581_reg_484.read());
}

void Loop_1_proc714::thread_or_ln582_fu_320_p2() {
    or_ln582_fu_320_p2 = (icmp_ln571_reg_478.read() | icmp_ln582_reg_497.read());
}

void Loop_1_proc714::thread_or_ln603_1_fu_393_p2() {
    or_ln603_1_fu_393_p2 = (and_ln585_reg_519.read() | and_ln582_fu_388_p2.read());
}

void Loop_1_proc714::thread_or_ln603_2_fu_398_p2() {
    or_ln603_2_fu_398_p2 = (or_ln603_reg_529.read() | or_ln603_1_fu_393_p2.read());
}

void Loop_1_proc714::thread_or_ln603_fu_370_p2() {
    or_ln603_fu_370_p2 = (and_ln603_fu_364_p2.read() | and_ln585_1_fu_347_p2.read());
}

void Loop_1_proc714::thread_real_start() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_full_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()))) {
        real_start = ap_const_logic_0;
    } else {
        real_start = ap_start.read();
    }
}

void Loop_1_proc714::thread_select_ln570_fu_215_p3() {
    select_ln570_fu_215_p3 = (!tmp_reg_458.read()[0].is_01())? sc_lv<54>(): ((tmp_reg_458.read()[0].to_bool())? sub_ln461_fu_209_p2.read(): zext_ln569_fu_205_p1.read());
}

void Loop_1_proc714::thread_select_ln581_fu_251_p3() {
    select_ln581_fu_251_p3 = (!icmp_ln581_fu_233_p2.read()[0].is_01())? sc_lv<12>(): ((icmp_ln581_fu_233_p2.read()[0].to_bool())? add_ln581_fu_239_p2.read(): sub_ln581_fu_245_p2.read());
}

void Loop_1_proc714::thread_select_ln588_fu_312_p3() {
    select_ln588_fu_312_p3 = (!tmp_298_fu_304_p3.read()[0].is_01())? sc_lv<16>(): ((tmp_298_fu_304_p3.read()[0].to_bool())? ap_const_lv16_FFFF: ap_const_lv16_0);
}

void Loop_1_proc714::thread_select_ln603_1_fu_376_p3() {
    select_ln603_1_fu_376_p3 = (!and_ln585_fu_341_p2.read()[0].is_01())? sc_lv<16>(): ((and_ln585_fu_341_p2.read()[0].to_bool())? select_ln588_fu_312_p3.read(): trunc_ln583_reg_503.read());
}

void Loop_1_proc714::thread_select_ln603_2_fu_421_p3() {
    select_ln603_2_fu_421_p3 = (!or_ln603_reg_529.read()[0].is_01())? sc_lv<16>(): ((or_ln603_reg_529.read()[0].to_bool())? select_ln603_fu_414_p3.read(): select_ln603_1_reg_535.read());
}

void Loop_1_proc714::thread_select_ln603_fu_414_p3() {
    select_ln603_fu_414_p3 = (!and_ln603_reg_524.read()[0].is_01())? sc_lv<16>(): ((and_ln603_reg_524.read()[0].to_bool())? shl_ln604_fu_409_p2.read(): trunc_ln586_fu_406_p1.read());
}

void Loop_1_proc714::thread_sext_ln581_1_fu_403_p1() {
    sext_ln581_1_fu_403_p1 = esl_sext<16,12>(select_ln581_reg_490.read());
}

void Loop_1_proc714::thread_sext_ln581_fu_279_p1() {
    sext_ln581_fu_279_p1 = esl_sext<32,12>(select_ln581_reg_490.read());
}

void Loop_1_proc714::thread_shl_ln604_fu_409_p2() {
    shl_ln604_fu_409_p2 = (!sext_ln581_1_fu_403_p1.read().is_01())? sc_lv<16>(): trunc_ln583_reg_503.read() << (unsigned short)sext_ln581_1_fu_403_p1.read().to_uint();
}

void Loop_1_proc714::thread_start_out() {
    start_out = real_start.read();
}

void Loop_1_proc714::thread_start_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()))) {
        start_write = ap_const_logic_1;
    } else {
        start_write = ap_const_logic_0;
    }
}

void Loop_1_proc714::thread_sub_ln461_fu_209_p2() {
    sub_ln461_fu_209_p2 = (!ap_const_lv54_0.is_01() || !zext_ln569_fu_205_p1.read().is_01())? sc_lv<54>(): (sc_biguint<54>(ap_const_lv54_0) - sc_biguint<54>(zext_ln569_fu_205_p1.read()));
}

void Loop_1_proc714::thread_sub_ln575_fu_227_p2() {
    sub_ln575_fu_227_p2 = (!ap_const_lv12_433.is_01() || !zext_ln461_fu_195_p1.read().is_01())? sc_lv<12>(): (sc_biguint<12>(ap_const_lv12_433) - sc_biguint<12>(zext_ln461_fu_195_p1.read()));
}

void Loop_1_proc714::thread_sub_ln581_fu_245_p2() {
    sub_ln581_fu_245_p2 = (!ap_const_lv12_A.is_01() || !sub_ln575_fu_227_p2.read().is_01())? sc_lv<12>(): (sc_biguint<12>(ap_const_lv12_A) - sc_biguint<12>(sub_ln575_fu_227_p2.read()));
}

void Loop_1_proc714::thread_tmp_298_fu_304_p3() {
    tmp_298_fu_304_p3 = bitcast_ln696_1_fu_301_p1.read().range(31, 31);
}

void Loop_1_proc714::thread_tmp_i_fu_198_p3() {
    tmp_i_fu_198_p3 = esl_concat<1,52>(ap_const_lv1_1, trunc_ln565_reg_468.read());
}

void Loop_1_proc714::thread_trunc_ln557_fu_169_p1() {
    trunc_ln557_fu_169_p1 = bitcast_ln696_fu_165_p1.read().range(63-1, 0);
}

void Loop_1_proc714::thread_trunc_ln565_fu_191_p1() {
    trunc_ln565_fu_191_p1 = bitcast_ln696_fu_165_p1.read().range(52-1, 0);
}

void Loop_1_proc714::thread_trunc_ln583_fu_265_p1() {
    trunc_ln583_fu_265_p1 = select_ln570_fu_215_p3.read().range(16-1, 0);
}

void Loop_1_proc714::thread_trunc_ln586_fu_406_p1() {
    trunc_ln586_fu_406_p1 = ashr_ln586_reg_540.read().range(16-1, 0);
}

void Loop_1_proc714::thread_xor_ln571_fu_383_p2() {
    xor_ln571_fu_383_p2 = (icmp_ln571_reg_478.read() ^ ap_const_lv1_1);
}

void Loop_1_proc714::thread_xor_ln581_fu_358_p2() {
    xor_ln581_fu_358_p2 = (or_ln581_fu_353_p2.read() ^ ap_const_lv1_1);
}

void Loop_1_proc714::thread_xor_ln582_fu_324_p2() {
    xor_ln582_fu_324_p2 = (or_ln582_fu_320_p2.read() ^ ap_const_lv1_1);
}

void Loop_1_proc714::thread_xor_ln585_fu_335_p2() {
    xor_ln585_fu_335_p2 = (icmp_ln585_fu_282_p2.read() ^ ap_const_lv1_1);
}

void Loop_1_proc714::thread_zext_ln461_fu_195_p1() {
    zext_ln461_fu_195_p1 = esl_zext<12,11>(p_Result_i_i_reg_463.read());
}

void Loop_1_proc714::thread_zext_ln569_fu_205_p1() {
    zext_ln569_fu_205_p1 = esl_zext<54,53>(tmp_i_fu_198_p3.read());
}

void Loop_1_proc714::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln23_fu_138_p2.read()) && !((esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln23_fu_138_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in_data_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln23_fu_138_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, is_last_0_i_out_out_full_n.read()))))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln23_fu_138_p2.read()) && !((esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln23_fu_138_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in_data_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln23_fu_138_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, is_last_0_i_out_out_full_n.read()))))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && esl_seteq<1,1,1>(in_local_V_data_0_V_full_n.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state9;
            }
            break;
        default : 
            ap_NS_fsm = "XXXXXXXXX";
            break;
    }
}

}

