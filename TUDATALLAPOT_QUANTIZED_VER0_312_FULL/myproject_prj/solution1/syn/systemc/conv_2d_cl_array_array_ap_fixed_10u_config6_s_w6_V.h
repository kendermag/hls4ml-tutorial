// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __conv_2d_cl_array_array_ap_fixed_10u_config6_s_w6_V_H__
#define __conv_2d_cl_array_array_ap_fixed_10u_config6_s_w6_V_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv_2d_cl_array_array_ap_fixed_10u_config6_s_w6_V_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 239;
  static const unsigned AddressRange = 18;
  static const unsigned AddressWidth = 5;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv_2d_cl_array_array_ap_fixed_10u_config6_s_w6_V_ram) {
        ram[0] = "0b00010000000001011000000101110000000000000111011111101001101001001110110000000000000000000000010000000111101001001000000000000101111000100000000001010000000111100000010000000000010000000010010000000111110000000000000001010100010000000111000";
        ram[1] = "0b00000000000000100000000000000110010000000000000000000001101000000000000110111000000000000000010000000010000000000000000111110000000000000000000111011000000000000000000111100000000011000000000111001111010000110000000000000010011000000000000";
        ram[2] = "0b00000101010000000000011000100000111010100000100000000110110111101111010110001111000000000000011000000111111000111000000000000010011011011000000111101110111000000000000001000100000110101011111000000000000000000000011000000000000110011110010";
        ram[3] = "0b11010000000000000111001000000101111000000000110001000000000000000000000000100000000000000111000001101000000111111000000011010111100000000000000000000110110000000000000000000000000001011000000000000000000000000000110011011111110101010101101";
        ram[4] = "0b00000000000000000001100000000000000111011000000000110000011000000111101111010000000000000001000111011000000111100000000000000000001000000000010000101000000000000001100001000000000000000000000000000000000000000111100000000000110000000100000";
        ram[5] = "0b00000010000000000000000000000000000110011101110000000110100000101111101000000001010000000000011001101000010111110111100000000000000000000000000000000001001000000000000000110000000000011000000000111111000111110111100001100100000000000000000";
        ram[6] = "0b00000001010001011000000011000000000000000000000000000000000000000111110111001000011000000000000000000000000000000110110000000101110111000000000111111000000000011000000000000010110000000111011001001111101110101111010101011011010000000111111";
        ram[7] = "0b00000000000000000110010000000111110000000101111001101110011111111001011111011000000000000000000000000001000000000111011111010000100000000000000000000100111000101000000001010110101000000000000001001000000000001111100111010110001000000000000";
        ram[8] = "0b00000000000001100000000000000010101101110000000000000000000000000000011000000111010000000101010000000000010000000111011000000001101000000100000101110000000111010001100000000000000111101000000111011111110111011000011000000000000110001111011";
        ram[9] = "0b00000001000000000000000001000011111000000000000000000111000001000111011010101000000000000000000000000001001000010111110000000000000000000000000000000110110000000000000000000100010100011001011111100000000000110110101111001111011000000000000";
        ram[10] = "0b00000000000000000101111001011111101101110000000000000000100000000111011000000000000000000111010000000111110000000000000000010001011101110001000001101000001000000001100000000001011000000001010111100000100000000000000010001000000100110000000";
        ram[11] = "0b11110000000000000000000000100000000010000000000000000111101000000000000000000000000000000001110010000000000000000111011000000000000000000000101000000000000000111000000000000000000000000000000110011111010000000000000101101100110000000000000";
        ram[12] = "0b01000000000000000101111000000000110101100001000000000000111000000001010000101111101000011000000111110110110000000000000001100000000000000111001000111001101000000111111000000001110000000000010000000111111111100000000000000000000000000000000";
        ram[13] = "0b11111100000000110000000000000000000110110000000111011000000000001000000111100000000111111000001000000000000000000000010000001001111000100000000000000000000001100000000000000001001001011000000000000111000111011000000000000000000000000000000";
        ram[14] = "0b00000010111000000000011000000111101000000010011111001000111000000000001000010000000110110000000000000111000000011000000000111000000000000000000000000000000111110000010001001111111100101000001000000110110000000000010000000000000000000000000";
        ram[15] = "0b11110000000000000000000000000000000111001001110111101001001110110000011000001000000000000000000001101000000000000000000000000000000000000110110000000010000111001000000110011001110000000000000000000111110101110000001000000001010000000001101";
        ram[16] = "0b11110000000001101000000000000001110000000001111000000000000000110111110000000000000000000000000001000000000001010000000000100110010000000000000000000110110000000000000000000001111110010000000000000000000000011000000000000111010111000000000";
        ram[17] = "0b01101111010000000000000010011000000010110000000110101000000000110110010111010001000000000111100000000111110000000000000000000101110000000000101000000001111000110111101011000000101110001010011000000111101110111111101000000000000000000001000";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv_2d_cl_array_array_ap_fixed_10u_config6_s_w6_V) {


static const unsigned DataWidth = 239;
static const unsigned AddressRange = 18;
static const unsigned AddressWidth = 5;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv_2d_cl_array_array_ap_fixed_10u_config6_s_w6_V_ram* meminst;


SC_CTOR(conv_2d_cl_array_array_ap_fixed_10u_config6_s_w6_V) {
meminst = new conv_2d_cl_array_array_ap_fixed_10u_config6_s_w6_V_ram("conv_2d_cl_array_array_ap_fixed_10u_config6_s_w6_V_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv_2d_cl_array_array_ap_fixed_10u_config6_s_w6_V() {
    delete meminst;
}


};//endmodule
#endif
