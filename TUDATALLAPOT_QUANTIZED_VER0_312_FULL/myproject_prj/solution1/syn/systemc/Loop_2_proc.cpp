// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "Loop_2_proc.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic Loop_2_proc::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic Loop_2_proc::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<11> Loop_2_proc::ap_ST_fsm_state1 = "1";
const sc_lv<11> Loop_2_proc::ap_ST_fsm_state2 = "10";
const sc_lv<11> Loop_2_proc::ap_ST_fsm_state3 = "100";
const sc_lv<11> Loop_2_proc::ap_ST_fsm_state4 = "1000";
const sc_lv<11> Loop_2_proc::ap_ST_fsm_state5 = "10000";
const sc_lv<11> Loop_2_proc::ap_ST_fsm_state6 = "100000";
const sc_lv<11> Loop_2_proc::ap_ST_fsm_state7 = "1000000";
const sc_lv<11> Loop_2_proc::ap_ST_fsm_state8 = "10000000";
const sc_lv<11> Loop_2_proc::ap_ST_fsm_state9 = "100000000";
const sc_lv<11> Loop_2_proc::ap_ST_fsm_state10 = "1000000000";
const sc_lv<11> Loop_2_proc::ap_ST_fsm_state11 = "10000000000";
const sc_lv<32> Loop_2_proc::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> Loop_2_proc::ap_const_lv1_0 = "0";
const sc_lv<1> Loop_2_proc::ap_const_lv1_1 = "1";
const sc_lv<2> Loop_2_proc::ap_const_lv2_0 = "00";
const sc_lv<2> Loop_2_proc::ap_const_lv2_2 = "10";
const sc_lv<2> Loop_2_proc::ap_const_lv2_3 = "11";
const sc_lv<2> Loop_2_proc::ap_const_lv2_1 = "1";
const sc_lv<32> Loop_2_proc::ap_const_lv32_9 = "1001";
const sc_lv<32> Loop_2_proc::ap_const_lv32_A = "1010";
const sc_lv<32> Loop_2_proc::ap_const_lv32_1 = "1";
const sc_lv<32> Loop_2_proc::ap_const_lv32_2 = "10";
const sc_lv<32> Loop_2_proc::ap_const_lv32_3 = "11";
const sc_lv<32> Loop_2_proc::ap_const_lv32_4 = "100";
const sc_lv<32> Loop_2_proc::ap_const_lv32_5 = "101";
const sc_lv<32> Loop_2_proc::ap_const_lv32_6 = "110";
const sc_lv<32> Loop_2_proc::ap_const_lv32_7 = "111";
const sc_lv<32> Loop_2_proc::ap_const_lv32_8 = "1000";
const sc_lv<32> Loop_2_proc::ap_const_lv32_F = "1111";
const sc_lv<16> Loop_2_proc::ap_const_lv16_0 = "0000000000000000";
const sc_lv<16> Loop_2_proc::ap_const_lv16_FFFF = "1111111111111111";
const sc_lv<32> Loop_2_proc::ap_const_lv32_10 = "10000";
const sc_lv<5> Loop_2_proc::ap_const_lv5_9 = "1001";
const sc_lv<32> Loop_2_proc::ap_const_lv32_FFFFFFE8 = "11111111111111111111111111101000";
const sc_lv<32> Loop_2_proc::ap_const_lv32_1F = "11111";
const sc_lv<32> Loop_2_proc::ap_const_lv32_FFFFFFE7 = "11111111111111111111111111100111";
const sc_lv<32> Loop_2_proc::ap_const_lv32_19 = "11001";
const sc_lv<31> Loop_2_proc::ap_const_lv31_0 = "0000000000000000000000000000000";
const sc_lv<16> Loop_2_proc::ap_const_lv16_FFE8 = "1111111111101000";
const sc_lv<32> Loop_2_proc::ap_const_lv32_3F = "111111";
const sc_lv<8> Loop_2_proc::ap_const_lv8_7F = "1111111";
const sc_lv<8> Loop_2_proc::ap_const_lv8_7E = "1111110";
const sc_lv<8> Loop_2_proc::ap_const_lv8_6 = "110";
const sc_lv<32> Loop_2_proc::ap_const_lv32_17 = "10111";
const bool Loop_2_proc::ap_const_boolean_1 = true;

Loop_2_proc::Loop_2_proc(sc_module_name name) : sc_module(name), mVcdFile(0) {
    myproject_axi_lshr_32ns_32ns_32_2_1_U2945 = new myproject_axi_lshr_32ns_32ns_32_2_1<1,2,1,32,32,32>("myproject_axi_lshr_32ns_32ns_32_2_1_U2945");
    myproject_axi_lshr_32ns_32ns_32_2_1_U2945->clk(ap_clk);
    myproject_axi_lshr_32ns_32ns_32_2_1_U2945->reset(ap_rst);
    myproject_axi_lshr_32ns_32ns_32_2_1_U2945->din0(grp_fu_346_p0);
    myproject_axi_lshr_32ns_32ns_32_2_1_U2945->din1(add_ln958_reg_542);
    myproject_axi_lshr_32ns_32ns_32_2_1_U2945->ce(ap_var_for_const0);
    myproject_axi_lshr_32ns_32ns_32_2_1_U2945->dout(grp_fu_346_p2);
    myproject_axi_shl_64ns_32ns_64_2_1_U2946 = new myproject_axi_shl_64ns_32ns_64_2_1<1,2,0,64,32,64>("myproject_axi_shl_64ns_32ns_64_2_1_U2946");
    myproject_axi_shl_64ns_32ns_64_2_1_U2946->clk(ap_clk);
    myproject_axi_shl_64ns_32ns_64_2_1_U2946->reset(ap_rst);
    myproject_axi_shl_64ns_32ns_64_2_1_U2946->din0(grp_fu_354_p0);
    myproject_axi_shl_64ns_32ns_64_2_1_U2946->din1(grp_fu_354_p1);
    myproject_axi_shl_64ns_32ns_64_2_1_U2946->ce(ap_var_for_const0);
    myproject_axi_shl_64ns_32ns_64_2_1_U2946->dout(grp_fu_354_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_a_fu_285_p2);
    sensitive << ( icmp_ln947_1_reg_537 );
    sensitive << ( icmp_ln947_fu_280_p2 );

    SC_METHOD(thread_add_ln949_fu_303_p2);
    sensitive << ( trunc_ln944_reg_516 );

    SC_METHOD(thread_add_ln958_fu_270_p2);
    sensitive << ( sub_ln944_reg_509 );

    SC_METHOD(thread_add_ln964_fu_411_p2);
    sensitive << ( select_ln964_reg_597 );
    sensitive << ( sub_ln964_fu_406_p2 );

    SC_METHOD(thread_and_ln949_fu_315_p2);
    sensitive << ( p_Result_7_fu_308_p3 );
    sensitive << ( xor_ln949_fu_297_p2 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( is_last_0_i_loc_empty_n );

    SC_METHOD(thread_ap_block_state2);
    sensitive << ( out_r_TREADY );
    sensitive << ( out_data_1_state );
    sensitive << ( out_last_V_1_state );
    sensitive << ( tmp_data_V_empty_n );
    sensitive << ( icmp_ln37_fu_139_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( out_r_TREADY );
    sensitive << ( out_data_1_state );
    sensitive << ( out_last_V_1_state );
    sensitive << ( tmp_data_V_empty_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln37_fu_139_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( out_r_TREADY );
    sensitive << ( out_data_1_state );
    sensitive << ( out_last_V_1_state );
    sensitive << ( tmp_data_V_empty_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln37_fu_139_p2 );

    SC_METHOD(thread_bitcast_ln739_fu_439_p1);
    sensitive << ( trunc_ln738_fu_435_p1 );

    SC_METHOD(thread_grp_fu_346_p0);
    sensitive << ( tmp_V_4_reg_491 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_grp_fu_354_p0);
    sensitive << ( tmp_V_4_reg_491 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_grp_fu_354_p1);
    sensitive << ( sub_ln958_reg_547 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_icmp_ln37_fu_139_p2);
    sensitive << ( out_r_TREADY );
    sensitive << ( out_data_1_state );
    sensitive << ( out_last_V_1_state );
    sensitive << ( tmp_data_V_empty_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln37_fu_139_p2 );
    sensitive << ( j3_0_i_i_reg_128 );

    SC_METHOD(thread_icmp_ln38_fu_151_p2);
    sensitive << ( out_r_TREADY );
    sensitive << ( out_data_1_state );
    sensitive << ( out_last_V_1_state );
    sensitive << ( tmp_data_V_empty_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln37_fu_139_p2 );
    sensitive << ( j3_0_i_i_reg_128 );

    SC_METHOD(thread_icmp_ln935_fu_176_p2);
    sensitive << ( tmp_V_3_reg_469 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_icmp_ln947_1_fu_264_p2);
    sensitive << ( icmp_ln935_reg_486 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( p_Result_10_fu_259_p2 );

    SC_METHOD(thread_icmp_ln947_fu_280_p2);
    sensitive << ( icmp_ln935_reg_486 );
    sensitive << ( tmp_reg_532 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_icmp_ln958_fu_341_p2);
    sensitive << ( icmp_ln935_reg_486 );
    sensitive << ( lsb_index_reg_526 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_is_last_0_i_loc_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( is_last_0_i_loc_empty_n );

    SC_METHOD(thread_is_last_0_i_loc_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( is_last_0_i_loc_empty_n );

    SC_METHOD(thread_j_fu_145_p2);
    sensitive << ( j3_0_i_i_reg_128 );

    SC_METHOD(thread_l_fu_204_p3);
    sensitive << ( p_Result_13_fu_196_p3 );

    SC_METHOD(thread_last_fu_157_p2);
    sensitive << ( is_last_0_i_loc_read_reg_451 );
    sensitive << ( icmp_ln38_fu_151_p2 );

    SC_METHOD(thread_lsb_index_fu_235_p2);
    sensitive << ( sub_ln944_reg_509 );

    SC_METHOD(thread_lshr_ln947_fu_253_p2);
    sensitive << ( zext_ln947_fu_250_p1 );

    SC_METHOD(thread_m_1_fu_363_p3);
    sensitive << ( icmp_ln958_reg_567 );
    sensitive << ( shl_ln958_reg_582 );
    sensitive << ( zext_ln958_fu_360_p1 );

    SC_METHOD(thread_m_2_fu_372_p2);
    sensitive << ( zext_ln961_fu_369_p1 );
    sensitive << ( m_1_fu_363_p3 );

    SC_METHOD(thread_m_6_fu_403_p1);
    sensitive << ( m_5_reg_587 );

    SC_METHOD(thread_or_ln949_fu_321_p2);
    sensitive << ( and_ln949_fu_315_p2 );
    sensitive << ( a_fu_285_p2 );

    SC_METHOD(thread_or_ln_i_i_fu_327_p3);
    sensitive << ( or_ln949_fu_321_p2 );

    SC_METHOD(thread_out_data_1_ack_in);
    sensitive << ( out_data_1_state );

    SC_METHOD(thread_out_data_1_ack_out);
    sensitive << ( out_r_TREADY );

    SC_METHOD(thread_out_data_1_data_out);
    sensitive << ( out_data_1_payload_A );
    sensitive << ( out_data_1_payload_B );
    sensitive << ( out_data_1_sel );

    SC_METHOD(thread_out_data_1_load_A);
    sensitive << ( out_data_1_sel_wr );
    sensitive << ( out_data_1_state_cmp_full );

    SC_METHOD(thread_out_data_1_load_B);
    sensitive << ( out_data_1_sel_wr );
    sensitive << ( out_data_1_state_cmp_full );

    SC_METHOD(thread_out_data_1_sel);
    sensitive << ( out_data_1_sel_rd );

    SC_METHOD(thread_out_data_1_state_cmp_full);
    sensitive << ( out_data_1_state );

    SC_METHOD(thread_out_data_1_vld_in);
    sensitive << ( out_last_V_1_ack_in );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_out_data_1_vld_out);
    sensitive << ( out_data_1_state );

    SC_METHOD(thread_out_last_V_1_ack_in);
    sensitive << ( out_last_V_1_state );

    SC_METHOD(thread_out_last_V_1_ack_out);
    sensitive << ( out_r_TREADY );

    SC_METHOD(thread_out_last_V_1_data_out);
    sensitive << ( out_last_V_1_payload_A );
    sensitive << ( out_last_V_1_payload_B );
    sensitive << ( out_last_V_1_sel );

    SC_METHOD(thread_out_last_V_1_load_A);
    sensitive << ( out_last_V_1_sel_wr );
    sensitive << ( out_last_V_1_state_cmp_full );

    SC_METHOD(thread_out_last_V_1_load_B);
    sensitive << ( out_last_V_1_sel_wr );
    sensitive << ( out_last_V_1_state_cmp_full );

    SC_METHOD(thread_out_last_V_1_sel);
    sensitive << ( out_last_V_1_sel_rd );

    SC_METHOD(thread_out_last_V_1_state_cmp_full);
    sensitive << ( out_last_V_1_state );

    SC_METHOD(thread_out_last_V_1_vld_in);
    sensitive << ( out_last_V_1_ack_in );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_out_last_V_1_vld_out);
    sensitive << ( out_last_V_1_state );

    SC_METHOD(thread_out_r_TDATA);
    sensitive << ( out_data_1_data_out );

    SC_METHOD(thread_out_r_TDATA_blk_n);
    sensitive << ( out_data_1_state );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_out_r_TLAST);
    sensitive << ( out_last_V_1_data_out );

    SC_METHOD(thread_out_r_TVALID);
    sensitive << ( out_last_V_1_state );

    SC_METHOD(thread_p_Result_10_fu_259_p2);
    sensitive << ( tmp_V_4_reg_491 );
    sensitive << ( lshr_ln947_fu_253_p2 );

    SC_METHOD(thread_p_Result_13_fu_196_p3);
    sensitive << ( p_Result_s_fu_186_p4 );

    SC_METHOD(thread_p_Result_14_fu_423_p5);
    sensitive << ( m_6_fu_403_p1 );
    sensitive << ( tmp_518_i_i_fu_416_p3 );

    SC_METHOD(thread_p_Result_7_fu_308_p3);
    sensitive << ( tmp_V_4_reg_491 );
    sensitive << ( add_ln949_fu_303_p2 );

    SC_METHOD(thread_p_Result_s_fu_186_p4);
    sensitive << ( tmp_V_4_fu_181_p3 );

    SC_METHOD(thread_select_ln935_fu_443_p3);
    sensitive << ( icmp_ln935_reg_486 );
    sensitive << ( bitcast_ln739_fu_439_p1 );

    SC_METHOD(thread_select_ln964_fu_396_p3);
    sensitive << ( tmp_296_reg_592 );

    SC_METHOD(thread_sub_ln944_fu_216_p2);
    sensitive << ( l_reg_499 );

    SC_METHOD(thread_sub_ln947_fu_229_p2);
    sensitive << ( trunc_ln947_fu_225_p1 );

    SC_METHOD(thread_sub_ln958_fu_275_p2);
    sensitive << ( sub_ln944_reg_509 );

    SC_METHOD(thread_sub_ln964_fu_406_p2);
    sensitive << ( trunc_ln943_reg_504 );

    SC_METHOD(thread_tmp_295_fu_290_p3);
    sensitive << ( lsb_index_reg_526 );

    SC_METHOD(thread_tmp_518_i_i_fu_416_p3);
    sensitive << ( p_Result_12_reg_475 );
    sensitive << ( add_ln964_fu_411_p2 );

    SC_METHOD(thread_tmp_V_4_fu_181_p3);
    sensitive << ( tmp_V_3_reg_469 );
    sensitive << ( p_Result_12_reg_475 );
    sensitive << ( tmp_V_reg_481 );

    SC_METHOD(thread_tmp_V_fu_170_p2);
    sensitive << ( tmp_data_V_dout );

    SC_METHOD(thread_tmp_data_V_blk_n);
    sensitive << ( tmp_data_V_empty_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln37_fu_139_p2 );

    SC_METHOD(thread_tmp_data_V_read);
    sensitive << ( out_r_TREADY );
    sensitive << ( out_data_1_state );
    sensitive << ( out_last_V_1_state );
    sensitive << ( tmp_data_V_empty_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln37_fu_139_p2 );

    SC_METHOD(thread_trunc_ln738_fu_435_p1);
    sensitive << ( p_Result_14_fu_423_p5 );

    SC_METHOD(thread_trunc_ln943_fu_212_p1);
    sensitive << ( l_fu_204_p3 );

    SC_METHOD(thread_trunc_ln944_fu_221_p1);
    sensitive << ( sub_ln944_fu_216_p2 );

    SC_METHOD(thread_trunc_ln947_fu_225_p1);
    sensitive << ( sub_ln944_fu_216_p2 );

    SC_METHOD(thread_xor_ln949_fu_297_p2);
    sensitive << ( tmp_295_fu_290_p3 );

    SC_METHOD(thread_zext_ln947_fu_250_p1);
    sensitive << ( sub_ln947_reg_521 );

    SC_METHOD(thread_zext_ln958_fu_360_p1);
    sensitive << ( lshr_ln958_reg_577 );

    SC_METHOD(thread_zext_ln961_fu_369_p1);
    sensitive << ( or_ln_i_i_reg_552 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( out_r_TREADY );
    sensitive << ( out_data_1_state );
    sensitive << ( out_last_V_1_ack_in );
    sensitive << ( out_last_V_1_state );
    sensitive << ( is_last_0_i_loc_empty_n );
    sensitive << ( tmp_data_V_empty_n );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln37_fu_139_p2 );

    SC_THREAD(thread_ap_var_for_const0);

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "00000000001";
    out_data_1_sel_rd = SC_LOGIC_0;
    out_data_1_sel_wr = SC_LOGIC_0;
    out_data_1_state = "00";
    out_last_V_1_sel_rd = SC_LOGIC_0;
    out_last_V_1_sel_wr = SC_LOGIC_0;
    out_last_V_1_state = "00";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "Loop_2_proc_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, out_r_TDATA, "(port)out_r_TDATA");
    sc_trace(mVcdFile, out_r_TVALID, "(port)out_r_TVALID");
    sc_trace(mVcdFile, out_r_TREADY, "(port)out_r_TREADY");
    sc_trace(mVcdFile, out_r_TLAST, "(port)out_r_TLAST");
    sc_trace(mVcdFile, is_last_0_i_loc_dout, "(port)is_last_0_i_loc_dout");
    sc_trace(mVcdFile, is_last_0_i_loc_empty_n, "(port)is_last_0_i_loc_empty_n");
    sc_trace(mVcdFile, is_last_0_i_loc_read, "(port)is_last_0_i_loc_read");
    sc_trace(mVcdFile, tmp_data_V_dout, "(port)tmp_data_V_dout");
    sc_trace(mVcdFile, tmp_data_V_empty_n, "(port)tmp_data_V_empty_n");
    sc_trace(mVcdFile, tmp_data_V_read, "(port)tmp_data_V_read");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, out_data_1_data_out, "out_data_1_data_out");
    sc_trace(mVcdFile, out_data_1_vld_in, "out_data_1_vld_in");
    sc_trace(mVcdFile, out_data_1_vld_out, "out_data_1_vld_out");
    sc_trace(mVcdFile, out_data_1_ack_in, "out_data_1_ack_in");
    sc_trace(mVcdFile, out_data_1_ack_out, "out_data_1_ack_out");
    sc_trace(mVcdFile, out_data_1_payload_A, "out_data_1_payload_A");
    sc_trace(mVcdFile, out_data_1_payload_B, "out_data_1_payload_B");
    sc_trace(mVcdFile, out_data_1_sel_rd, "out_data_1_sel_rd");
    sc_trace(mVcdFile, out_data_1_sel_wr, "out_data_1_sel_wr");
    sc_trace(mVcdFile, out_data_1_sel, "out_data_1_sel");
    sc_trace(mVcdFile, out_data_1_load_A, "out_data_1_load_A");
    sc_trace(mVcdFile, out_data_1_load_B, "out_data_1_load_B");
    sc_trace(mVcdFile, out_data_1_state, "out_data_1_state");
    sc_trace(mVcdFile, out_data_1_state_cmp_full, "out_data_1_state_cmp_full");
    sc_trace(mVcdFile, out_last_V_1_data_out, "out_last_V_1_data_out");
    sc_trace(mVcdFile, out_last_V_1_vld_in, "out_last_V_1_vld_in");
    sc_trace(mVcdFile, out_last_V_1_vld_out, "out_last_V_1_vld_out");
    sc_trace(mVcdFile, out_last_V_1_ack_in, "out_last_V_1_ack_in");
    sc_trace(mVcdFile, out_last_V_1_ack_out, "out_last_V_1_ack_out");
    sc_trace(mVcdFile, out_last_V_1_payload_A, "out_last_V_1_payload_A");
    sc_trace(mVcdFile, out_last_V_1_payload_B, "out_last_V_1_payload_B");
    sc_trace(mVcdFile, out_last_V_1_sel_rd, "out_last_V_1_sel_rd");
    sc_trace(mVcdFile, out_last_V_1_sel_wr, "out_last_V_1_sel_wr");
    sc_trace(mVcdFile, out_last_V_1_sel, "out_last_V_1_sel");
    sc_trace(mVcdFile, out_last_V_1_load_A, "out_last_V_1_load_A");
    sc_trace(mVcdFile, out_last_V_1_load_B, "out_last_V_1_load_B");
    sc_trace(mVcdFile, out_last_V_1_state, "out_last_V_1_state");
    sc_trace(mVcdFile, out_last_V_1_state_cmp_full, "out_last_V_1_state_cmp_full");
    sc_trace(mVcdFile, out_r_TDATA_blk_n, "out_r_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, is_last_0_i_loc_blk_n, "is_last_0_i_loc_blk_n");
    sc_trace(mVcdFile, tmp_data_V_blk_n, "tmp_data_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, icmp_ln37_fu_139_p2, "icmp_ln37_fu_139_p2");
    sc_trace(mVcdFile, is_last_0_i_loc_read_reg_451, "is_last_0_i_loc_read_reg_451");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, j_fu_145_p2, "j_fu_145_p2");
    sc_trace(mVcdFile, j_reg_459, "j_reg_459");
    sc_trace(mVcdFile, ap_block_state2, "ap_block_state2");
    sc_trace(mVcdFile, last_fu_157_p2, "last_fu_157_p2");
    sc_trace(mVcdFile, last_reg_464, "last_reg_464");
    sc_trace(mVcdFile, tmp_V_3_reg_469, "tmp_V_3_reg_469");
    sc_trace(mVcdFile, p_Result_12_reg_475, "p_Result_12_reg_475");
    sc_trace(mVcdFile, tmp_V_fu_170_p2, "tmp_V_fu_170_p2");
    sc_trace(mVcdFile, tmp_V_reg_481, "tmp_V_reg_481");
    sc_trace(mVcdFile, icmp_ln935_fu_176_p2, "icmp_ln935_fu_176_p2");
    sc_trace(mVcdFile, icmp_ln935_reg_486, "icmp_ln935_reg_486");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, tmp_V_4_fu_181_p3, "tmp_V_4_fu_181_p3");
    sc_trace(mVcdFile, tmp_V_4_reg_491, "tmp_V_4_reg_491");
    sc_trace(mVcdFile, l_fu_204_p3, "l_fu_204_p3");
    sc_trace(mVcdFile, l_reg_499, "l_reg_499");
    sc_trace(mVcdFile, trunc_ln943_fu_212_p1, "trunc_ln943_fu_212_p1");
    sc_trace(mVcdFile, trunc_ln943_reg_504, "trunc_ln943_reg_504");
    sc_trace(mVcdFile, sub_ln944_fu_216_p2, "sub_ln944_fu_216_p2");
    sc_trace(mVcdFile, sub_ln944_reg_509, "sub_ln944_reg_509");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, trunc_ln944_fu_221_p1, "trunc_ln944_fu_221_p1");
    sc_trace(mVcdFile, trunc_ln944_reg_516, "trunc_ln944_reg_516");
    sc_trace(mVcdFile, sub_ln947_fu_229_p2, "sub_ln947_fu_229_p2");
    sc_trace(mVcdFile, sub_ln947_reg_521, "sub_ln947_reg_521");
    sc_trace(mVcdFile, lsb_index_fu_235_p2, "lsb_index_fu_235_p2");
    sc_trace(mVcdFile, lsb_index_reg_526, "lsb_index_reg_526");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, tmp_reg_532, "tmp_reg_532");
    sc_trace(mVcdFile, icmp_ln947_1_fu_264_p2, "icmp_ln947_1_fu_264_p2");
    sc_trace(mVcdFile, icmp_ln947_1_reg_537, "icmp_ln947_1_reg_537");
    sc_trace(mVcdFile, add_ln958_fu_270_p2, "add_ln958_fu_270_p2");
    sc_trace(mVcdFile, add_ln958_reg_542, "add_ln958_reg_542");
    sc_trace(mVcdFile, sub_ln958_fu_275_p2, "sub_ln958_fu_275_p2");
    sc_trace(mVcdFile, sub_ln958_reg_547, "sub_ln958_reg_547");
    sc_trace(mVcdFile, or_ln_i_i_fu_327_p3, "or_ln_i_i_fu_327_p3");
    sc_trace(mVcdFile, or_ln_i_i_reg_552, "or_ln_i_i_reg_552");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, icmp_ln958_fu_341_p2, "icmp_ln958_fu_341_p2");
    sc_trace(mVcdFile, icmp_ln958_reg_567, "icmp_ln958_reg_567");
    sc_trace(mVcdFile, grp_fu_346_p2, "grp_fu_346_p2");
    sc_trace(mVcdFile, lshr_ln958_reg_577, "lshr_ln958_reg_577");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, grp_fu_354_p2, "grp_fu_354_p2");
    sc_trace(mVcdFile, shl_ln958_reg_582, "shl_ln958_reg_582");
    sc_trace(mVcdFile, m_5_reg_587, "m_5_reg_587");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, tmp_296_reg_592, "tmp_296_reg_592");
    sc_trace(mVcdFile, select_ln964_fu_396_p3, "select_ln964_fu_396_p3");
    sc_trace(mVcdFile, select_ln964_reg_597, "select_ln964_reg_597");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, select_ln935_fu_443_p3, "select_ln935_fu_443_p3");
    sc_trace(mVcdFile, j3_0_i_i_reg_128, "j3_0_i_i_reg_128");
    sc_trace(mVcdFile, icmp_ln38_fu_151_p2, "icmp_ln38_fu_151_p2");
    sc_trace(mVcdFile, p_Result_s_fu_186_p4, "p_Result_s_fu_186_p4");
    sc_trace(mVcdFile, p_Result_13_fu_196_p3, "p_Result_13_fu_196_p3");
    sc_trace(mVcdFile, trunc_ln947_fu_225_p1, "trunc_ln947_fu_225_p1");
    sc_trace(mVcdFile, zext_ln947_fu_250_p1, "zext_ln947_fu_250_p1");
    sc_trace(mVcdFile, lshr_ln947_fu_253_p2, "lshr_ln947_fu_253_p2");
    sc_trace(mVcdFile, p_Result_10_fu_259_p2, "p_Result_10_fu_259_p2");
    sc_trace(mVcdFile, icmp_ln947_fu_280_p2, "icmp_ln947_fu_280_p2");
    sc_trace(mVcdFile, tmp_295_fu_290_p3, "tmp_295_fu_290_p3");
    sc_trace(mVcdFile, add_ln949_fu_303_p2, "add_ln949_fu_303_p2");
    sc_trace(mVcdFile, p_Result_7_fu_308_p3, "p_Result_7_fu_308_p3");
    sc_trace(mVcdFile, xor_ln949_fu_297_p2, "xor_ln949_fu_297_p2");
    sc_trace(mVcdFile, and_ln949_fu_315_p2, "and_ln949_fu_315_p2");
    sc_trace(mVcdFile, a_fu_285_p2, "a_fu_285_p2");
    sc_trace(mVcdFile, or_ln949_fu_321_p2, "or_ln949_fu_321_p2");
    sc_trace(mVcdFile, grp_fu_346_p0, "grp_fu_346_p0");
    sc_trace(mVcdFile, grp_fu_354_p0, "grp_fu_354_p0");
    sc_trace(mVcdFile, grp_fu_354_p1, "grp_fu_354_p1");
    sc_trace(mVcdFile, zext_ln958_fu_360_p1, "zext_ln958_fu_360_p1");
    sc_trace(mVcdFile, zext_ln961_fu_369_p1, "zext_ln961_fu_369_p1");
    sc_trace(mVcdFile, m_1_fu_363_p3, "m_1_fu_363_p3");
    sc_trace(mVcdFile, m_2_fu_372_p2, "m_2_fu_372_p2");
    sc_trace(mVcdFile, sub_ln964_fu_406_p2, "sub_ln964_fu_406_p2");
    sc_trace(mVcdFile, add_ln964_fu_411_p2, "add_ln964_fu_411_p2");
    sc_trace(mVcdFile, m_6_fu_403_p1, "m_6_fu_403_p1");
    sc_trace(mVcdFile, tmp_518_i_i_fu_416_p3, "tmp_518_i_i_fu_416_p3");
    sc_trace(mVcdFile, p_Result_14_fu_423_p5, "p_Result_14_fu_423_p5");
    sc_trace(mVcdFile, trunc_ln738_fu_435_p1, "trunc_ln738_fu_435_p1");
    sc_trace(mVcdFile, bitcast_ln739_fu_439_p1, "bitcast_ln739_fu_439_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

Loop_2_proc::~Loop_2_proc() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete myproject_axi_lshr_32ns_32ns_32_2_1_U2945;
    delete myproject_axi_shl_64ns_32ns_64_2_1_U2946;
}

void Loop_2_proc::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void Loop_2_proc::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                    !(esl_seteq<1,2,2>(out_data_1_state.read(), ap_const_lv2_1) || esl_seteq<1,2,2>(ap_const_lv2_1, out_last_V_1_state.read()) || (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln37_fu_139_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, tmp_data_V_empty_n.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, out_r_TREADY.read()) && 
  esl_seteq<1,2,2>(out_data_1_state.read(), ap_const_lv2_3)) || (esl_seteq<1,1,1>(ap_const_logic_0, out_r_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, out_last_V_1_state.read()))) && 
                    esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln37_fu_139_p2.read()))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, is_last_0_i_loc_empty_n.read())))) {
        j3_0_i_i_reg_128 = ap_const_lv2_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
                esl_seteq<1,1,1>(out_last_V_1_ack_in.read(), ap_const_logic_1))) {
        j3_0_i_i_reg_128 = j_reg_459.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        out_data_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, out_data_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, out_data_1_vld_out.read()))) {
            out_data_1_sel_rd =  (sc_logic) (~out_data_1_sel_rd.read());
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        out_data_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, out_data_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, out_data_1_ack_in.read()))) {
            out_data_1_sel_wr =  (sc_logic) (~out_data_1_sel_wr.read());
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        out_data_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, out_data_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, out_data_1_ack_out.read()) && 
              esl_seteq<1,2,2>(out_data_1_state.read(), ap_const_lv2_3)) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, out_data_1_vld_in.read()) && 
              esl_seteq<1,2,2>(out_data_1_state.read(), ap_const_lv2_2)))) {
            out_data_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_data_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, out_r_TREADY.read()) && 
                     esl_seteq<1,2,2>(out_data_1_state.read(), ap_const_lv2_3)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, out_r_TREADY.read()) && 
                     esl_seteq<1,2,2>(out_data_1_state.read(), ap_const_lv2_1)))) {
            out_data_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_data_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(out_data_1_state.read(), ap_const_lv2_2)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, out_data_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(out_data_1_state.read(), ap_const_lv2_1)) || 
                    (esl_seteq<1,2,2>(out_data_1_state.read(), ap_const_lv2_3) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, out_data_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, out_r_TREADY.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, out_data_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, out_data_1_ack_out.read()))))) {
            out_data_1_state = ap_const_lv2_3;
        } else {
            out_data_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        out_last_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, out_last_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, out_last_V_1_vld_out.read()))) {
            out_last_V_1_sel_rd =  (sc_logic) (~out_last_V_1_sel_rd.read());
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        out_last_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, out_last_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, out_last_V_1_ack_in.read()))) {
            out_last_V_1_sel_wr =  (sc_logic) (~out_last_V_1_sel_wr.read());
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        out_last_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, out_last_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, out_last_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, out_last_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, out_last_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, out_last_V_1_state.read())))) {
            out_last_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_last_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, out_r_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, out_last_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, out_r_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_last_V_1_state.read())))) {
            out_last_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_last_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, out_last_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, out_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_last_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, out_last_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, out_last_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, out_r_TREADY.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, out_last_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, out_last_V_1_ack_out.read()))))) {
            out_last_V_1_state = ap_const_lv2_3;
        } else {
            out_last_V_1_state = ap_const_lv2_2;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln935_reg_486.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        add_ln958_reg_542 = add_ln958_fu_270_p2.read();
        icmp_ln947_1_reg_537 = icmp_ln947_1_fu_264_p2.read();
        lsb_index_reg_526 = lsb_index_fu_235_p2.read();
        sub_ln958_reg_547 = sub_ln958_fu_275_p2.read();
        tmp_reg_532 = lsb_index_fu_235_p2.read().range(31, 1);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        icmp_ln935_reg_486 = icmp_ln935_fu_176_p2.read();
        l_reg_499 = l_fu_204_p3.read();
        tmp_V_4_reg_491 = tmp_V_4_fu_181_p3.read();
        trunc_ln943_reg_504 = trunc_ln943_fu_212_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln935_reg_486.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        icmp_ln958_reg_567 = icmp_ln958_fu_341_p2.read();
        or_ln_i_i_reg_552 = or_ln_i_i_fu_327_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, is_last_0_i_loc_empty_n.read())))) {
        is_last_0_i_loc_read_reg_451 = is_last_0_i_loc_dout.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && !(esl_seteq<1,2,2>(out_data_1_state.read(), ap_const_lv2_1) || esl_seteq<1,2,2>(ap_const_lv2_1, out_last_V_1_state.read()) || (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln37_fu_139_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, tmp_data_V_empty_n.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, out_r_TREADY.read()) && 
  esl_seteq<1,2,2>(out_data_1_state.read(), ap_const_lv2_3)) || (esl_seteq<1,1,1>(ap_const_logic_0, out_r_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, out_last_V_1_state.read()))))) {
        j_reg_459 = j_fu_145_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln37_fu_139_p2.read()) && !(esl_seteq<1,2,2>(out_data_1_state.read(), ap_const_lv2_1) || esl_seteq<1,2,2>(ap_const_lv2_1, out_last_V_1_state.read()) || (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln37_fu_139_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, tmp_data_V_empty_n.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, out_r_TREADY.read()) && 
  esl_seteq<1,2,2>(out_data_1_state.read(), ap_const_lv2_3)) || (esl_seteq<1,1,1>(ap_const_logic_0, out_r_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, out_last_V_1_state.read()))))) {
        last_reg_464 = last_fu_157_p2.read();
        p_Result_12_reg_475 = tmp_data_V_dout.read().range(15, 15);
        tmp_V_3_reg_469 = tmp_data_V_dout.read();
        tmp_V_reg_481 = tmp_V_fu_170_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln935_reg_486.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        lshr_ln958_reg_577 = grp_fu_346_p2.read();
        shl_ln958_reg_582 = grp_fu_354_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln935_reg_486.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        m_5_reg_587 = m_2_fu_372_p2.read().range(63, 1);
        tmp_296_reg_592 = m_2_fu_372_p2.read().range(25, 25);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, out_data_1_load_A.read())) {
        out_data_1_payload_A = select_ln935_fu_443_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, out_data_1_load_B.read())) {
        out_data_1_payload_B = select_ln935_fu_443_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, out_last_V_1_load_A.read())) {
        out_last_V_1_payload_A = last_reg_464.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, out_last_V_1_load_B.read())) {
        out_last_V_1_payload_B = last_reg_464.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln935_reg_486.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        select_ln964_reg_597 = select_ln964_fu_396_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln935_reg_486.read()))) {
        sub_ln944_reg_509 = sub_ln944_fu_216_p2.read();
        sub_ln947_reg_521 = sub_ln947_fu_229_p2.read();
        trunc_ln944_reg_516 = trunc_ln944_fu_221_p1.read();
    }
}

void Loop_2_proc::thread_a_fu_285_p2() {
    a_fu_285_p2 = (icmp_ln947_fu_280_p2.read() & icmp_ln947_1_reg_537.read());
}

void Loop_2_proc::thread_add_ln949_fu_303_p2() {
    add_ln949_fu_303_p2 = (!ap_const_lv16_FFE8.is_01() || !trunc_ln944_reg_516.read().is_01())? sc_lv<16>(): (sc_bigint<16>(ap_const_lv16_FFE8) + sc_biguint<16>(trunc_ln944_reg_516.read()));
}

void Loop_2_proc::thread_add_ln958_fu_270_p2() {
    add_ln958_fu_270_p2 = (!ap_const_lv32_FFFFFFE7.is_01() || !sub_ln944_reg_509.read().is_01())? sc_lv<32>(): (sc_bigint<32>(ap_const_lv32_FFFFFFE7) + sc_biguint<32>(sub_ln944_reg_509.read()));
}

void Loop_2_proc::thread_add_ln964_fu_411_p2() {
    add_ln964_fu_411_p2 = (!sub_ln964_fu_406_p2.read().is_01() || !select_ln964_reg_597.read().is_01())? sc_lv<8>(): (sc_biguint<8>(sub_ln964_fu_406_p2.read()) + sc_biguint<8>(select_ln964_reg_597.read()));
}

void Loop_2_proc::thread_and_ln949_fu_315_p2() {
    and_ln949_fu_315_p2 = (p_Result_7_fu_308_p3.read() & xor_ln949_fu_297_p2.read());
}

void Loop_2_proc::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void Loop_2_proc::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void Loop_2_proc::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void Loop_2_proc::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void Loop_2_proc::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void Loop_2_proc::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void Loop_2_proc::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void Loop_2_proc::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void Loop_2_proc::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void Loop_2_proc::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void Loop_2_proc::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void Loop_2_proc::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, is_last_0_i_loc_empty_n.read()));
}

void Loop_2_proc::thread_ap_block_state2() {
    ap_block_state2 = (esl_seteq<1,2,2>(out_data_1_state.read(), ap_const_lv2_1) || esl_seteq<1,2,2>(ap_const_lv2_1, out_last_V_1_state.read()) || (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln37_fu_139_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, tmp_data_V_empty_n.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, out_r_TREADY.read()) && 
  esl_seteq<1,2,2>(out_data_1_state.read(), ap_const_lv2_3)) || (esl_seteq<1,1,1>(ap_const_logic_0, out_r_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, out_last_V_1_state.read())));
}

void Loop_2_proc::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !(esl_seteq<1,2,2>(out_data_1_state.read(), ap_const_lv2_1) || esl_seteq<1,2,2>(ap_const_lv2_1, out_last_V_1_state.read()) || (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln37_fu_139_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, tmp_data_V_empty_n.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, out_r_TREADY.read()) && 
  esl_seteq<1,2,2>(out_data_1_state.read(), ap_const_lv2_3)) || (esl_seteq<1,1,1>(ap_const_logic_0, out_r_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, out_last_V_1_state.read()))) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln37_fu_139_p2.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void Loop_2_proc::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void Loop_2_proc::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !(esl_seteq<1,2,2>(out_data_1_state.read(), ap_const_lv2_1) || esl_seteq<1,2,2>(ap_const_lv2_1, out_last_V_1_state.read()) || (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln37_fu_139_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, tmp_data_V_empty_n.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, out_r_TREADY.read()) && 
  esl_seteq<1,2,2>(out_data_1_state.read(), ap_const_lv2_3)) || (esl_seteq<1,1,1>(ap_const_logic_0, out_r_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, out_last_V_1_state.read()))) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln37_fu_139_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void Loop_2_proc::thread_bitcast_ln739_fu_439_p1() {
    bitcast_ln739_fu_439_p1 = trunc_ln738_fu_435_p1.read();
}

void Loop_2_proc::thread_grp_fu_346_p0() {
    grp_fu_346_p0 = esl_zext<32,16>(tmp_V_4_reg_491.read());
}

void Loop_2_proc::thread_grp_fu_354_p0() {
    grp_fu_354_p0 = esl_zext<64,16>(tmp_V_4_reg_491.read());
}

void Loop_2_proc::thread_grp_fu_354_p1() {
    grp_fu_354_p1 = esl_zext<64,32>(sub_ln958_reg_547.read());
}

void Loop_2_proc::thread_icmp_ln37_fu_139_p2() {
    icmp_ln37_fu_139_p2 = (!j3_0_i_i_reg_128.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(j3_0_i_i_reg_128.read() == ap_const_lv2_3);
}

void Loop_2_proc::thread_icmp_ln38_fu_151_p2() {
    icmp_ln38_fu_151_p2 = (!j3_0_i_i_reg_128.read().is_01() || !ap_const_lv2_2.is_01())? sc_lv<1>(): sc_lv<1>(j3_0_i_i_reg_128.read() == ap_const_lv2_2);
}

void Loop_2_proc::thread_icmp_ln935_fu_176_p2() {
    icmp_ln935_fu_176_p2 = (!tmp_V_3_reg_469.read().is_01() || !ap_const_lv16_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_V_3_reg_469.read() == ap_const_lv16_0);
}

void Loop_2_proc::thread_icmp_ln947_1_fu_264_p2() {
    icmp_ln947_1_fu_264_p2 = (!p_Result_10_fu_259_p2.read().is_01() || !ap_const_lv16_0.is_01())? sc_lv<1>(): sc_lv<1>(p_Result_10_fu_259_p2.read() != ap_const_lv16_0);
}

void Loop_2_proc::thread_icmp_ln947_fu_280_p2() {
    icmp_ln947_fu_280_p2 = (!tmp_reg_532.read().is_01() || !ap_const_lv31_0.is_01())? sc_lv<1>(): (sc_bigint<31>(tmp_reg_532.read()) > sc_bigint<31>(ap_const_lv31_0));
}

void Loop_2_proc::thread_icmp_ln958_fu_341_p2() {
    icmp_ln958_fu_341_p2 = (!lsb_index_reg_526.read().is_01() || !ap_const_lv32_0.is_01())? sc_lv<1>(): (sc_bigint<32>(lsb_index_reg_526.read()) > sc_bigint<32>(ap_const_lv32_0));
}

void Loop_2_proc::thread_is_last_0_i_loc_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        is_last_0_i_loc_blk_n = is_last_0_i_loc_empty_n.read();
    } else {
        is_last_0_i_loc_blk_n = ap_const_logic_1;
    }
}

void Loop_2_proc::thread_is_last_0_i_loc_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, is_last_0_i_loc_empty_n.read())))) {
        is_last_0_i_loc_read = ap_const_logic_1;
    } else {
        is_last_0_i_loc_read = ap_const_logic_0;
    }
}

void Loop_2_proc::thread_j_fu_145_p2() {
    j_fu_145_p2 = (!j3_0_i_i_reg_128.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(j3_0_i_i_reg_128.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void Loop_2_proc::thread_l_fu_204_p3() {
    l_fu_204_p3 = esl_cttz<32,32>(p_Result_13_fu_196_p3.read());
}

void Loop_2_proc::thread_last_fu_157_p2() {
    last_fu_157_p2 = (is_last_0_i_loc_read_reg_451.read() & icmp_ln38_fu_151_p2.read());
}

void Loop_2_proc::thread_lsb_index_fu_235_p2() {
    lsb_index_fu_235_p2 = (!ap_const_lv32_FFFFFFE8.is_01() || !sub_ln944_reg_509.read().is_01())? sc_lv<32>(): (sc_bigint<32>(ap_const_lv32_FFFFFFE8) + sc_biguint<32>(sub_ln944_reg_509.read()));
}

void Loop_2_proc::thread_lshr_ln947_fu_253_p2() {
    lshr_ln947_fu_253_p2 = (!zext_ln947_fu_250_p1.read().is_01())? sc_lv<16>(): ap_const_lv16_FFFF >> (unsigned short)zext_ln947_fu_250_p1.read().to_uint();
}

void Loop_2_proc::thread_m_1_fu_363_p3() {
    m_1_fu_363_p3 = (!icmp_ln958_reg_567.read()[0].is_01())? sc_lv<64>(): ((icmp_ln958_reg_567.read()[0].to_bool())? zext_ln958_fu_360_p1.read(): shl_ln958_reg_582.read());
}

void Loop_2_proc::thread_m_2_fu_372_p2() {
    m_2_fu_372_p2 = (!zext_ln961_fu_369_p1.read().is_01() || !m_1_fu_363_p3.read().is_01())? sc_lv<64>(): (sc_biguint<64>(zext_ln961_fu_369_p1.read()) + sc_biguint<64>(m_1_fu_363_p3.read()));
}

void Loop_2_proc::thread_m_6_fu_403_p1() {
    m_6_fu_403_p1 = esl_zext<64,63>(m_5_reg_587.read());
}

void Loop_2_proc::thread_or_ln949_fu_321_p2() {
    or_ln949_fu_321_p2 = (and_ln949_fu_315_p2.read() | a_fu_285_p2.read());
}

void Loop_2_proc::thread_or_ln_i_i_fu_327_p3() {
    or_ln_i_i_fu_327_p3 = esl_concat<31,1>(ap_const_lv31_0, or_ln949_fu_321_p2.read());
}

void Loop_2_proc::thread_out_data_1_ack_in() {
    out_data_1_ack_in = out_data_1_state.read()[1];
}

void Loop_2_proc::thread_out_data_1_ack_out() {
    out_data_1_ack_out = out_r_TREADY.read();
}

void Loop_2_proc::thread_out_data_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, out_data_1_sel.read())) {
        out_data_1_data_out = out_data_1_payload_B.read();
    } else {
        out_data_1_data_out = out_data_1_payload_A.read();
    }
}

void Loop_2_proc::thread_out_data_1_load_A() {
    out_data_1_load_A = (out_data_1_state_cmp_full.read() & ~out_data_1_sel_wr.read());
}

void Loop_2_proc::thread_out_data_1_load_B() {
    out_data_1_load_B = (out_data_1_sel_wr.read() & out_data_1_state_cmp_full.read());
}

void Loop_2_proc::thread_out_data_1_sel() {
    out_data_1_sel = out_data_1_sel_rd.read();
}

void Loop_2_proc::thread_out_data_1_state_cmp_full() {
    out_data_1_state_cmp_full =  (sc_logic) ((!out_data_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(out_data_1_state.read() != ap_const_lv2_1))[0];
}

void Loop_2_proc::thread_out_data_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(out_last_V_1_ack_in.read(), ap_const_logic_1))) {
        out_data_1_vld_in = ap_const_logic_1;
    } else {
        out_data_1_vld_in = ap_const_logic_0;
    }
}

void Loop_2_proc::thread_out_data_1_vld_out() {
    out_data_1_vld_out = out_data_1_state.read()[0];
}

void Loop_2_proc::thread_out_last_V_1_ack_in() {
    out_last_V_1_ack_in = out_last_V_1_state.read()[1];
}

void Loop_2_proc::thread_out_last_V_1_ack_out() {
    out_last_V_1_ack_out = out_r_TREADY.read();
}

void Loop_2_proc::thread_out_last_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, out_last_V_1_sel.read())) {
        out_last_V_1_data_out = out_last_V_1_payload_B.read();
    } else {
        out_last_V_1_data_out = out_last_V_1_payload_A.read();
    }
}

void Loop_2_proc::thread_out_last_V_1_load_A() {
    out_last_V_1_load_A = (out_last_V_1_state_cmp_full.read() & ~out_last_V_1_sel_wr.read());
}

void Loop_2_proc::thread_out_last_V_1_load_B() {
    out_last_V_1_load_B = (out_last_V_1_sel_wr.read() & out_last_V_1_state_cmp_full.read());
}

void Loop_2_proc::thread_out_last_V_1_sel() {
    out_last_V_1_sel = out_last_V_1_sel_rd.read();
}

void Loop_2_proc::thread_out_last_V_1_state_cmp_full() {
    out_last_V_1_state_cmp_full =  (sc_logic) ((!out_last_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(out_last_V_1_state.read() != ap_const_lv2_1))[0];
}

void Loop_2_proc::thread_out_last_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(out_last_V_1_ack_in.read(), ap_const_logic_1))) {
        out_last_V_1_vld_in = ap_const_logic_1;
    } else {
        out_last_V_1_vld_in = ap_const_logic_0;
    }
}

void Loop_2_proc::thread_out_last_V_1_vld_out() {
    out_last_V_1_vld_out = out_last_V_1_state.read()[0];
}

void Loop_2_proc::thread_out_r_TDATA() {
    out_r_TDATA = out_data_1_data_out.read();
}

void Loop_2_proc::thread_out_r_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        out_r_TDATA_blk_n = out_data_1_state.read()[1];
    } else {
        out_r_TDATA_blk_n = ap_const_logic_1;
    }
}

void Loop_2_proc::thread_out_r_TLAST() {
    out_r_TLAST = out_last_V_1_data_out.read();
}

void Loop_2_proc::thread_out_r_TVALID() {
    out_r_TVALID = out_last_V_1_state.read()[0];
}

void Loop_2_proc::thread_p_Result_10_fu_259_p2() {
    p_Result_10_fu_259_p2 = (tmp_V_4_reg_491.read() & lshr_ln947_fu_253_p2.read());
}

void Loop_2_proc::thread_p_Result_13_fu_196_p3() {
    p_Result_13_fu_196_p3 = esl_concat<16,16>(ap_const_lv16_FFFF, p_Result_s_fu_186_p4.read());
}

void Loop_2_proc::thread_p_Result_14_fu_423_p5() {
    p_Result_14_fu_423_p5 = esl_partset<64,64,9,32,32>(m_6_fu_403_p1.read(), tmp_518_i_i_fu_416_p3.read(), ap_const_lv32_17, ap_const_lv32_1F);
}

void Loop_2_proc::thread_p_Result_7_fu_308_p3() {
    p_Result_7_fu_308_p3 = (!add_ln949_fu_303_p2.read().is_01() || sc_biguint<16>(add_ln949_fu_303_p2.read()).to_uint() >= 16)? sc_lv<1>(): tmp_V_4_reg_491.read().range(sc_biguint<16>(add_ln949_fu_303_p2.read()).to_uint(), sc_biguint<16>(add_ln949_fu_303_p2.read()).to_uint());
}

void Loop_2_proc::thread_p_Result_s_fu_186_p4() {
    p_Result_s_fu_186_p4 = tmp_V_4_fu_181_p3.read().range(0, 15);
}

void Loop_2_proc::thread_select_ln935_fu_443_p3() {
    select_ln935_fu_443_p3 = (!icmp_ln935_reg_486.read()[0].is_01())? sc_lv<32>(): ((icmp_ln935_reg_486.read()[0].to_bool())? ap_const_lv32_0: bitcast_ln739_fu_439_p1.read());
}

void Loop_2_proc::thread_select_ln964_fu_396_p3() {
    select_ln964_fu_396_p3 = (!tmp_296_reg_592.read()[0].is_01())? sc_lv<8>(): ((tmp_296_reg_592.read()[0].to_bool())? ap_const_lv8_7F: ap_const_lv8_7E);
}

void Loop_2_proc::thread_sub_ln944_fu_216_p2() {
    sub_ln944_fu_216_p2 = (!ap_const_lv32_10.is_01() || !l_reg_499.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_10) - sc_biguint<32>(l_reg_499.read()));
}

void Loop_2_proc::thread_sub_ln947_fu_229_p2() {
    sub_ln947_fu_229_p2 = (!ap_const_lv5_9.is_01() || !trunc_ln947_fu_225_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(ap_const_lv5_9) - sc_biguint<5>(trunc_ln947_fu_225_p1.read()));
}

void Loop_2_proc::thread_sub_ln958_fu_275_p2() {
    sub_ln958_fu_275_p2 = (!ap_const_lv32_19.is_01() || !sub_ln944_reg_509.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_19) - sc_biguint<32>(sub_ln944_reg_509.read()));
}

void Loop_2_proc::thread_sub_ln964_fu_406_p2() {
    sub_ln964_fu_406_p2 = (!ap_const_lv8_6.is_01() || !trunc_ln943_reg_504.read().is_01())? sc_lv<8>(): (sc_biguint<8>(ap_const_lv8_6) - sc_biguint<8>(trunc_ln943_reg_504.read()));
}

void Loop_2_proc::thread_tmp_295_fu_290_p3() {
    tmp_295_fu_290_p3 = lsb_index_reg_526.read().range(31, 31);
}

void Loop_2_proc::thread_tmp_518_i_i_fu_416_p3() {
    tmp_518_i_i_fu_416_p3 = esl_concat<1,8>(p_Result_12_reg_475.read(), add_ln964_fu_411_p2.read());
}

void Loop_2_proc::thread_tmp_V_4_fu_181_p3() {
    tmp_V_4_fu_181_p3 = (!p_Result_12_reg_475.read()[0].is_01())? sc_lv<16>(): ((p_Result_12_reg_475.read()[0].to_bool())? tmp_V_reg_481.read(): tmp_V_3_reg_469.read());
}

void Loop_2_proc::thread_tmp_V_fu_170_p2() {
    tmp_V_fu_170_p2 = (!ap_const_lv16_0.is_01() || !tmp_data_V_dout.read().is_01())? sc_lv<16>(): (sc_biguint<16>(ap_const_lv16_0) - sc_biguint<16>(tmp_data_V_dout.read()));
}

void Loop_2_proc::thread_tmp_data_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln37_fu_139_p2.read()))) {
        tmp_data_V_blk_n = tmp_data_V_empty_n.read();
    } else {
        tmp_data_V_blk_n = ap_const_logic_1;
    }
}

void Loop_2_proc::thread_tmp_data_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln37_fu_139_p2.read()) && 
         !(esl_seteq<1,2,2>(out_data_1_state.read(), ap_const_lv2_1) || esl_seteq<1,2,2>(ap_const_lv2_1, out_last_V_1_state.read()) || (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln37_fu_139_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, tmp_data_V_empty_n.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, out_r_TREADY.read()) && 
  esl_seteq<1,2,2>(out_data_1_state.read(), ap_const_lv2_3)) || (esl_seteq<1,1,1>(ap_const_logic_0, out_r_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, out_last_V_1_state.read()))))) {
        tmp_data_V_read = ap_const_logic_1;
    } else {
        tmp_data_V_read = ap_const_logic_0;
    }
}

void Loop_2_proc::thread_trunc_ln738_fu_435_p1() {
    trunc_ln738_fu_435_p1 = p_Result_14_fu_423_p5.read().range(32-1, 0);
}

void Loop_2_proc::thread_trunc_ln943_fu_212_p1() {
    trunc_ln943_fu_212_p1 = l_fu_204_p3.read().range(8-1, 0);
}

void Loop_2_proc::thread_trunc_ln944_fu_221_p1() {
    trunc_ln944_fu_221_p1 = sub_ln944_fu_216_p2.read().range(16-1, 0);
}

void Loop_2_proc::thread_trunc_ln947_fu_225_p1() {
    trunc_ln947_fu_225_p1 = sub_ln944_fu_216_p2.read().range(5-1, 0);
}

void Loop_2_proc::thread_xor_ln949_fu_297_p2() {
    xor_ln949_fu_297_p2 = (tmp_295_fu_290_p3.read() ^ ap_const_lv1_1);
}

void Loop_2_proc::thread_zext_ln947_fu_250_p1() {
    zext_ln947_fu_250_p1 = esl_zext<16,5>(sub_ln947_reg_521.read());
}

void Loop_2_proc::thread_zext_ln958_fu_360_p1() {
    zext_ln958_fu_360_p1 = esl_zext<64,32>(lshr_ln958_reg_577.read());
}

void Loop_2_proc::thread_zext_ln961_fu_369_p1() {
    zext_ln961_fu_369_p1 = esl_zext<64,32>(or_ln_i_i_reg_552.read());
}

void Loop_2_proc::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, is_last_0_i_loc_empty_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && !(esl_seteq<1,2,2>(out_data_1_state.read(), ap_const_lv2_1) || esl_seteq<1,2,2>(ap_const_lv2_1, out_last_V_1_state.read()) || (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln37_fu_139_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, tmp_data_V_empty_n.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, out_r_TREADY.read()) && 
  esl_seteq<1,2,2>(out_data_1_state.read(), ap_const_lv2_3)) || (esl_seteq<1,1,1>(ap_const_logic_0, out_r_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, out_last_V_1_state.read()))) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln37_fu_139_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln37_fu_139_p2.read()) && !(esl_seteq<1,2,2>(out_data_1_state.read(), ap_const_lv2_1) || esl_seteq<1,2,2>(ap_const_lv2_1, out_last_V_1_state.read()) || (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln37_fu_139_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, tmp_data_V_empty_n.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, out_r_TREADY.read()) && 
  esl_seteq<1,2,2>(out_data_1_state.read(), ap_const_lv2_3)) || (esl_seteq<1,1,1>(ap_const_logic_0, out_r_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, out_last_V_1_state.read()))))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(out_last_V_1_ack_in.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state11;
            } else {
                ap_NS_fsm = ap_ST_fsm_state10;
            }
            break;
        case 1024 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && esl_seteq<1,1,1>(out_last_V_1_ack_in.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state11;
            }
            break;
        default : 
            ap_NS_fsm = "XXXXXXXXXXX";
            break;
    }
}

}

