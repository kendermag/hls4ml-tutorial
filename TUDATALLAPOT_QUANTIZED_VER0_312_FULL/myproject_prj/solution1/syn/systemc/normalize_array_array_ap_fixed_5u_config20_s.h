// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _normalize_array_array_ap_fixed_5u_config20_s_HH_
#define _normalize_array_array_ap_fixed_5u_config20_s_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "myproject_axi_mul_14s_11ns_24_2_1.h"
#include "myproject_axi_mul_14s_12ns_24_2_1.h"

namespace ap_rtl {

struct normalize_array_array_ap_fixed_5u_config20_s : public sc_module {
    // Port declarations 40
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_in< sc_logic > start_full_n;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<14> > data_V_data_0_V_dout;
    sc_in< sc_logic > data_V_data_0_V_empty_n;
    sc_out< sc_logic > data_V_data_0_V_read;
    sc_in< sc_lv<14> > data_V_data_1_V_dout;
    sc_in< sc_logic > data_V_data_1_V_empty_n;
    sc_out< sc_logic > data_V_data_1_V_read;
    sc_in< sc_lv<14> > data_V_data_2_V_dout;
    sc_in< sc_logic > data_V_data_2_V_empty_n;
    sc_out< sc_logic > data_V_data_2_V_read;
    sc_in< sc_lv<14> > data_V_data_3_V_dout;
    sc_in< sc_logic > data_V_data_3_V_empty_n;
    sc_out< sc_logic > data_V_data_3_V_read;
    sc_in< sc_lv<14> > data_V_data_4_V_dout;
    sc_in< sc_logic > data_V_data_4_V_empty_n;
    sc_out< sc_logic > data_V_data_4_V_read;
    sc_out< sc_lv<14> > res_V_data_0_V_din;
    sc_in< sc_logic > res_V_data_0_V_full_n;
    sc_out< sc_logic > res_V_data_0_V_write;
    sc_out< sc_lv<14> > res_V_data_1_V_din;
    sc_in< sc_logic > res_V_data_1_V_full_n;
    sc_out< sc_logic > res_V_data_1_V_write;
    sc_out< sc_lv<14> > res_V_data_2_V_din;
    sc_in< sc_logic > res_V_data_2_V_full_n;
    sc_out< sc_logic > res_V_data_2_V_write;
    sc_out< sc_lv<14> > res_V_data_3_V_din;
    sc_in< sc_logic > res_V_data_3_V_full_n;
    sc_out< sc_logic > res_V_data_3_V_write;
    sc_out< sc_lv<14> > res_V_data_4_V_din;
    sc_in< sc_logic > res_V_data_4_V_full_n;
    sc_out< sc_logic > res_V_data_4_V_write;
    sc_out< sc_logic > start_out;
    sc_out< sc_logic > start_write;


    // Module declarations
    normalize_array_array_ap_fixed_5u_config20_s(sc_module_name name);
    SC_HAS_PROCESS(normalize_array_array_ap_fixed_5u_config20_s);

    ~normalize_array_array_ap_fixed_5u_config20_s();

    sc_trace_file* mVcdFile;

    myproject_axi_mul_14s_11ns_24_2_1<1,2,14,11,24>* myproject_axi_mul_14s_11ns_24_2_1_U2120;
    myproject_axi_mul_14s_11ns_24_2_1<1,2,14,11,24>* myproject_axi_mul_14s_11ns_24_2_1_U2121;
    myproject_axi_mul_14s_12ns_24_2_1<1,2,14,12,24>* myproject_axi_mul_14s_12ns_24_2_1_U2122;
    myproject_axi_mul_14s_12ns_24_2_1<1,2,14,12,24>* myproject_axi_mul_14s_12ns_24_2_1_U2123;
    myproject_axi_mul_14s_11ns_24_2_1<1,2,14,11,24>* myproject_axi_mul_14s_11ns_24_2_1_U2124;
    sc_signal< sc_logic > real_start;
    sc_signal< sc_logic > start_once_reg;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<1> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > internal_ap_ready;
    sc_signal< sc_logic > io_acc_block_signal_op5;
    sc_signal< bool > ap_block_state1_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter2;
    sc_signal< sc_logic > io_acc_block_signal_op60;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter3;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_logic > data_V_data_0_V_blk_n;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_logic > data_V_data_1_V_blk_n;
    sc_signal< sc_logic > data_V_data_2_V_blk_n;
    sc_signal< sc_logic > data_V_data_3_V_blk_n;
    sc_signal< sc_logic > data_V_data_4_V_blk_n;
    sc_signal< sc_logic > res_V_data_0_V_blk_n;
    sc_signal< sc_logic > res_V_data_1_V_blk_n;
    sc_signal< sc_logic > res_V_data_2_V_blk_n;
    sc_signal< sc_logic > res_V_data_3_V_blk_n;
    sc_signal< sc_logic > res_V_data_4_V_blk_n;
    sc_signal< sc_lv<14> > tmp_data_V_56_0_reg_474;
    sc_signal< sc_lv<14> > tmp_data_V_56_1_reg_479;
    sc_signal< sc_lv<14> > tmp_data_V_56_2_reg_484;
    sc_signal< sc_lv<14> > tmp_data_V_56_3_reg_489;
    sc_signal< sc_lv<14> > tmp_data_V_56_4_reg_494;
    sc_signal< sc_lv<14> > tmp_3_reg_524;
    sc_signal< sc_lv<14> > tmp_4_reg_529;
    sc_signal< sc_lv<14> > tmp_5_reg_534;
    sc_signal< sc_lv<14> > tmp_6_reg_539;
    sc_signal< sc_lv<14> > tmp_7_reg_544;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<11> > grp_fu_123_p1;
    sc_signal< sc_lv<11> > grp_fu_124_p1;
    sc_signal< sc_lv<12> > grp_fu_125_p1;
    sc_signal< sc_lv<12> > grp_fu_126_p1;
    sc_signal< sc_lv<11> > grp_fu_127_p1;
    sc_signal< sc_lv<24> > grp_fu_124_p2;
    sc_signal< sc_lv<24> > grp_fu_127_p2;
    sc_signal< sc_lv<24> > grp_fu_126_p2;
    sc_signal< sc_lv<24> > grp_fu_125_p2;
    sc_signal< sc_lv<24> > grp_fu_123_p2;
    sc_signal< sc_lv<16> > shl_ln_fu_354_p3;
    sc_signal< sc_lv<16> > add_ln1192_fu_361_p2;
    sc_signal< sc_lv<16> > shl_ln728_s_fu_378_p3;
    sc_signal< sc_lv<16> > add_ln1192_1_fu_385_p2;
    sc_signal< sc_lv<16> > shl_ln728_1_fu_402_p3;
    sc_signal< sc_lv<16> > add_ln1192_2_fu_409_p2;
    sc_signal< sc_lv<16> > shl_ln728_2_fu_426_p3;
    sc_signal< sc_lv<16> > add_ln1192_3_fu_433_p2;
    sc_signal< sc_lv<16> > shl_ln728_3_fu_450_p3;
    sc_signal< sc_lv<16> > add_ln1192_4_fu_457_p2;
    sc_signal< sc_logic > grp_fu_123_ce;
    sc_signal< sc_logic > grp_fu_124_ce;
    sc_signal< sc_logic > grp_fu_125_ce;
    sc_signal< sc_logic > grp_fu_126_ce;
    sc_signal< sc_logic > grp_fu_127_ce;
    sc_signal< sc_lv<1> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0_0to2;
    sc_signal< sc_logic > ap_reset_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<1> ap_ST_fsm_pp0_stage0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_0;
    static const sc_lv<24> ap_const_lv24_30E;
    static const sc_lv<24> ap_const_lv24_2D5;
    static const sc_lv<24> ap_const_lv24_428;
    static const sc_lv<24> ap_const_lv24_4A0;
    static const sc_lv<24> ap_const_lv24_27B;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<16> ap_const_lv16_8D4;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<16> ap_const_lv16_A78;
    static const sc_lv<16> ap_const_lv16_F8D4;
    static const sc_lv<16> ap_const_lv16_200C;
    static const sc_lv<16> ap_const_lv16_8C0;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln1192_1_fu_385_p2();
    void thread_add_ln1192_2_fu_409_p2();
    void thread_add_ln1192_3_fu_433_p2();
    void thread_add_ln1192_4_fu_457_p2();
    void thread_add_ln1192_fu_361_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1_pp0_stage0_iter0();
    void thread_ap_block_state2_pp0_stage0_iter1();
    void thread_ap_block_state3_pp0_stage0_iter2();
    void thread_ap_block_state4_pp0_stage0_iter3();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_enable_reg_pp0_iter0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_idle_pp0_0to2();
    void thread_ap_ready();
    void thread_ap_reset_idle_pp0();
    void thread_data_V_data_0_V_blk_n();
    void thread_data_V_data_0_V_read();
    void thread_data_V_data_1_V_blk_n();
    void thread_data_V_data_1_V_read();
    void thread_data_V_data_2_V_blk_n();
    void thread_data_V_data_2_V_read();
    void thread_data_V_data_3_V_blk_n();
    void thread_data_V_data_3_V_read();
    void thread_data_V_data_4_V_blk_n();
    void thread_data_V_data_4_V_read();
    void thread_grp_fu_123_ce();
    void thread_grp_fu_123_p1();
    void thread_grp_fu_124_ce();
    void thread_grp_fu_124_p1();
    void thread_grp_fu_125_ce();
    void thread_grp_fu_125_p1();
    void thread_grp_fu_126_ce();
    void thread_grp_fu_126_p1();
    void thread_grp_fu_127_ce();
    void thread_grp_fu_127_p1();
    void thread_internal_ap_ready();
    void thread_io_acc_block_signal_op5();
    void thread_io_acc_block_signal_op60();
    void thread_real_start();
    void thread_res_V_data_0_V_blk_n();
    void thread_res_V_data_0_V_din();
    void thread_res_V_data_0_V_write();
    void thread_res_V_data_1_V_blk_n();
    void thread_res_V_data_1_V_din();
    void thread_res_V_data_1_V_write();
    void thread_res_V_data_2_V_blk_n();
    void thread_res_V_data_2_V_din();
    void thread_res_V_data_2_V_write();
    void thread_res_V_data_3_V_blk_n();
    void thread_res_V_data_3_V_din();
    void thread_res_V_data_3_V_write();
    void thread_res_V_data_4_V_blk_n();
    void thread_res_V_data_4_V_din();
    void thread_res_V_data_4_V_write();
    void thread_shl_ln728_1_fu_402_p3();
    void thread_shl_ln728_2_fu_426_p3();
    void thread_shl_ln728_3_fu_450_p3();
    void thread_shl_ln728_s_fu_378_p3();
    void thread_shl_ln_fu_354_p3();
    void thread_start_out();
    void thread_start_write();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
