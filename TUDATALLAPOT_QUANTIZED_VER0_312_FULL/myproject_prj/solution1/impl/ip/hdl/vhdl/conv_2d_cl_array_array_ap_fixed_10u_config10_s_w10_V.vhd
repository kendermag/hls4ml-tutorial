-- ==============================================================
-- Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
-- Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
-- ==============================================================
library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity conv_2d_cl_array_array_ap_fixed_10u_config10_s_w10_V_rom is 
    generic(
             DWIDTH     : integer := 360; 
             AWIDTH     : integer := 4; 
             MEM_SIZE    : integer := 15
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of conv_2d_cl_array_array_ap_fixed_10u_config10_s_w10_V_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 => "000100110101000000001010000000111110110110000000000000000000001000110010000000000000000000000000000000000101111011001011000000001101111010000000000000000100000100001001000101000000000101110111000010000000000000111001000000000000001101000000000010000000000000000000111011000000000000000000000111001000000000001001000000000000000000000000011100001000000000111001", 
    1 => "000000000101000111010100000000000000010001000000000000110110001100111111000011000000000011111110000000111010101011000011000000000000111001000111000000000011000000000000000000110110000011000000000000000000000000000000111011000000000000001001000000000000000000000000000101000000000111001001000110011111000000000000111111011111000000000000000000000000000000001001", 
    2 => "110011000000000000001000000000000000010011000000000000000110000110001110000000000110000011000000000000111101000000000000001000000000000000000000111011110110001100000000000000111110101011000000000000001001111101111011000000000000000101000100000000000000000000001000000000000000000000000000000001111110000000000000000000000111000000111110011111111111110010000000", 
    3 => "000000000000000000000000110101000000000000111101000000000000000111000101111111000000000000110100000000000000000000000000000000111010000000001010000000000101000000111000000000000000000000111100000110010000000000000000000000000100000000111100111101000000111011000000000000000000001010000000000111101000111110000000111001000000001011000000110000000000011111010001", 
    4 => "110100001010001101000000000001000000110101000000001011000000000000000000000000000000001000111100000000111100111100000000111100001011000000001010111100000000111111000010111001000000000000001011000000000000000000000000001000000000001101000000000000110110000000000000111000000000000000000000000101111001000101000000000000000000000000000000001011001100000000111101", 
    5 => "101101000000000101000000000111111001111001000100000000000000111101000000000000000000000001000010000000000000000011000000000010000000000000000000000101000000000000000000000010001010000000000000000000000001001001000000110100000001110111000000000000001110000000000000111001001010001001111011000000110000000110000000111010000000000000000000001111000000000101000000", 
    6 => "000000000000111110000000000001000000000000000000000000000000000000000001000000000010000110000000000000111011000010000000000100110110000000111101111110000000111111000000001000000000000011000000000000000000000100000000000000111110110110000000111111111110111001001011111101000101000000000111111100000000000000000000110001101011101110000000000000111111001110011100", 
    7 => "111010000001000000000100000011000000000111111111000000000000000000000000111001000000000000111111000100000000111101111100000000000001000110110100000000000000111001000000110010000000001110000000000011000000000000000111000100000000000100001011000000000000101111000000111000000000111101111111001010000000000000101101111101000000000000000000000111110101000000000000", 
    8 => "000000000000000001000000000111110110000000111011000001000000000010000000111100111110000000000000000100000000000000000000000010000000111100111110000000111111111001111111000000000000000000111000001001000000000111000000001001000000000000001001000000000001000001000000000000000000000000000000000000000000000000000000000000000000000000111101001000000000000000000011", 
    9 => "000000000000000000001001110111010000111111000000000000000000111111000000000000000001111100000000000000000000000111000000000000000000111111001111000000111110000000000000111110000000000000110110000000000000000100111110000000000000000101000000000000000000000000000110000000000000111001111111000000000001010101000000000000000100000111000000000000000011000000000010", 
    10 => "000000000000111000110101001001000000000000001111000000110111001000000000010001000000001000000001000000000101000011001100000100001011001110111001111110000000110011001111000000000000000000000000000001000100000000111100000000000100000000111101000110001000000000000000111001110100000000000000000110001000000000000000000100000000000000000000000101000000000000000000", 
    11 => "111110000101000000111001000000110111111000000000110000000000000000000000000000000000000000000011111001111110110011000000000000000001000000000111000000000000111010000000000000111101000011000000000000000000000000110011000000000111110011111011101111111011000100000000000000000000111010000000110111111101000000111001000100000000000000110101001111101101000000000000", 
    12 => "110110000000110011000000000000000000000000111101110110000001110111000000000000000000000000000000000000111000000000000000000000111101000000001011000000000000000000111010000010000000001000111110000000000000111100000000000011111101000000000000000000000111000000000000000000000000000000111100000000111100000100111000111111000000100000000000000000001100000000011001", 
    13 => "000000000000101011111111000000111001000011000001000000000000000000000000000000000011000111111101001010000100000000000010000000000100000000001000000000111101111110111101110101110110000000000000001101111010111110000000000000000101000000000101111001000000000010110111110101001011110110000000000101001101110111000000000000000010111001111111110011000111001110111100", 
    14 => "000000000000110100111110111111000000000110000000000000000000101101111101000000110001001011000000000000001100000000000000111110000010000000111111000100000000000000001110000000000000000000000000000000000110000000000000000101000000111101111001000000000000000000000000000000000000000000111100000000111111000000000000000100000000000000000000001011010001010000000000" );


begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;

Library IEEE;
use IEEE.std_logic_1164.all;

entity conv_2d_cl_array_array_ap_fixed_10u_config10_s_w10_V is
    generic (
        DataWidth : INTEGER := 360;
        AddressRange : INTEGER := 15;
        AddressWidth : INTEGER := 4);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of conv_2d_cl_array_array_ap_fixed_10u_config10_s_w10_V is
    component conv_2d_cl_array_array_ap_fixed_10u_config10_s_w10_V_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    conv_2d_cl_array_array_ap_fixed_10u_config10_s_w10_V_rom_U :  component conv_2d_cl_array_array_ap_fixed_10u_config10_s_w10_V_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


