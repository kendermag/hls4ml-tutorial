// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module conv_2d_cl_array_array_ap_fixed_8u_config2_s (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        data_V_data_V_dout,
        data_V_data_V_empty_n,
        data_V_data_V_read,
        res_V_data_0_V_din,
        res_V_data_0_V_full_n,
        res_V_data_0_V_write,
        res_V_data_1_V_din,
        res_V_data_1_V_full_n,
        res_V_data_1_V_write,
        res_V_data_2_V_din,
        res_V_data_2_V_full_n,
        res_V_data_2_V_write,
        res_V_data_3_V_din,
        res_V_data_3_V_full_n,
        res_V_data_3_V_write,
        res_V_data_4_V_din,
        res_V_data_4_V_full_n,
        res_V_data_4_V_write,
        res_V_data_5_V_din,
        res_V_data_5_V_full_n,
        res_V_data_5_V_write,
        res_V_data_6_V_din,
        res_V_data_6_V_full_n,
        res_V_data_6_V_write,
        res_V_data_7_V_din,
        res_V_data_7_V_full_n,
        res_V_data_7_V_write
);

parameter    ap_ST_fsm_state1 = 6'd1;
parameter    ap_ST_fsm_state2 = 6'd2;
parameter    ap_ST_fsm_state3 = 6'd4;
parameter    ap_ST_fsm_pp0_stage0 = 6'd8;
parameter    ap_ST_fsm_state10 = 6'd16;
parameter    ap_ST_fsm_state11 = 6'd32;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [15:0] data_V_data_V_dout;
input   data_V_data_V_empty_n;
output   data_V_data_V_read;
output  [13:0] res_V_data_0_V_din;
input   res_V_data_0_V_full_n;
output   res_V_data_0_V_write;
output  [13:0] res_V_data_1_V_din;
input   res_V_data_1_V_full_n;
output   res_V_data_1_V_write;
output  [13:0] res_V_data_2_V_din;
input   res_V_data_2_V_full_n;
output   res_V_data_2_V_write;
output  [13:0] res_V_data_3_V_din;
input   res_V_data_3_V_full_n;
output   res_V_data_3_V_write;
output  [13:0] res_V_data_4_V_din;
input   res_V_data_4_V_full_n;
output   res_V_data_4_V_write;
output  [13:0] res_V_data_5_V_din;
input   res_V_data_5_V_full_n;
output   res_V_data_5_V_write;
output  [13:0] res_V_data_6_V_din;
input   res_V_data_6_V_full_n;
output   res_V_data_6_V_write;
output  [13:0] res_V_data_7_V_din;
input   res_V_data_7_V_full_n;
output   res_V_data_7_V_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg data_V_data_V_read;
reg res_V_data_0_V_write;
reg res_V_data_1_V_write;
reg res_V_data_2_V_write;
reg res_V_data_3_V_write;
reg res_V_data_4_V_write;
reg res_V_data_5_V_write;
reg res_V_data_6_V_write;
reg res_V_data_7_V_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
wire   [4:0] outidx9_address0;
reg    outidx9_ce0;
wire   [0:0] outidx9_q0;
reg   [15:0] kernel_data_V_1_8;
reg   [15:0] kernel_data_V_1_0;
reg   [15:0] kernel_data_V_1_1;
reg   [15:0] kernel_data_V_1_2;
reg   [15:0] kernel_data_V_1_3;
reg   [15:0] kernel_data_V_1_4;
reg   [15:0] kernel_data_V_1_5;
reg   [15:0] kernel_data_V_1_6;
reg   [15:0] kernel_data_V_1_7;
wire   [4:0] w2_V_address0;
reg    w2_V_ce0;
wire   [23:0] w2_V_q0;
reg   [31:0] pX_5;
reg   [31:0] sX_5;
reg   [31:0] pY_5;
reg   [31:0] sY_5;
reg    data_V_data_V_blk_n;
wire    ap_CS_fsm_state2;
reg    res_V_data_0_V_blk_n;
wire    ap_CS_fsm_state10;
reg   [0:0] and_ln271_2_reg_1122;
reg    res_V_data_1_V_blk_n;
reg    res_V_data_2_V_blk_n;
reg    res_V_data_3_V_blk_n;
reg    res_V_data_4_V_blk_n;
reg    res_V_data_5_V_blk_n;
reg    res_V_data_6_V_blk_n;
reg    res_V_data_7_V_blk_n;
reg   [31:0] in_index_0_i_i_i_i35_reg_234;
reg   [4:0] w_index34_reg_246;
reg   [13:0] tmp_data_0_V_3933_reg_257;
reg   [13:0] tmp_data_1_V_3231_reg_268;
reg   [13:0] tmp_data_2_V_3229_reg_279;
reg   [13:0] tmp_data_3_V_2927_reg_290;
reg   [13:0] tmp_data_4_V_2925_reg_301;
reg   [13:0] tmp_data_5_V_2623_reg_312;
reg   [13:0] tmp_data_6_V_2621_reg_323;
reg   [13:0] tmp_data_7_V_2619_reg_334;
reg   [15:0] tmp_data_0_V_reg_1085;
reg   [31:0] sX_5_load_reg_1090;
wire    ap_CS_fsm_state3;
wire   [0:0] icmp_ln271_fu_495_p2;
reg   [0:0] icmp_ln271_reg_1095;
reg   [31:0] sY_5_load_reg_1100;
wire   [0:0] icmp_ln271_1_fu_505_p2;
reg   [0:0] icmp_ln271_1_reg_1105;
reg   [31:0] pY_5_load_reg_1110;
reg   [31:0] pX_5_load_reg_1116;
wire   [0:0] and_ln271_2_fu_563_p2;
wire   [13:0] add_ln78_fu_569_p2;
reg   [13:0] add_ln78_reg_1126;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state4_pp0_stage0_iter0;
wire    ap_block_state5_pp0_stage0_iter1;
wire    ap_block_state6_pp0_stage0_iter2;
wire    ap_block_state7_pp0_stage0_iter3;
wire    ap_block_state8_pp0_stage0_iter4;
wire    ap_block_state9_pp0_stage0_iter5;
wire    ap_block_pp0_stage0_11001;
wire   [31:0] in_index_fu_581_p2;
reg   [31:0] in_index_reg_1141;
wire   [0:0] icmp_ln168_fu_587_p2;
reg   [0:0] icmp_ln168_reg_1146;
wire   [4:0] w_index_fu_593_p2;
reg   [4:0] w_index_reg_1151;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] icmp_ln151_fu_599_p2;
reg   [0:0] icmp_ln151_reg_1156;
reg   [0:0] icmp_ln151_reg_1156_pp0_iter1_reg;
reg   [0:0] icmp_ln151_reg_1156_pp0_iter2_reg;
reg   [0:0] icmp_ln151_reg_1156_pp0_iter3_reg;
reg   [0:0] icmp_ln151_reg_1156_pp0_iter4_reg;
reg   [0:0] out_index_reg_1160;
reg   [0:0] out_index_reg_1160_pp0_iter2_reg;
reg   [0:0] out_index_reg_1160_pp0_iter3_reg;
reg   [0:0] out_index_reg_1160_pp0_iter4_reg;
wire   [0:0] icmp_ln19_fu_621_p2;
reg   [0:0] icmp_ln19_reg_1176;
wire   [0:0] icmp_ln19_1_fu_627_p2;
reg   [0:0] icmp_ln19_1_reg_1181;
wire   [0:0] or_ln19_2_fu_705_p2;
reg   [0:0] or_ln19_2_reg_1186;
wire   [0:0] or_ln19_4_fu_727_p2;
reg   [0:0] or_ln19_4_reg_1191;
wire   [15:0] select_ln19_6_fu_741_p3;
reg   [15:0] select_ln19_6_reg_1196;
wire   [5:0] trunc_ln160_2_fu_749_p1;
reg  signed [5:0] trunc_ln160_2_reg_1201;
reg  signed [5:0] tmp_119_reg_1206;
reg  signed [5:0] tmp_120_reg_1211;
reg  signed [5:0] tmp_121_reg_1216;
wire   [31:0] select_ln168_fu_783_p3;
reg    ap_enable_reg_pp0_iter1;
wire  signed [21:0] sext_ln1116_fu_810_p1;
wire  signed [21:0] grp_fu_1061_p2;
reg  signed [21:0] mul_ln1118_reg_1254;
wire  signed [21:0] grp_fu_1067_p2;
reg  signed [21:0] mul_ln1118_146_reg_1259;
wire  signed [21:0] grp_fu_1073_p2;
reg  signed [21:0] mul_ln1118_147_reg_1264;
wire  signed [21:0] grp_fu_1079_p2;
reg  signed [21:0] mul_ln1118_148_reg_1269;
wire   [13:0] acc_1_V_fu_848_p3;
reg   [13:0] acc_1_V_reg_1274;
reg    ap_enable_reg_pp0_iter5;
wire   [13:0] acc_1_V_3_fu_855_p3;
reg   [13:0] acc_1_V_3_reg_1280;
wire   [13:0] acc_3_V_fu_884_p3;
reg   [13:0] acc_3_V_reg_1286;
wire   [13:0] acc_3_V_3_fu_891_p3;
reg   [13:0] acc_3_V_3_reg_1292;
wire   [13:0] acc_5_V_fu_920_p3;
reg   [13:0] acc_5_V_reg_1298;
wire   [13:0] acc_5_V_3_fu_927_p3;
reg   [13:0] acc_5_V_3_reg_1304;
wire   [13:0] acc_7_V_fu_956_p3;
reg   [13:0] acc_7_V_reg_1310;
wire   [13:0] acc_7_V_3_fu_963_p3;
reg   [13:0] acc_7_V_3_reg_1316;
wire   [0:0] icmp_ln292_fu_970_p2;
reg   [0:0] icmp_ln292_reg_1322;
wire    io_acc_block_signal_op172;
reg    ap_block_state10;
wire   [31:0] select_ln307_fu_991_p3;
reg   [31:0] select_ln307_reg_1326;
wire   [0:0] icmp_ln296_fu_1010_p2;
reg   [0:0] icmp_ln296_reg_1331;
wire   [31:0] select_ln302_fu_1031_p3;
reg   [31:0] select_ln302_reg_1335;
wire    ap_block_pp0_stage0_subdone;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_356_ap_start;
wire    call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_356_ap_done;
wire    call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_356_ap_idle;
wire    call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_356_ap_ready;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_356_ap_return_0;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_356_ap_return_1;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_356_ap_return_2;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_356_ap_return_3;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_356_ap_return_4;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_356_ap_return_5;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_356_ap_return_6;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_356_ap_return_7;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_356_ap_return_8;
reg   [13:0] indvar_flatten36_reg_222;
reg    ap_block_state1;
wire    ap_CS_fsm_state11;
wire   [0:0] icmp_ln78_fu_1055_p2;
reg   [31:0] ap_phi_mux_in_index_0_i_i_i_i35_phi_fu_238_p4;
wire    ap_block_pp0_stage0;
reg   [4:0] ap_phi_mux_w_index34_phi_fu_250_p4;
reg   [31:0] ap_phi_mux_storemerge_i_i_phi_fu_349_p4;
reg   [31:0] storemerge_i_i_reg_345;
wire   [63:0] zext_ln155_fu_575_p1;
wire   [31:0] add_ln305_fu_975_p2;
wire   [31:0] add_ln300_fu_1015_p2;
wire   [30:0] tmp_fu_515_p4;
wire   [30:0] tmp_249_fu_535_p4;
wire   [0:0] icmp_ln271_2_fu_525_p2;
wire   [0:0] icmp_ln271_3_fu_545_p2;
wire   [0:0] and_ln271_1_fu_557_p2;
wire   [0:0] and_ln271_fu_551_p2;
wire   [3:0] trunc_ln160_fu_605_p1;
wire   [0:0] icmp_ln19_7_fu_663_p2;
wire   [0:0] icmp_ln19_6_fu_657_p2;
wire   [0:0] icmp_ln19_5_fu_651_p2;
wire   [0:0] icmp_ln19_4_fu_645_p2;
wire   [0:0] icmp_ln19_3_fu_639_p2;
wire   [0:0] icmp_ln19_2_fu_633_p2;
wire   [0:0] or_ln19_fu_677_p2;
wire   [15:0] select_ln19_fu_669_p3;
wire   [15:0] select_ln19_1_fu_683_p3;
wire   [0:0] or_ln19_1_fu_691_p2;
wire   [15:0] select_ln19_2_fu_697_p3;
wire   [15:0] select_ln19_3_fu_711_p3;
wire   [15:0] select_ln19_4_fu_719_p3;
wire   [15:0] select_ln19_5_fu_733_p3;
wire   [0:0] or_ln19_3_fu_789_p2;
wire   [0:0] or_ln19_5_fu_793_p2;
wire   [0:0] or_ln19_6_fu_798_p2;
wire   [15:0] select_ln19_7_fu_803_p3;
wire   [13:0] trunc_ln_fu_826_p4;
wire   [13:0] select_ln1265_fu_835_p3;
wire   [13:0] acc_0_V_fu_842_p2;
wire   [13:0] trunc_ln708_s_fu_862_p4;
wire   [13:0] select_ln1265_1_fu_871_p3;
wire   [13:0] acc_2_V_fu_878_p2;
wire   [13:0] trunc_ln708_181_fu_898_p4;
wire   [13:0] select_ln1265_2_fu_907_p3;
wire   [13:0] acc_4_V_fu_914_p2;
wire   [13:0] trunc_ln708_182_fu_934_p4;
wire   [13:0] select_ln1265_3_fu_943_p3;
wire   [13:0] acc_6_V_fu_950_p2;
wire   [31:0] add_ln307_fu_986_p2;
wire   [31:0] add_ln302_fu_1026_p2;
wire  signed [15:0] grp_fu_1061_p1;
wire  signed [15:0] grp_fu_1067_p1;
wire  signed [15:0] grp_fu_1073_p1;
wire  signed [15:0] grp_fu_1079_p1;
reg   [5:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_285;
reg    ap_condition_294;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 6'd1;
#0 kernel_data_V_1_8 = 16'd0;
#0 kernel_data_V_1_0 = 16'd0;
#0 kernel_data_V_1_1 = 16'd0;
#0 kernel_data_V_1_2 = 16'd0;
#0 kernel_data_V_1_3 = 16'd0;
#0 kernel_data_V_1_4 = 16'd0;
#0 kernel_data_V_1_5 = 16'd0;
#0 kernel_data_V_1_6 = 16'd0;
#0 kernel_data_V_1_7 = 16'd0;
#0 pX_5 = 32'd0;
#0 sX_5 = 32'd0;
#0 pY_5 = 32'd0;
#0 sY_5 = 32'd0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
end

conv_2d_cl_array_array_ap_fixed_8u_config2_s_outidx9 #(
    .DataWidth( 1 ),
    .AddressRange( 18 ),
    .AddressWidth( 5 ))
outidx9_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(outidx9_address0),
    .ce0(outidx9_ce0),
    .q0(outidx9_q0)
);

conv_2d_cl_array_array_ap_fixed_8u_config2_s_w2_V #(
    .DataWidth( 24 ),
    .AddressRange( 18 ),
    .AddressWidth( 5 ))
w2_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(w2_V_address0),
    .ce0(w2_V_ce0),
    .q0(w2_V_q0)
);

shift_line_buffer_array_ap_fixed_1u_config2_s call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_356(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_356_ap_start),
    .ap_done(call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_356_ap_done),
    .ap_idle(call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_356_ap_idle),
    .ap_ready(call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_356_ap_ready),
    .kernel_window_8_V_write(tmp_data_0_V_reg_1085),
    .kernel_window_1_V_read(kernel_data_V_1_1),
    .kernel_window_2_V_read(kernel_data_V_1_2),
    .kernel_window_4_V_read(kernel_data_V_1_4),
    .kernel_window_5_V_read(kernel_data_V_1_5),
    .kernel_window_7_V_read(kernel_data_V_1_7),
    .kernel_window_8_V_read(kernel_data_V_1_8),
    .ap_return_0(call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_356_ap_return_0),
    .ap_return_1(call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_356_ap_return_1),
    .ap_return_2(call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_356_ap_return_2),
    .ap_return_3(call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_356_ap_return_3),
    .ap_return_4(call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_356_ap_return_4),
    .ap_return_5(call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_356_ap_return_5),
    .ap_return_6(call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_356_ap_return_6),
    .ap_return_7(call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_356_ap_return_7),
    .ap_return_8(call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_356_ap_return_8)
);

myproject_axi_mul_mul_6s_16s_22_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 22 ))
myproject_axi_mul_mul_6s_16s_22_3_1_U19(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln160_2_reg_1201),
    .din1(grp_fu_1061_p1),
    .ce(1'b1),
    .dout(grp_fu_1061_p2)
);

myproject_axi_mul_mul_6s_16s_22_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 22 ))
myproject_axi_mul_mul_6s_16s_22_3_1_U20(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_119_reg_1206),
    .din1(grp_fu_1067_p1),
    .ce(1'b1),
    .dout(grp_fu_1067_p2)
);

myproject_axi_mul_mul_6s_16s_22_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 22 ))
myproject_axi_mul_mul_6s_16s_22_3_1_U21(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_120_reg_1211),
    .din1(grp_fu_1073_p1),
    .ce(1'b1),
    .dout(grp_fu_1073_p2)
);

myproject_axi_mul_mul_6s_16s_22_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 22 ))
myproject_axi_mul_mul_6s_16s_22_3_1_U22(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_121_reg_1216),
    .din1(grp_fu_1079_p1),
    .ce(1'b1),
    .dout(grp_fu_1079_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln78_fu_1055_p2 == 1'd1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln151_fu_599_p2 == 1'd1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state3) & (1'd1 == and_ln271_2_fu_563_p2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end else if (((1'b1 == ap_CS_fsm_state3) & (1'd1 == and_ln271_2_fu_563_p2))) begin
            ap_enable_reg_pp0_iter5 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln151_reg_1156 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        in_index_0_i_i_i_i35_reg_234 <= select_ln168_fu_783_p3;
    end else if (((1'b1 == ap_CS_fsm_state3) & (1'd1 == and_ln271_2_fu_563_p2))) begin
        in_index_0_i_i_i_i35_reg_234 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln78_fu_1055_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        indvar_flatten36_reg_222 <= add_ln78_reg_1126;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten36_reg_222 <= 14'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_285)) begin
        if ((icmp_ln292_fu_970_p2 == 1'd1)) begin
            pX_5 <= 32'd0;
        end else if ((icmp_ln292_fu_970_p2 == 1'd0)) begin
            pX_5 <= add_ln305_fu_975_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_294)) begin
        if ((icmp_ln296_fu_1010_p2 == 1'd1)) begin
            pY_5 <= 32'd0;
        end else if ((icmp_ln296_fu_1010_p2 == 1'd0)) begin
            pY_5 <= add_ln300_fu_1015_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln292_reg_1322 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        sX_5 <= select_ln307_reg_1326;
    end else if ((~((io_acc_block_signal_op172 == 1'b0) & (1'd1 == and_ln271_2_reg_1122)) & (1'b1 == ap_CS_fsm_state10) & (icmp_ln292_fu_970_p2 == 1'd1))) begin
        sX_5 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((io_acc_block_signal_op172 == 1'b0) & (1'd1 == and_ln271_2_reg_1122)) & (1'b1 == ap_CS_fsm_state10) & (icmp_ln296_fu_1010_p2 == 1'd1) & (icmp_ln292_fu_970_p2 == 1'd1))) begin
        storemerge_i_i_reg_345 <= 32'd0;
    end else if (((icmp_ln296_reg_1331 == 1'd0) & (1'b1 == ap_CS_fsm_state11) & (icmp_ln292_reg_1322 == 1'd1))) begin
        storemerge_i_i_reg_345 <= select_ln302_reg_1335;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln151_reg_1156_pp0_iter4_reg == 1'd0) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_data_0_V_3933_reg_257 <= acc_1_V_3_fu_855_p3;
    end else if (((1'b1 == ap_CS_fsm_state3) & (1'd1 == and_ln271_2_fu_563_p2))) begin
        tmp_data_0_V_3933_reg_257 <= 14'd16;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln151_reg_1156_pp0_iter4_reg == 1'd0) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_data_1_V_3231_reg_268 <= acc_1_V_fu_848_p3;
    end else if (((1'b1 == ap_CS_fsm_state3) & (1'd1 == and_ln271_2_fu_563_p2))) begin
        tmp_data_1_V_3231_reg_268 <= 14'd16;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln151_reg_1156_pp0_iter4_reg == 1'd0) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_data_2_V_3229_reg_279 <= acc_3_V_3_fu_891_p3;
    end else if (((1'b1 == ap_CS_fsm_state3) & (1'd1 == and_ln271_2_fu_563_p2))) begin
        tmp_data_2_V_3229_reg_279 <= 14'd8;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln151_reg_1156_pp0_iter4_reg == 1'd0) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_data_3_V_2927_reg_290 <= acc_3_V_fu_884_p3;
    end else if (((1'b1 == ap_CS_fsm_state3) & (1'd1 == and_ln271_2_fu_563_p2))) begin
        tmp_data_3_V_2927_reg_290 <= 14'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln151_reg_1156_pp0_iter4_reg == 1'd0) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_data_4_V_2925_reg_301 <= acc_5_V_3_fu_927_p3;
    end else if (((1'b1 == ap_CS_fsm_state3) & (1'd1 == and_ln271_2_fu_563_p2))) begin
        tmp_data_4_V_2925_reg_301 <= 14'd16;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln151_reg_1156_pp0_iter4_reg == 1'd0) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_data_5_V_2623_reg_312 <= acc_5_V_fu_920_p3;
    end else if (((1'b1 == ap_CS_fsm_state3) & (1'd1 == and_ln271_2_fu_563_p2))) begin
        tmp_data_5_V_2623_reg_312 <= 14'd8;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln151_reg_1156_pp0_iter4_reg == 1'd0) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_data_6_V_2621_reg_323 <= acc_7_V_3_fu_963_p3;
    end else if (((1'b1 == ap_CS_fsm_state3) & (1'd1 == and_ln271_2_fu_563_p2))) begin
        tmp_data_6_V_2621_reg_323 <= 14'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln151_reg_1156_pp0_iter4_reg == 1'd0) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_data_7_V_2619_reg_334 <= acc_7_V_fu_956_p3;
    end else if (((1'b1 == ap_CS_fsm_state3) & (1'd1 == and_ln271_2_fu_563_p2))) begin
        tmp_data_7_V_2619_reg_334 <= 14'd16352;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln151_reg_1156 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        w_index34_reg_246 <= w_index_reg_1151;
    end else if (((1'b1 == ap_CS_fsm_state3) & (1'd1 == and_ln271_2_fu_563_p2))) begin
        w_index34_reg_246 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        acc_1_V_3_reg_1280 <= acc_1_V_3_fu_855_p3;
        acc_1_V_reg_1274 <= acc_1_V_fu_848_p3;
        acc_3_V_3_reg_1292 <= acc_3_V_3_fu_891_p3;
        acc_3_V_reg_1286 <= acc_3_V_fu_884_p3;
        acc_5_V_3_reg_1304 <= acc_5_V_3_fu_927_p3;
        acc_5_V_reg_1298 <= acc_5_V_fu_920_p3;
        acc_7_V_3_reg_1316 <= acc_7_V_3_fu_963_p3;
        acc_7_V_reg_1310 <= acc_7_V_fu_956_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        add_ln78_reg_1126 <= add_ln78_fu_569_p2;
        and_ln271_2_reg_1122 <= and_ln271_2_fu_563_p2;
        icmp_ln271_1_reg_1105 <= icmp_ln271_1_fu_505_p2;
        icmp_ln271_reg_1095 <= icmp_ln271_fu_495_p2;
        kernel_data_V_1_0 <= call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_356_ap_return_0;
        kernel_data_V_1_1 <= call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_356_ap_return_3;
        kernel_data_V_1_2 <= call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_356_ap_return_4;
        kernel_data_V_1_3 <= call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_356_ap_return_1;
        kernel_data_V_1_4 <= call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_356_ap_return_5;
        kernel_data_V_1_5 <= call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_356_ap_return_6;
        kernel_data_V_1_6 <= call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_356_ap_return_2;
        kernel_data_V_1_7 <= call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_356_ap_return_7;
        kernel_data_V_1_8 <= call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_356_ap_return_8;
        pX_5_load_reg_1116 <= pX_5;
        pY_5_load_reg_1110 <= pY_5;
        sX_5_load_reg_1090 <= sX_5;
        sY_5_load_reg_1100 <= sY_5;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln151_reg_1156 <= icmp_ln151_fu_599_p2;
        icmp_ln151_reg_1156_pp0_iter1_reg <= icmp_ln151_reg_1156;
        icmp_ln168_reg_1146 <= icmp_ln168_fu_587_p2;
        icmp_ln19_1_reg_1181 <= icmp_ln19_1_fu_627_p2;
        icmp_ln19_reg_1176 <= icmp_ln19_fu_621_p2;
        in_index_reg_1141 <= in_index_fu_581_p2;
        or_ln19_2_reg_1186 <= or_ln19_2_fu_705_p2;
        or_ln19_4_reg_1191 <= or_ln19_4_fu_727_p2;
        out_index_reg_1160 <= outidx9_q0;
        select_ln19_6_reg_1196 <= select_ln19_6_fu_741_p3;
        tmp_119_reg_1206 <= {{w2_V_q0[11:6]}};
        tmp_120_reg_1211 <= {{w2_V_q0[17:12]}};
        tmp_121_reg_1216 <= {{w2_V_q0[23:18]}};
        trunc_ln160_2_reg_1201 <= trunc_ln160_2_fu_749_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        icmp_ln151_reg_1156_pp0_iter2_reg <= icmp_ln151_reg_1156_pp0_iter1_reg;
        icmp_ln151_reg_1156_pp0_iter3_reg <= icmp_ln151_reg_1156_pp0_iter2_reg;
        icmp_ln151_reg_1156_pp0_iter4_reg <= icmp_ln151_reg_1156_pp0_iter3_reg;
        mul_ln1118_146_reg_1259 <= grp_fu_1067_p2;
        mul_ln1118_147_reg_1264 <= grp_fu_1073_p2;
        mul_ln1118_148_reg_1269 <= grp_fu_1079_p2;
        mul_ln1118_reg_1254 <= grp_fu_1061_p2;
        out_index_reg_1160_pp0_iter2_reg <= out_index_reg_1160;
        out_index_reg_1160_pp0_iter3_reg <= out_index_reg_1160_pp0_iter2_reg;
        out_index_reg_1160_pp0_iter4_reg <= out_index_reg_1160_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((~((io_acc_block_signal_op172 == 1'b0) & (1'd1 == and_ln271_2_reg_1122)) & (1'b1 == ap_CS_fsm_state10))) begin
        icmp_ln292_reg_1322 <= icmp_ln292_fu_970_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((io_acc_block_signal_op172 == 1'b0) & (1'd1 == and_ln271_2_reg_1122)) & (1'b1 == ap_CS_fsm_state10) & (icmp_ln292_fu_970_p2 == 1'd1))) begin
        icmp_ln296_reg_1331 <= icmp_ln296_fu_1010_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln292_reg_1322 == 1'd1))) begin
        sY_5 <= ap_phi_mux_storemerge_i_i_phi_fu_349_p4;
    end
end

always @ (posedge ap_clk) begin
    if ((~((io_acc_block_signal_op172 == 1'b0) & (1'd1 == and_ln271_2_reg_1122)) & (icmp_ln296_fu_1010_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10) & (icmp_ln292_fu_970_p2 == 1'd1))) begin
        select_ln302_reg_1335 <= select_ln302_fu_1031_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((~((io_acc_block_signal_op172 == 1'b0) & (1'd1 == and_ln271_2_reg_1122)) & (icmp_ln292_fu_970_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        select_ln307_reg_1326 <= select_ln307_fu_991_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((data_V_data_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp_data_0_V_reg_1085 <= data_V_data_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        w_index_reg_1151 <= w_index_fu_593_p2;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln78_fu_1055_p2 == 1'd1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln151_reg_1156 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_in_index_0_i_i_i_i35_phi_fu_238_p4 = select_ln168_fu_783_p3;
    end else begin
        ap_phi_mux_in_index_0_i_i_i_i35_phi_fu_238_p4 = in_index_0_i_i_i_i35_reg_234;
    end
end

always @ (*) begin
    if (((icmp_ln296_reg_1331 == 1'd0) & (1'b1 == ap_CS_fsm_state11) & (icmp_ln292_reg_1322 == 1'd1))) begin
        ap_phi_mux_storemerge_i_i_phi_fu_349_p4 = select_ln302_reg_1335;
    end else begin
        ap_phi_mux_storemerge_i_i_phi_fu_349_p4 = storemerge_i_i_reg_345;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln151_reg_1156 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_w_index34_phi_fu_250_p4 = w_index_reg_1151;
    end else begin
        ap_phi_mux_w_index34_phi_fu_250_p4 = w_index34_reg_246;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_356_ap_start = 1'b1;
    end else begin
        call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_356_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        data_V_data_V_blk_n = data_V_data_V_empty_n;
    end else begin
        data_V_data_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((data_V_data_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        data_V_data_V_read = 1'b1;
    end else begin
        data_V_data_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln78_fu_1055_p2 == 1'd1))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        outidx9_ce0 = 1'b1;
    end else begin
        outidx9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) & (1'd1 == and_ln271_2_reg_1122))) begin
        res_V_data_0_V_blk_n = res_V_data_0_V_full_n;
    end else begin
        res_V_data_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((io_acc_block_signal_op172 == 1'b0) & (1'd1 == and_ln271_2_reg_1122)) & (1'b1 == ap_CS_fsm_state10) & (1'd1 == and_ln271_2_reg_1122))) begin
        res_V_data_0_V_write = 1'b1;
    end else begin
        res_V_data_0_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) & (1'd1 == and_ln271_2_reg_1122))) begin
        res_V_data_1_V_blk_n = res_V_data_1_V_full_n;
    end else begin
        res_V_data_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((io_acc_block_signal_op172 == 1'b0) & (1'd1 == and_ln271_2_reg_1122)) & (1'b1 == ap_CS_fsm_state10) & (1'd1 == and_ln271_2_reg_1122))) begin
        res_V_data_1_V_write = 1'b1;
    end else begin
        res_V_data_1_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) & (1'd1 == and_ln271_2_reg_1122))) begin
        res_V_data_2_V_blk_n = res_V_data_2_V_full_n;
    end else begin
        res_V_data_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((io_acc_block_signal_op172 == 1'b0) & (1'd1 == and_ln271_2_reg_1122)) & (1'b1 == ap_CS_fsm_state10) & (1'd1 == and_ln271_2_reg_1122))) begin
        res_V_data_2_V_write = 1'b1;
    end else begin
        res_V_data_2_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) & (1'd1 == and_ln271_2_reg_1122))) begin
        res_V_data_3_V_blk_n = res_V_data_3_V_full_n;
    end else begin
        res_V_data_3_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((io_acc_block_signal_op172 == 1'b0) & (1'd1 == and_ln271_2_reg_1122)) & (1'b1 == ap_CS_fsm_state10) & (1'd1 == and_ln271_2_reg_1122))) begin
        res_V_data_3_V_write = 1'b1;
    end else begin
        res_V_data_3_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) & (1'd1 == and_ln271_2_reg_1122))) begin
        res_V_data_4_V_blk_n = res_V_data_4_V_full_n;
    end else begin
        res_V_data_4_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((io_acc_block_signal_op172 == 1'b0) & (1'd1 == and_ln271_2_reg_1122)) & (1'b1 == ap_CS_fsm_state10) & (1'd1 == and_ln271_2_reg_1122))) begin
        res_V_data_4_V_write = 1'b1;
    end else begin
        res_V_data_4_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) & (1'd1 == and_ln271_2_reg_1122))) begin
        res_V_data_5_V_blk_n = res_V_data_5_V_full_n;
    end else begin
        res_V_data_5_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((io_acc_block_signal_op172 == 1'b0) & (1'd1 == and_ln271_2_reg_1122)) & (1'b1 == ap_CS_fsm_state10) & (1'd1 == and_ln271_2_reg_1122))) begin
        res_V_data_5_V_write = 1'b1;
    end else begin
        res_V_data_5_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) & (1'd1 == and_ln271_2_reg_1122))) begin
        res_V_data_6_V_blk_n = res_V_data_6_V_full_n;
    end else begin
        res_V_data_6_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((io_acc_block_signal_op172 == 1'b0) & (1'd1 == and_ln271_2_reg_1122)) & (1'b1 == ap_CS_fsm_state10) & (1'd1 == and_ln271_2_reg_1122))) begin
        res_V_data_6_V_write = 1'b1;
    end else begin
        res_V_data_6_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) & (1'd1 == and_ln271_2_reg_1122))) begin
        res_V_data_7_V_blk_n = res_V_data_7_V_full_n;
    end else begin
        res_V_data_7_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((io_acc_block_signal_op172 == 1'b0) & (1'd1 == and_ln271_2_reg_1122)) & (1'b1 == ap_CS_fsm_state10) & (1'd1 == and_ln271_2_reg_1122))) begin
        res_V_data_7_V_write = 1'b1;
    end else begin
        res_V_data_7_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        w2_V_ce0 = 1'b1;
    end else begin
        w2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((data_V_data_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (1'd1 == and_ln271_2_fu_563_p2))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((ap_enable_reg_pp0_iter4 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((ap_enable_reg_pp0_iter4 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state10 : begin
            if ((~((io_acc_block_signal_op172 == 1'b0) & (1'd1 == and_ln271_2_reg_1122)) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln78_fu_1055_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign acc_0_V_fu_842_p2 = (trunc_ln_fu_826_p4 + select_ln1265_fu_835_p3);

assign acc_1_V_3_fu_855_p3 = ((out_index_reg_1160_pp0_iter4_reg[0:0] === 1'b1) ? tmp_data_0_V_3933_reg_257 : acc_0_V_fu_842_p2);

assign acc_1_V_fu_848_p3 = ((out_index_reg_1160_pp0_iter4_reg[0:0] === 1'b1) ? acc_0_V_fu_842_p2 : tmp_data_1_V_3231_reg_268);

assign acc_2_V_fu_878_p2 = (trunc_ln708_s_fu_862_p4 + select_ln1265_1_fu_871_p3);

assign acc_3_V_3_fu_891_p3 = ((out_index_reg_1160_pp0_iter4_reg[0:0] === 1'b1) ? tmp_data_2_V_3229_reg_279 : acc_2_V_fu_878_p2);

assign acc_3_V_fu_884_p3 = ((out_index_reg_1160_pp0_iter4_reg[0:0] === 1'b1) ? acc_2_V_fu_878_p2 : tmp_data_3_V_2927_reg_290);

assign acc_4_V_fu_914_p2 = (trunc_ln708_181_fu_898_p4 + select_ln1265_2_fu_907_p3);

assign acc_5_V_3_fu_927_p3 = ((out_index_reg_1160_pp0_iter4_reg[0:0] === 1'b1) ? tmp_data_4_V_2925_reg_301 : acc_4_V_fu_914_p2);

assign acc_5_V_fu_920_p3 = ((out_index_reg_1160_pp0_iter4_reg[0:0] === 1'b1) ? acc_4_V_fu_914_p2 : tmp_data_5_V_2623_reg_312);

assign acc_6_V_fu_950_p2 = (trunc_ln708_182_fu_934_p4 + select_ln1265_3_fu_943_p3);

assign acc_7_V_3_fu_963_p3 = ((out_index_reg_1160_pp0_iter4_reg[0:0] === 1'b1) ? tmp_data_6_V_2621_reg_323 : acc_6_V_fu_950_p2);

assign acc_7_V_fu_956_p3 = ((out_index_reg_1160_pp0_iter4_reg[0:0] === 1'b1) ? acc_6_V_fu_950_p2 : tmp_data_7_V_2619_reg_334);

assign add_ln300_fu_1015_p2 = (pY_5_load_reg_1110 + 32'd1);

assign add_ln302_fu_1026_p2 = (sY_5_load_reg_1100 + 32'd1);

assign add_ln305_fu_975_p2 = (pX_5_load_reg_1116 + 32'd1);

assign add_ln307_fu_986_p2 = (sX_5_load_reg_1090 + 32'd1);

assign add_ln78_fu_569_p2 = (indvar_flatten36_reg_222 + 14'd1);

assign and_ln271_1_fu_557_p2 = (icmp_ln271_3_fu_545_p2 & icmp_ln271_2_fu_525_p2);

assign and_ln271_2_fu_563_p2 = (and_ln271_fu_551_p2 & and_ln271_1_fu_557_p2);

assign and_ln271_fu_551_p2 = (icmp_ln271_fu_495_p2 & icmp_ln271_1_fu_505_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_block_state10 = ((io_acc_block_signal_op172 == 1'b0) & (1'd1 == and_ln271_2_reg_1122));
end

assign ap_block_state4_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_285 = (~((io_acc_block_signal_op172 == 1'b0) & (1'd1 == and_ln271_2_reg_1122)) & (1'b1 == ap_CS_fsm_state10));
end

always @ (*) begin
    ap_condition_294 = (~((io_acc_block_signal_op172 == 1'b0) & (1'd1 == and_ln271_2_reg_1122)) & (1'b1 == ap_CS_fsm_state10) & (icmp_ln292_fu_970_p2 == 1'd1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_ready = internal_ap_ready;

assign grp_fu_1061_p1 = sext_ln1116_fu_810_p1;

assign grp_fu_1067_p1 = sext_ln1116_fu_810_p1;

assign grp_fu_1073_p1 = sext_ln1116_fu_810_p1;

assign grp_fu_1079_p1 = sext_ln1116_fu_810_p1;

assign icmp_ln151_fu_599_p2 = ((ap_phi_mux_w_index34_phi_fu_250_p4 == 5'd17) ? 1'b1 : 1'b0);

assign icmp_ln168_fu_587_p2 = (($signed(in_index_fu_581_p2) > $signed(32'd8)) ? 1'b1 : 1'b0);

assign icmp_ln19_1_fu_627_p2 = ((trunc_ln160_fu_605_p1 == 4'd1) ? 1'b1 : 1'b0);

assign icmp_ln19_2_fu_633_p2 = ((trunc_ln160_fu_605_p1 == 4'd2) ? 1'b1 : 1'b0);

assign icmp_ln19_3_fu_639_p2 = ((trunc_ln160_fu_605_p1 == 4'd3) ? 1'b1 : 1'b0);

assign icmp_ln19_4_fu_645_p2 = ((trunc_ln160_fu_605_p1 == 4'd4) ? 1'b1 : 1'b0);

assign icmp_ln19_5_fu_651_p2 = ((trunc_ln160_fu_605_p1 == 4'd5) ? 1'b1 : 1'b0);

assign icmp_ln19_6_fu_657_p2 = ((trunc_ln160_fu_605_p1 == 4'd6) ? 1'b1 : 1'b0);

assign icmp_ln19_7_fu_663_p2 = ((trunc_ln160_fu_605_p1 == 4'd7) ? 1'b1 : 1'b0);

assign icmp_ln19_fu_621_p2 = ((trunc_ln160_fu_605_p1 == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln271_1_fu_505_p2 = ((sY_5 == 32'd2) ? 1'b1 : 1'b0);

assign icmp_ln271_2_fu_525_p2 = (($signed(tmp_fu_515_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln271_3_fu_545_p2 = (($signed(tmp_249_fu_535_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln271_fu_495_p2 = ((sX_5 == 32'd2) ? 1'b1 : 1'b0);

assign icmp_ln292_fu_970_p2 = ((pX_5_load_reg_1116 == 32'd17) ? 1'b1 : 1'b0);

assign icmp_ln296_fu_1010_p2 = ((pY_5_load_reg_1110 == 32'd513) ? 1'b1 : 1'b0);

assign icmp_ln78_fu_1055_p2 = ((indvar_flatten36_reg_222 == 14'd9251) ? 1'b1 : 1'b0);

assign in_index_fu_581_p2 = (32'd1 + ap_phi_mux_in_index_0_i_i_i_i35_phi_fu_238_p4);

assign io_acc_block_signal_op172 = (res_V_data_7_V_full_n & res_V_data_6_V_full_n & res_V_data_5_V_full_n & res_V_data_4_V_full_n & res_V_data_3_V_full_n & res_V_data_2_V_full_n & res_V_data_1_V_full_n & res_V_data_0_V_full_n);

assign or_ln19_1_fu_691_p2 = (icmp_ln19_5_fu_651_p2 | icmp_ln19_4_fu_645_p2);

assign or_ln19_2_fu_705_p2 = (icmp_ln19_3_fu_639_p2 | icmp_ln19_2_fu_633_p2);

assign or_ln19_3_fu_789_p2 = (icmp_ln19_reg_1176 | icmp_ln19_1_reg_1181);

assign or_ln19_4_fu_727_p2 = (or_ln19_fu_677_p2 | or_ln19_1_fu_691_p2);

assign or_ln19_5_fu_793_p2 = (or_ln19_3_fu_789_p2 | or_ln19_2_reg_1186);

assign or_ln19_6_fu_798_p2 = (or_ln19_5_fu_793_p2 | or_ln19_4_reg_1191);

assign or_ln19_fu_677_p2 = (icmp_ln19_7_fu_663_p2 | icmp_ln19_6_fu_657_p2);

assign outidx9_address0 = zext_ln155_fu_575_p1;

assign res_V_data_0_V_din = acc_1_V_3_reg_1280;

assign res_V_data_1_V_din = acc_1_V_reg_1274;

assign res_V_data_2_V_din = acc_3_V_3_reg_1292;

assign res_V_data_3_V_din = acc_3_V_reg_1286;

assign res_V_data_4_V_din = acc_5_V_3_reg_1304;

assign res_V_data_5_V_din = acc_5_V_reg_1298;

assign res_V_data_6_V_din = acc_7_V_3_reg_1316;

assign res_V_data_7_V_din = acc_7_V_reg_1310;

assign select_ln1265_1_fu_871_p3 = ((out_index_reg_1160_pp0_iter4_reg[0:0] === 1'b1) ? tmp_data_3_V_2927_reg_290 : tmp_data_2_V_3229_reg_279);

assign select_ln1265_2_fu_907_p3 = ((out_index_reg_1160_pp0_iter4_reg[0:0] === 1'b1) ? tmp_data_5_V_2623_reg_312 : tmp_data_4_V_2925_reg_301);

assign select_ln1265_3_fu_943_p3 = ((out_index_reg_1160_pp0_iter4_reg[0:0] === 1'b1) ? tmp_data_7_V_2619_reg_334 : tmp_data_6_V_2621_reg_323);

assign select_ln1265_fu_835_p3 = ((out_index_reg_1160_pp0_iter4_reg[0:0] === 1'b1) ? tmp_data_1_V_3231_reg_268 : tmp_data_0_V_3933_reg_257);

assign select_ln168_fu_783_p3 = ((icmp_ln168_reg_1146[0:0] === 1'b1) ? 32'd0 : in_index_reg_1141);

assign select_ln19_1_fu_683_p3 = ((icmp_ln19_5_fu_651_p2[0:0] === 1'b1) ? kernel_data_V_1_5 : kernel_data_V_1_4);

assign select_ln19_2_fu_697_p3 = ((icmp_ln19_3_fu_639_p2[0:0] === 1'b1) ? kernel_data_V_1_3 : kernel_data_V_1_2);

assign select_ln19_3_fu_711_p3 = ((icmp_ln19_1_fu_627_p2[0:0] === 1'b1) ? kernel_data_V_1_1 : kernel_data_V_1_0);

assign select_ln19_4_fu_719_p3 = ((or_ln19_fu_677_p2[0:0] === 1'b1) ? select_ln19_fu_669_p3 : select_ln19_1_fu_683_p3);

assign select_ln19_5_fu_733_p3 = ((or_ln19_2_fu_705_p2[0:0] === 1'b1) ? select_ln19_2_fu_697_p3 : select_ln19_3_fu_711_p3);

assign select_ln19_6_fu_741_p3 = ((or_ln19_4_fu_727_p2[0:0] === 1'b1) ? select_ln19_4_fu_719_p3 : select_ln19_5_fu_733_p3);

assign select_ln19_7_fu_803_p3 = ((or_ln19_6_fu_798_p2[0:0] === 1'b1) ? select_ln19_6_reg_1196 : kernel_data_V_1_8);

assign select_ln19_fu_669_p3 = ((icmp_ln19_7_fu_663_p2[0:0] === 1'b1) ? kernel_data_V_1_7 : kernel_data_V_1_6);

assign select_ln302_fu_1031_p3 = ((icmp_ln271_1_reg_1105[0:0] === 1'b1) ? 32'd2 : add_ln302_fu_1026_p2);

assign select_ln307_fu_991_p3 = ((icmp_ln271_reg_1095[0:0] === 1'b1) ? 32'd2 : add_ln307_fu_986_p2);

assign sext_ln1116_fu_810_p1 = $signed(select_ln19_7_fu_803_p3);

assign start_out = real_start;

assign tmp_249_fu_535_p4 = {{pX_5[31:1]}};

assign tmp_fu_515_p4 = {{pY_5[31:1]}};

assign trunc_ln160_2_fu_749_p1 = w2_V_q0[5:0];

assign trunc_ln160_fu_605_p1 = in_index_0_i_i_i_i35_reg_234[3:0];

assign trunc_ln708_181_fu_898_p4 = {{mul_ln1118_147_reg_1264[20:7]}};

assign trunc_ln708_182_fu_934_p4 = {{mul_ln1118_148_reg_1269[20:7]}};

assign trunc_ln708_s_fu_862_p4 = {{mul_ln1118_146_reg_1259[20:7]}};

assign trunc_ln_fu_826_p4 = {{mul_ln1118_reg_1254[20:7]}};

assign w2_V_address0 = zext_ln155_fu_575_p1;

assign w_index_fu_593_p2 = (5'd1 + ap_phi_mux_w_index34_phi_fu_250_p4);

assign zext_ln155_fu_575_p1 = ap_phi_mux_w_index34_phi_fu_250_p4;

endmodule //conv_2d_cl_array_array_ap_fixed_8u_config2_s
